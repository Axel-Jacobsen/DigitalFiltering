ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"main.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  25              	MX_GPIO_Init:
  26              	.LFB129:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** 
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s 			page 2


  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  40:Src/main.c    **** #include "main.h"
  41:Src/main.c    **** #include "stm32f4xx_hal.h"
  42:Src/main.c    **** 
  43:Src/main.c    **** /* USER CODE BEGIN Includes */
  44:Src/main.c    **** #include "filter.h"
  45:Src/main.c    **** #include "ssd1306.h"
  46:Src/main.c    **** #include "stdlib.h"
  47:Src/main.c    **** #include "math.h"
  48:Src/main.c    **** 
  49:Src/main.c    **** #define WINDOW_SIZE 1024
  50:Src/main.c    **** #define SAMPLING_RATE 42079
  51:Src/main.c    **** #define HIST_LENGTH 500
  52:Src/main.c    **** /* USER CODE END Includes */
  53:Src/main.c    **** 
  54:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  55:Src/main.c    **** ADC_HandleTypeDef hadc1;
  56:Src/main.c    **** DMA_HandleTypeDef hdma_adc1;
  57:Src/main.c    **** 
  58:Src/main.c    **** I2C_HandleTypeDef hi2c1;
  59:Src/main.c    **** 
  60:Src/main.c    **** TIM_HandleTypeDef htim2;
  61:Src/main.c    **** 
  62:Src/main.c    **** /* USER CODE BEGIN PV */
  63:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE END PV */
  66:Src/main.c    **** 
  67:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  68:Src/main.c    **** void SystemClock_Config(void);
  69:Src/main.c    **** static void MX_GPIO_Init(void);
  70:Src/main.c    **** static void MX_DMA_Init(void);
  71:Src/main.c    **** static void MX_ADC1_Init(void);
  72:Src/main.c    **** static void MX_I2C1_Init(void);
  73:Src/main.c    **** static void MX_TIM2_Init(void);
  74:Src/main.c    **** 
  75:Src/main.c    **** /* USER CODE BEGIN PFP */
  76:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  77:Src/main.c    **** 
  78:Src/main.c    **** /* USER CODE END PFP */
  79:Src/main.c    **** 
  80:Src/main.c    **** /* USER CODE BEGIN 0 */
  81:Src/main.c    **** volatile uint8_t dealt_with = 0;
  82:Src/main.c    **** int value_adc[1024] = {0};
  83:Src/main.c    **** 
  84:Src/main.c    **** // char *adc = (char *)malloc(13 * sizeof(char));
  85:Src/main.c    **** int calc = 0;
  86:Src/main.c    **** double value;
  87:Src/main.c    **** double prev_val;
  88:Src/main.c    **** uint32_t n = 0;
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s 			page 3


  89:Src/main.c    **** uint16_t yes_no = 0;
  90:Src/main.c    **** double d1 = 0;
  91:Src/main.c    **** double d2 = 0;
  92:Src/main.c    **** double y = 0;
  93:Src/main.c    **** double total_power = 1;
  94:Src/main.c    **** double f_step, f_step_normalized, k, normalizedfreq, w_real;
  95:Src/main.c    **** // static circ_bufsum_t cbuf;
  96:Src/main.c    **** // circ_bufsum_t cbuf;
  97:Src/main.c    **** 
  98:Src/main.c    **** /* USER CODE END 0 */
  99:Src/main.c    **** 
 100:Src/main.c    **** /**
 101:Src/main.c    ****   * @brief  The application entry point.
 102:Src/main.c    ****   *
 103:Src/main.c    ****   * @retval None
 104:Src/main.c    ****   */
 105:Src/main.c    **** int main(void)
 106:Src/main.c    **** {
 107:Src/main.c    ****   /* USER CODE BEGIN 1 */
 108:Src/main.c    **** 
 109:Src/main.c    ****   /* USER CODE END 1 */
 110:Src/main.c    **** 
 111:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
 112:Src/main.c    **** 
 113:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 114:Src/main.c    ****   HAL_Init();
 115:Src/main.c    **** 
 116:Src/main.c    ****   /* USER CODE BEGIN Init */
 117:Src/main.c    **** 
 118:Src/main.c    ****   /* USER CODE END Init */
 119:Src/main.c    **** 
 120:Src/main.c    ****   /* Configure the system clock */
 121:Src/main.c    ****   SystemClock_Config();
 122:Src/main.c    **** 
 123:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 124:Src/main.c    ****   /* USER CODE END SysInit */
 125:Src/main.c    **** 
 126:Src/main.c    ****   /* Initialize all configured peripherals */
 127:Src/main.c    ****   MX_GPIO_Init();
 128:Src/main.c    ****   MX_DMA_Init();
 129:Src/main.c    ****   MX_ADC1_Init();
 130:Src/main.c    ****   MX_I2C1_Init();
 131:Src/main.c    ****   MX_TIM2_Init();
 132:Src/main.c    ****   /* USER CODE BEGIN 2 */
 133:Src/main.c    ****   ssd1306_Init();
 134:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim2);
 135:Src/main.c    ****   HAL_ADC_Start_DMA(&hadc1, value_adc, 1024);
 136:Src/main.c    **** 
 137:Src/main.c    ****   ssd1306_Fill(Black);
 138:Src/main.c    ****   ssd1306_SetCursor(0, 0);
 139:Src/main.c    ****   ssd1306_WriteString("horray", Font_11x18, White);
 140:Src/main.c    ****   ssd1306_UpdateScreen();
 141:Src/main.c    ****   HAL_Delay(3000);
 142:Src/main.c    **** 
 143:Src/main.c    ****   f_step = SAMPLING_RATE / (double)WINDOW_SIZE;
 144:Src/main.c    ****   f_step_normalized = 1.0 / WINDOW_SIZE;
 145:Src/main.c    ****   k = 1000 / f_step;
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s 			page 4


 146:Src/main.c    ****   normalizedfreq = k * f_step_normalized;
 147:Src/main.c    ****   w_real = 2.0 * cos(2.0 * PI * normalizedfreq);
 148:Src/main.c    ****   /* USER CODE END 2 */
 149:Src/main.c    **** 
 150:Src/main.c    ****   /* Infinite loop */
 151:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 152:Src/main.c    ****   while (1)
 153:Src/main.c    ****   {
 154:Src/main.c    ****     if (calc)
 155:Src/main.c    ****     {
 156:Src/main.c    ****       value = goertzel(value_adc, SAMPLING_RATE, 1000, WINDOW_SIZE);
 157:Src/main.c    ****       char *adc = (char *)malloc(13 * sizeof(char));
 158:Src/main.c    ****       ssd1306_Fill(Black);
 159:Src/main.c    ****       ssd1306_SetCursor(0, 0);
 160:Src/main.c    ****       sprintf(adc, "n: %d", (int)n);
 161:Src/main.c    ****       ssd1306_WriteString(adc, Font_11x18, White);
 162:Src/main.c    ****       ssd1306_SetCursor(0, 18);
 163:Src/main.c    ****       sprintf(adc, "%d", (int)value_adc[0]);
 164:Src/main.c    ****       ssd1306_WriteString(adc, Font_11x18, White);
 165:Src/main.c    **** 
 166:Src/main.c    ****       int pre_decimal = (int)(value / 1);
 167:Src/main.c    ****       int post_decimal = (int)((value - (double)pre_decimal) * 100);
 168:Src/main.c    **** 
 169:Src/main.c    ****       sprintf(adc, "?: %d %d.%d", yes_no, pre_decimal, post_decimal);
 170:Src/main.c    ****       ssd1306_SetCursor(0, 36);
 171:Src/main.c    ****       ssd1306_WriteString(adc, Font_11x18, White);
 172:Src/main.c    ****       ssd1306_UpdateScreen();
 173:Src/main.c    ****       HAL_Delay(1000);
 174:Src/main.c    ****     }
 175:Src/main.c    **** 
 176:Src/main.c    ****   /* USER CODE END WHILE */
 177:Src/main.c    **** 
 178:Src/main.c    ****   /* USER CODE BEGIN 3 */
 179:Src/main.c    ****   }
 180:Src/main.c    ****   /* USER CODE END 3 */
 181:Src/main.c    **** 
 182:Src/main.c    **** }
 183:Src/main.c    **** 
 184:Src/main.c    **** /**
 185:Src/main.c    ****   * @brief System Clock Configuration
 186:Src/main.c    ****   * @retval None
 187:Src/main.c    ****   */
 188:Src/main.c    **** void SystemClock_Config(void)
 189:Src/main.c    **** {
 190:Src/main.c    **** 
 191:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 192:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 193:Src/main.c    **** 
 194:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 195:Src/main.c    ****     */
 196:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 197:Src/main.c    **** 
 198:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 199:Src/main.c    **** 
 200:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 201:Src/main.c    ****     */
 202:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s 			page 5


 203:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 204:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 205:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 206:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 207:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 208:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 84;
 209:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 210:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 211:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 212:Src/main.c    ****   {
 213:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 214:Src/main.c    ****   }
 215:Src/main.c    **** 
 216:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 217:Src/main.c    ****     */
 218:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 219:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 220:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 221:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 222:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 223:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 224:Src/main.c    **** 
 225:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 226:Src/main.c    ****   {
 227:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 228:Src/main.c    ****   }
 229:Src/main.c    **** 
 230:Src/main.c    ****     /**Configure the Systick interrupt time 
 231:Src/main.c    ****     */
 232:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 233:Src/main.c    **** 
 234:Src/main.c    ****     /**Configure the Systick 
 235:Src/main.c    ****     */
 236:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 237:Src/main.c    **** 
 238:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 239:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 240:Src/main.c    **** }
 241:Src/main.c    **** 
 242:Src/main.c    **** /* ADC1 init function */
 243:Src/main.c    **** static void MX_ADC1_Init(void)
 244:Src/main.c    **** {
 245:Src/main.c    **** 
 246:Src/main.c    ****   ADC_ChannelConfTypeDef sConfig;
 247:Src/main.c    **** 
 248:Src/main.c    ****     /**Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of co
 249:Src/main.c    ****     */
 250:Src/main.c    ****   hadc1.Instance = ADC1;
 251:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 252:Src/main.c    ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 253:Src/main.c    ****   hadc1.Init.ScanConvMode = DISABLE;
 254:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 255:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = ENABLE;
 256:Src/main.c    ****   hadc1.Init.NbrOfDiscConversion = 1;
 257:Src/main.c    ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
 258:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T2_TRGO;
 259:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s 			page 6


 260:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 261:Src/main.c    ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 262:Src/main.c    ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 263:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 264:Src/main.c    ****   {
 265:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 266:Src/main.c    ****   }
 267:Src/main.c    **** 
 268:Src/main.c    ****     /**Configure for the selected ADC regular channel its corresponding rank in the sequencer and i
 269:Src/main.c    ****     */
 270:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_0;
 271:Src/main.c    ****   sConfig.Rank = 1;
 272:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 273:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 274:Src/main.c    ****   {
 275:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 276:Src/main.c    ****   }
 277:Src/main.c    **** 
 278:Src/main.c    **** }
 279:Src/main.c    **** 
 280:Src/main.c    **** /* I2C1 init function */
 281:Src/main.c    **** static void MX_I2C1_Init(void)
 282:Src/main.c    **** {
 283:Src/main.c    **** 
 284:Src/main.c    ****   hi2c1.Instance = I2C1;
 285:Src/main.c    ****   hi2c1.Init.ClockSpeed = 100000;
 286:Src/main.c    ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 287:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
 288:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 289:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 290:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
 291:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 292:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 293:Src/main.c    ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 294:Src/main.c    ****   {
 295:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 296:Src/main.c    ****   }
 297:Src/main.c    **** 
 298:Src/main.c    **** }
 299:Src/main.c    **** 
 300:Src/main.c    **** /* TIM2 init function */
 301:Src/main.c    **** static void MX_TIM2_Init(void)
 302:Src/main.c    **** {
 303:Src/main.c    **** 
 304:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig;
 305:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
 306:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
 307:Src/main.c    **** 
 308:Src/main.c    ****   htim2.Instance = TIM2;
 309:Src/main.c    ****   htim2.Init.Prescaler = 2;
 310:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 311:Src/main.c    ****   htim2.Init.Period = 20;
 312:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 313:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 314:Src/main.c    ****   {
 315:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 316:Src/main.c    ****   }
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s 			page 7


 317:Src/main.c    **** 
 318:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 319:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 320:Src/main.c    ****   {
 321:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 322:Src/main.c    ****   }
 323:Src/main.c    **** 
 324:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 325:Src/main.c    ****   {
 326:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 327:Src/main.c    ****   }
 328:Src/main.c    **** 
 329:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_OC1;
 330:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_ENABLE;
 331:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 332:Src/main.c    ****   {
 333:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 334:Src/main.c    ****   }
 335:Src/main.c    **** 
 336:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 337:Src/main.c    ****   sConfigOC.Pulse = 0;
 338:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 339:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 340:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 341:Src/main.c    ****   {
 342:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 343:Src/main.c    ****   }
 344:Src/main.c    **** 
 345:Src/main.c    **** }
 346:Src/main.c    **** 
 347:Src/main.c    **** /** 
 348:Src/main.c    ****   * Enable DMA controller clock
 349:Src/main.c    ****   */
 350:Src/main.c    **** static void MX_DMA_Init(void) 
 351:Src/main.c    **** {
 352:Src/main.c    ****   /* DMA controller clock enable */
 353:Src/main.c    ****   __HAL_RCC_DMA2_CLK_ENABLE();
 354:Src/main.c    **** 
 355:Src/main.c    ****   /* DMA interrupt init */
 356:Src/main.c    ****   /* DMA2_Stream0_IRQn interrupt configuration */
 357:Src/main.c    ****   HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 0, 0);
 358:Src/main.c    ****   HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 359:Src/main.c    **** 
 360:Src/main.c    **** }
 361:Src/main.c    **** 
 362:Src/main.c    **** /** Pinout Configuration
 363:Src/main.c    **** */
 364:Src/main.c    **** static void MX_GPIO_Init(void)
 365:Src/main.c    **** {
  28              		.loc 1 365 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 82B0     		sub	sp, sp, #8
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s 			page 8


  36              	.LBB2:
 366:Src/main.c    **** 
 367:Src/main.c    ****   /* GPIO Ports Clock Enable */
 368:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  37              		.loc 1 368 0
  38 0002 0021     		movs	r1, #0
  39 0004 0091     		str	r1, [sp]
  40 0006 0B4B     		ldr	r3, .L3
  41 0008 1A6B     		ldr	r2, [r3, #48]
  42 000a 42F00102 		orr	r2, r2, #1
  43 000e 1A63     		str	r2, [r3, #48]
  44 0010 1A6B     		ldr	r2, [r3, #48]
  45 0012 02F00102 		and	r2, r2, #1
  46 0016 0092     		str	r2, [sp]
  47 0018 009A     		ldr	r2, [sp]
  48              	.LBE2:
  49              	.LBB3:
 369:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  50              		.loc 1 369 0
  51 001a 0191     		str	r1, [sp, #4]
  52 001c 1A6B     		ldr	r2, [r3, #48]
  53 001e 42F00202 		orr	r2, r2, #2
  54 0022 1A63     		str	r2, [r3, #48]
  55 0024 1B6B     		ldr	r3, [r3, #48]
  56 0026 03F00203 		and	r3, r3, #2
  57 002a 0193     		str	r3, [sp, #4]
  58 002c 019B     		ldr	r3, [sp, #4]
  59              	.LBE3:
 370:Src/main.c    **** 
 371:Src/main.c    **** }
  60              		.loc 1 371 0
  61 002e 02B0     		add	sp, sp, #8
  62              	.LCFI1:
  63              		.cfi_def_cfa_offset 0
  64              		@ sp needed
  65 0030 7047     		bx	lr
  66              	.L4:
  67 0032 00BF     		.align	2
  68              	.L3:
  69 0034 00380240 		.word	1073887232
  70              		.cfi_endproc
  71              	.LFE129:
  73              		.section	.text.MX_DMA_Init,"ax",%progbits
  74              		.align	2
  75              		.thumb
  76              		.thumb_func
  78              	MX_DMA_Init:
  79              	.LFB128:
 351:Src/main.c    ****   /* DMA controller clock enable */
  80              		.loc 1 351 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 8
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84 0000 00B5     		push	{lr}
  85              	.LCFI2:
  86              		.cfi_def_cfa_offset 4
  87              		.cfi_offset 14, -4
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s 			page 9


  88 0002 83B0     		sub	sp, sp, #12
  89              	.LCFI3:
  90              		.cfi_def_cfa_offset 16
  91              	.LBB4:
 353:Src/main.c    **** 
  92              		.loc 1 353 0
  93 0004 0022     		movs	r2, #0
  94 0006 0192     		str	r2, [sp, #4]
  95 0008 094B     		ldr	r3, .L7
  96 000a 196B     		ldr	r1, [r3, #48]
  97 000c 41F48001 		orr	r1, r1, #4194304
  98 0010 1963     		str	r1, [r3, #48]
  99 0012 1B6B     		ldr	r3, [r3, #48]
 100 0014 03F48003 		and	r3, r3, #4194304
 101 0018 0193     		str	r3, [sp, #4]
 102 001a 019B     		ldr	r3, [sp, #4]
 103              	.LBE4:
 357:Src/main.c    ****   HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 104              		.loc 1 357 0
 105 001c 3820     		movs	r0, #56
 106 001e 1146     		mov	r1, r2
 107 0020 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 108              	.LVL0:
 358:Src/main.c    **** 
 109              		.loc 1 358 0
 110 0024 3820     		movs	r0, #56
 111 0026 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 112              	.LVL1:
 360:Src/main.c    **** 
 113              		.loc 1 360 0
 114 002a 03B0     		add	sp, sp, #12
 115              	.LCFI4:
 116              		.cfi_def_cfa_offset 4
 117              		@ sp needed
 118 002c 5DF804FB 		ldr	pc, [sp], #4
 119              	.L8:
 120              		.align	2
 121              	.L7:
 122 0030 00380240 		.word	1073887232
 123              		.cfi_endproc
 124              	.LFE128:
 126              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 127              		.align	2
 128              		.global	HAL_ADC_ConvCpltCallback
 129              		.thumb
 130              		.thumb_func
 132              	HAL_ADC_ConvCpltCallback:
 133              	.LFB130:
 372:Src/main.c    **** 
 373:Src/main.c    **** /* USER CODE BEGIN 4 */
 374:Src/main.c    **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc)
 375:Src/main.c    **** {
 134              		.loc 1 375 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138              		@ link register save eliminated.
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s 			page 10


 139              	.LVL2:
 376:Src/main.c    **** //   ++n;
 377:Src/main.c    **** //   // value = circular_goertzel_stream((double)value_adc[0] - 2048, 1000, SAMPLING_RATE, WINDOW_S
 378:Src/main.c    **** //   total_power += ((double)value_adc[0] - 2048) * ((double)value_adc[0] - 2048);
 379:Src/main.c    **** //   y = ((double)value_adc[0] - 2048) + w_real * d1 - d2 - 100;
 380:Src/main.c    **** //   d2 = d1;
 381:Src/main.c    **** //   d1 = y;
 382:Src/main.c    **** //   value = (d2 * d2 + d1 * d1 - w_real * d1 * d2) / total_power;
 383:Src/main.c    **** 
 384:Src/main.c    **** //   if (n % HIST_LENGTH == 0)
 385:Src/main.c    **** //   {
 386:Src/main.c    **** //     yes_no = (value - prev_val) > 0 ? 1 : 0;
 387:Src/main.c    **** //     prev_val = value;
 388:Src/main.c    **** //   }
 389:Src/main.c    ****   calc = 1;
 140              		.loc 1 389 0
 141 0000 0122     		movs	r2, #1
 142 0002 014B     		ldr	r3, .L10
 143 0004 1A60     		str	r2, [r3]
 144 0006 7047     		bx	lr
 145              	.L11:
 146              		.align	2
 147              	.L10:
 148 0008 00000000 		.word	.LANCHOR0
 149              		.cfi_endproc
 150              	.LFE130:
 152              		.section	.text._Error_Handler,"ax",%progbits
 153              		.align	2
 154              		.global	_Error_Handler
 155              		.thumb
 156              		.thumb_func
 158              	_Error_Handler:
 159              	.LFB131:
 390:Src/main.c    **** }
 391:Src/main.c    **** /* USER CODE END 4 */
 392:Src/main.c    **** 
 393:Src/main.c    **** /**
 394:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 395:Src/main.c    ****   * @param  file: The file name as string.
 396:Src/main.c    ****   * @param  line: The line in file as a number.
 397:Src/main.c    ****   * @retval None
 398:Src/main.c    ****   */
 399:Src/main.c    **** void _Error_Handler(char *file, int line)
 400:Src/main.c    **** {
 160              		.loc 1 400 0
 161              		.cfi_startproc
 162              		@ Volatile: function does not return.
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165              		@ link register save eliminated.
 166              	.LVL3:
 167              	.L13:
 401:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 402:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 403:Src/main.c    ****   while (1)
 404:Src/main.c    ****   {
 405:Src/main.c    ****   }
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s 			page 11


 168              		.loc 1 405 0 discriminator 1
 169 0000 FEE7     		b	.L13
 170              		.cfi_endproc
 171              	.LFE131:
 173 0002 00BF     		.section	.text.MX_ADC1_Init,"ax",%progbits
 174              		.align	2
 175              		.thumb
 176              		.thumb_func
 178              	MX_ADC1_Init:
 179              	.LFB125:
 244:Src/main.c    **** 
 180              		.loc 1 244 0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 16
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184 0000 00B5     		push	{lr}
 185              	.LCFI5:
 186              		.cfi_def_cfa_offset 4
 187              		.cfi_offset 14, -4
 188 0002 85B0     		sub	sp, sp, #20
 189              	.LCFI6:
 190              		.cfi_def_cfa_offset 24
 250:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 191              		.loc 1 250 0
 192 0004 1848     		ldr	r0, .L18
 193 0006 194B     		ldr	r3, .L18+4
 194 0008 0360     		str	r3, [r0]
 251:Src/main.c    ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 195              		.loc 1 251 0
 196 000a 4FF48033 		mov	r3, #65536
 197 000e 4360     		str	r3, [r0, #4]
 252:Src/main.c    ****   hadc1.Init.ScanConvMode = DISABLE;
 198              		.loc 1 252 0
 199 0010 0022     		movs	r2, #0
 200 0012 8260     		str	r2, [r0, #8]
 253:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 201              		.loc 1 253 0
 202 0014 0261     		str	r2, [r0, #16]
 254:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = ENABLE;
 203              		.loc 1 254 0
 204 0016 8261     		str	r2, [r0, #24]
 255:Src/main.c    ****   hadc1.Init.NbrOfDiscConversion = 1;
 205              		.loc 1 255 0
 206 0018 0123     		movs	r3, #1
 207 001a 0362     		str	r3, [r0, #32]
 256:Src/main.c    ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
 208              		.loc 1 256 0
 209 001c 4362     		str	r3, [r0, #36]
 257:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T2_TRGO;
 210              		.loc 1 257 0
 211 001e 4FF08051 		mov	r1, #268435456
 212 0022 C162     		str	r1, [r0, #44]
 258:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 213              		.loc 1 258 0
 214 0024 4FF0C061 		mov	r1, #100663296
 215 0028 8162     		str	r1, [r0, #40]
 259:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s 			page 12


 216              		.loc 1 259 0
 217 002a C260     		str	r2, [r0, #12]
 260:Src/main.c    ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 218              		.loc 1 260 0
 219 002c C361     		str	r3, [r0, #28]
 261:Src/main.c    ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 220              		.loc 1 261 0
 221 002e 0363     		str	r3, [r0, #48]
 262:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 222              		.loc 1 262 0
 223 0030 4361     		str	r3, [r0, #20]
 263:Src/main.c    ****   {
 224              		.loc 1 263 0
 225 0032 FFF7FEFF 		bl	HAL_ADC_Init
 226              	.LVL4:
 227 0036 20B1     		cbz	r0, .L15
 265:Src/main.c    ****   }
 228              		.loc 1 265 0
 229 0038 0D48     		ldr	r0, .L18+8
 230 003a 40F20911 		movw	r1, #265
 231 003e FFF7FEFF 		bl	_Error_Handler
 232              	.LVL5:
 233              	.L15:
 270:Src/main.c    ****   sConfig.Rank = 1;
 234              		.loc 1 270 0
 235 0042 0023     		movs	r3, #0
 236 0044 0093     		str	r3, [sp]
 271:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 237              		.loc 1 271 0
 238 0046 0123     		movs	r3, #1
 239 0048 0193     		str	r3, [sp, #4]
 272:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 240              		.loc 1 272 0
 241 004a 0723     		movs	r3, #7
 242 004c 0293     		str	r3, [sp, #8]
 273:Src/main.c    ****   {
 243              		.loc 1 273 0
 244 004e 0648     		ldr	r0, .L18
 245 0050 6946     		mov	r1, sp
 246 0052 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 247              	.LVL6:
 248 0056 20B1     		cbz	r0, .L14
 275:Src/main.c    ****   }
 249              		.loc 1 275 0
 250 0058 0548     		ldr	r0, .L18+8
 251 005a 40F21311 		movw	r1, #275
 252 005e FFF7FEFF 		bl	_Error_Handler
 253              	.LVL7:
 254              	.L14:
 278:Src/main.c    **** 
 255              		.loc 1 278 0
 256 0062 05B0     		add	sp, sp, #20
 257              	.LCFI7:
 258              		.cfi_def_cfa_offset 4
 259              		@ sp needed
 260 0064 5DF804FB 		ldr	pc, [sp], #4
 261              	.L19:
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s 			page 13


 262              		.align	2
 263              	.L18:
 264 0068 00000000 		.word	hadc1
 265 006c 00200140 		.word	1073815552
 266 0070 00000000 		.word	.LC0
 267              		.cfi_endproc
 268              	.LFE125:
 270              		.section	.text.MX_I2C1_Init,"ax",%progbits
 271              		.align	2
 272              		.thumb
 273              		.thumb_func
 275              	MX_I2C1_Init:
 276              	.LFB126:
 282:Src/main.c    **** 
 277              		.loc 1 282 0
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 0
 280              		@ frame_needed = 0, uses_anonymous_args = 0
 281 0000 08B5     		push	{r3, lr}
 282              	.LCFI8:
 283              		.cfi_def_cfa_offset 8
 284              		.cfi_offset 3, -8
 285              		.cfi_offset 14, -4
 284:Src/main.c    ****   hi2c1.Init.ClockSpeed = 100000;
 286              		.loc 1 284 0
 287 0002 0C48     		ldr	r0, .L23
 288 0004 0C4B     		ldr	r3, .L23+4
 289 0006 0360     		str	r3, [r0]
 285:Src/main.c    ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 290              		.loc 1 285 0
 291 0008 0C4B     		ldr	r3, .L23+8
 292 000a 4360     		str	r3, [r0, #4]
 286:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
 293              		.loc 1 286 0
 294 000c 0023     		movs	r3, #0
 295 000e 8360     		str	r3, [r0, #8]
 287:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 296              		.loc 1 287 0
 297 0010 C360     		str	r3, [r0, #12]
 288:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 298              		.loc 1 288 0
 299 0012 4FF48042 		mov	r2, #16384
 300 0016 0261     		str	r2, [r0, #16]
 289:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
 301              		.loc 1 289 0
 302 0018 4361     		str	r3, [r0, #20]
 290:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 303              		.loc 1 290 0
 304 001a 8361     		str	r3, [r0, #24]
 291:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 305              		.loc 1 291 0
 306 001c C361     		str	r3, [r0, #28]
 292:Src/main.c    ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 307              		.loc 1 292 0
 308 001e 0362     		str	r3, [r0, #32]
 293:Src/main.c    ****   {
 309              		.loc 1 293 0
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s 			page 14


 310 0020 FFF7FEFF 		bl	HAL_I2C_Init
 311              	.LVL8:
 312 0024 20B1     		cbz	r0, .L20
 295:Src/main.c    ****   }
 313              		.loc 1 295 0
 314 0026 0648     		ldr	r0, .L23+12
 315 0028 40F22711 		movw	r1, #295
 316 002c FFF7FEFF 		bl	_Error_Handler
 317              	.LVL9:
 318              	.L20:
 319 0030 08BD     		pop	{r3, pc}
 320              	.L24:
 321 0032 00BF     		.align	2
 322              	.L23:
 323 0034 00000000 		.word	hi2c1
 324 0038 00540040 		.word	1073763328
 325 003c A0860100 		.word	100000
 326 0040 00000000 		.word	.LC0
 327              		.cfi_endproc
 328              	.LFE126:
 330              		.section	.text.MX_TIM2_Init,"ax",%progbits
 331              		.align	2
 332              		.thumb
 333              		.thumb_func
 335              	MX_TIM2_Init:
 336              	.LFB127:
 302:Src/main.c    **** 
 337              		.loc 1 302 0
 338              		.cfi_startproc
 339              		@ args = 0, pretend = 0, frame = 56
 340              		@ frame_needed = 0, uses_anonymous_args = 0
 341 0000 00B5     		push	{lr}
 342              	.LCFI9:
 343              		.cfi_def_cfa_offset 4
 344              		.cfi_offset 14, -4
 345 0002 8FB0     		sub	sp, sp, #60
 346              	.LCFI10:
 347              		.cfi_def_cfa_offset 64
 308:Src/main.c    ****   htim2.Init.Prescaler = 2;
 348              		.loc 1 308 0
 349 0004 2548     		ldr	r0, .L32
 350 0006 4FF08043 		mov	r3, #1073741824
 351 000a 0360     		str	r3, [r0]
 309:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 352              		.loc 1 309 0
 353 000c 0223     		movs	r3, #2
 354 000e 4360     		str	r3, [r0, #4]
 310:Src/main.c    ****   htim2.Init.Period = 20;
 355              		.loc 1 310 0
 356 0010 0023     		movs	r3, #0
 357 0012 8360     		str	r3, [r0, #8]
 311:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 358              		.loc 1 311 0
 359 0014 1422     		movs	r2, #20
 360 0016 C260     		str	r2, [r0, #12]
 312:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 361              		.loc 1 312 0
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s 			page 15


 362 0018 0361     		str	r3, [r0, #16]
 313:Src/main.c    ****   {
 363              		.loc 1 313 0
 364 001a FFF7FEFF 		bl	HAL_TIM_Base_Init
 365              	.LVL10:
 366 001e 20B1     		cbz	r0, .L26
 315:Src/main.c    ****   }
 367              		.loc 1 315 0
 368 0020 1F48     		ldr	r0, .L32+4
 369 0022 40F23B11 		movw	r1, #315
 370 0026 FFF7FEFF 		bl	_Error_Handler
 371              	.LVL11:
 372              	.L26:
 318:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 373              		.loc 1 318 0
 374 002a 0EA9     		add	r1, sp, #56
 375 002c 4FF48053 		mov	r3, #4096
 376 0030 41F8103D 		str	r3, [r1, #-16]!
 319:Src/main.c    ****   {
 377              		.loc 1 319 0
 378 0034 1948     		ldr	r0, .L32
 379 0036 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 380              	.LVL12:
 381 003a 20B1     		cbz	r0, .L27
 321:Src/main.c    ****   }
 382              		.loc 1 321 0
 383 003c 1848     		ldr	r0, .L32+4
 384 003e 40F24111 		movw	r1, #321
 385 0042 FFF7FEFF 		bl	_Error_Handler
 386              	.LVL13:
 387              	.L27:
 324:Src/main.c    ****   {
 388              		.loc 1 324 0
 389 0046 1548     		ldr	r0, .L32
 390 0048 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 391              	.LVL14:
 392 004c 20B1     		cbz	r0, .L28
 326:Src/main.c    ****   }
 393              		.loc 1 326 0
 394 004e 1448     		ldr	r0, .L32+4
 395 0050 4FF4A371 		mov	r1, #326
 396 0054 FFF7FEFF 		bl	_Error_Handler
 397              	.LVL15:
 398              	.L28:
 329:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_ENABLE;
 399              		.loc 1 329 0
 400 0058 3023     		movs	r3, #48
 401 005a 0893     		str	r3, [sp, #32]
 330:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 402              		.loc 1 330 0
 403 005c 8023     		movs	r3, #128
 404 005e 0993     		str	r3, [sp, #36]
 331:Src/main.c    ****   {
 405              		.loc 1 331 0
 406 0060 0E48     		ldr	r0, .L32
 407 0062 08A9     		add	r1, sp, #32
 408 0064 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s 			page 16


 409              	.LVL16:
 410 0068 20B1     		cbz	r0, .L29
 333:Src/main.c    ****   }
 411              		.loc 1 333 0
 412 006a 0D48     		ldr	r0, .L32+4
 413 006c 40F24D11 		movw	r1, #333
 414 0070 FFF7FEFF 		bl	_Error_Handler
 415              	.LVL17:
 416              	.L29:
 336:Src/main.c    ****   sConfigOC.Pulse = 0;
 417              		.loc 1 336 0
 418 0074 6023     		movs	r3, #96
 419 0076 0193     		str	r3, [sp, #4]
 337:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 420              		.loc 1 337 0
 421 0078 0022     		movs	r2, #0
 422 007a 0292     		str	r2, [sp, #8]
 338:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 423              		.loc 1 338 0
 424 007c 0392     		str	r2, [sp, #12]
 339:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 425              		.loc 1 339 0
 426 007e 0592     		str	r2, [sp, #20]
 340:Src/main.c    ****   {
 427              		.loc 1 340 0
 428 0080 0648     		ldr	r0, .L32
 429 0082 01A9     		add	r1, sp, #4
 430 0084 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 431              	.LVL18:
 432 0088 20B1     		cbz	r0, .L25
 342:Src/main.c    ****   }
 433              		.loc 1 342 0
 434 008a 0548     		ldr	r0, .L32+4
 435 008c 4FF4AB71 		mov	r1, #342
 436 0090 FFF7FEFF 		bl	_Error_Handler
 437              	.LVL19:
 438              	.L25:
 345:Src/main.c    **** 
 439              		.loc 1 345 0
 440 0094 0FB0     		add	sp, sp, #60
 441              	.LCFI11:
 442              		.cfi_def_cfa_offset 4
 443              		@ sp needed
 444 0096 5DF804FB 		ldr	pc, [sp], #4
 445              	.L33:
 446 009a 00BF     		.align	2
 447              	.L32:
 448 009c 00000000 		.word	htim2
 449 00a0 00000000 		.word	.LC0
 450              		.cfi_endproc
 451              	.LFE127:
 453              		.section	.text.SystemClock_Config,"ax",%progbits
 454              		.align	2
 455              		.global	SystemClock_Config
 456              		.thumb
 457              		.thumb_func
 459              	SystemClock_Config:
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s 			page 17


 460              	.LFB124:
 189:Src/main.c    **** 
 461              		.loc 1 189 0
 462              		.cfi_startproc
 463              		@ args = 0, pretend = 0, frame = 80
 464              		@ frame_needed = 0, uses_anonymous_args = 0
 465 0000 00B5     		push	{lr}
 466              	.LCFI12:
 467              		.cfi_def_cfa_offset 4
 468              		.cfi_offset 14, -4
 469 0002 95B0     		sub	sp, sp, #84
 470              	.LCFI13:
 471              		.cfi_def_cfa_offset 88
 472              	.LBB5:
 196:Src/main.c    **** 
 473              		.loc 1 196 0
 474 0004 0022     		movs	r2, #0
 475 0006 0192     		str	r2, [sp, #4]
 476 0008 294B     		ldr	r3, .L38
 477 000a 196C     		ldr	r1, [r3, #64]
 478 000c 41F08051 		orr	r1, r1, #268435456
 479 0010 1964     		str	r1, [r3, #64]
 480 0012 1B6C     		ldr	r3, [r3, #64]
 481 0014 03F08053 		and	r3, r3, #268435456
 482 0018 0193     		str	r3, [sp, #4]
 483 001a 019B     		ldr	r3, [sp, #4]
 484              	.LBE5:
 485              	.LBB6:
 198:Src/main.c    **** 
 486              		.loc 1 198 0
 487 001c 0292     		str	r2, [sp, #8]
 488 001e 2549     		ldr	r1, .L38+4
 489 0020 0B68     		ldr	r3, [r1]
 490 0022 23F44043 		bic	r3, r3, #49152
 491 0026 43F40043 		orr	r3, r3, #32768
 492 002a 0B60     		str	r3, [r1]
 493 002c 0B68     		ldr	r3, [r1]
 494 002e 03F44043 		and	r3, r3, #49152
 495 0032 0293     		str	r3, [sp, #8]
 496 0034 029B     		ldr	r3, [sp, #8]
 497              	.LBE6:
 202:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 498              		.loc 1 202 0
 499 0036 0223     		movs	r3, #2
 500 0038 0893     		str	r3, [sp, #32]
 203:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 501              		.loc 1 203 0
 502 003a 0121     		movs	r1, #1
 503 003c 0B91     		str	r1, [sp, #44]
 204:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 504              		.loc 1 204 0
 505 003e 1021     		movs	r1, #16
 506 0040 0C91     		str	r1, [sp, #48]
 205:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 507              		.loc 1 205 0
 508 0042 0E93     		str	r3, [sp, #56]
 206:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s 			page 18


 509              		.loc 1 206 0
 510 0044 0F92     		str	r2, [sp, #60]
 207:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 84;
 511              		.loc 1 207 0
 512 0046 0822     		movs	r2, #8
 513 0048 1092     		str	r2, [sp, #64]
 208:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 514              		.loc 1 208 0
 515 004a 5422     		movs	r2, #84
 516 004c 1192     		str	r2, [sp, #68]
 209:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 517              		.loc 1 209 0
 518 004e 1293     		str	r3, [sp, #72]
 210:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 519              		.loc 1 210 0
 520 0050 0423     		movs	r3, #4
 521 0052 1393     		str	r3, [sp, #76]
 211:Src/main.c    ****   {
 522              		.loc 1 211 0
 523 0054 08A8     		add	r0, sp, #32
 524 0056 FFF7FEFF 		bl	HAL_RCC_OscConfig
 525              	.LVL20:
 526 005a 18B1     		cbz	r0, .L35
 213:Src/main.c    ****   }
 527              		.loc 1 213 0
 528 005c 1648     		ldr	r0, .L38+8
 529 005e D521     		movs	r1, #213
 530 0060 FFF7FEFF 		bl	_Error_Handler
 531              	.LVL21:
 532              	.L35:
 218:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 533              		.loc 1 218 0
 534 0064 0F23     		movs	r3, #15
 535 0066 0393     		str	r3, [sp, #12]
 220:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 536              		.loc 1 220 0
 537 0068 0221     		movs	r1, #2
 538 006a 0491     		str	r1, [sp, #16]
 221:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 539              		.loc 1 221 0
 540 006c 0023     		movs	r3, #0
 541 006e 0593     		str	r3, [sp, #20]
 222:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 542              		.loc 1 222 0
 543 0070 4FF48052 		mov	r2, #4096
 544 0074 0692     		str	r2, [sp, #24]
 223:Src/main.c    **** 
 545              		.loc 1 223 0
 546 0076 0793     		str	r3, [sp, #28]
 225:Src/main.c    ****   {
 547              		.loc 1 225 0
 548 0078 03A8     		add	r0, sp, #12
 549 007a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 550              	.LVL22:
 551 007e 18B1     		cbz	r0, .L36
 227:Src/main.c    ****   }
 552              		.loc 1 227 0
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s 			page 19


 553 0080 0D48     		ldr	r0, .L38+8
 554 0082 E321     		movs	r1, #227
 555 0084 FFF7FEFF 		bl	_Error_Handler
 556              	.LVL23:
 557              	.L36:
 232:Src/main.c    **** 
 558              		.loc 1 232 0
 559 0088 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 560              	.LVL24:
 561 008c 0B4B     		ldr	r3, .L38+12
 562 008e A3FB0030 		umull	r3, r0, r3, r0
 563 0092 8009     		lsrs	r0, r0, #6
 564 0094 FFF7FEFF 		bl	HAL_SYSTICK_Config
 565              	.LVL25:
 236:Src/main.c    **** 
 566              		.loc 1 236 0
 567 0098 0420     		movs	r0, #4
 568 009a FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 569              	.LVL26:
 239:Src/main.c    **** }
 570              		.loc 1 239 0
 571 009e 4FF0FF30 		mov	r0, #-1
 572 00a2 0021     		movs	r1, #0
 573 00a4 0A46     		mov	r2, r1
 574 00a6 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 575              	.LVL27:
 240:Src/main.c    **** 
 576              		.loc 1 240 0
 577 00aa 15B0     		add	sp, sp, #84
 578              	.LCFI14:
 579              		.cfi_def_cfa_offset 4
 580              		@ sp needed
 581 00ac 5DF804FB 		ldr	pc, [sp], #4
 582              	.L39:
 583              		.align	2
 584              	.L38:
 585 00b0 00380240 		.word	1073887232
 586 00b4 00700040 		.word	1073770496
 587 00b8 00000000 		.word	.LC0
 588 00bc D34D6210 		.word	274877907
 589              		.cfi_endproc
 590              	.LFE124:
 592              		.global	__aeabi_d2iz
 593              		.global	__aeabi_i2d
 594              		.global	__aeabi_dsub
 595              		.global	__aeabi_dmul
 596              		.section	.text.main,"ax",%progbits
 597              		.align	2
 598              		.global	main
 599              		.thumb
 600              		.thumb_func
 602              	main:
 603              	.LFB123:
 106:Src/main.c    ****   /* USER CODE BEGIN 1 */
 604              		.loc 1 106 0
 605              		.cfi_startproc
 606              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s 			page 20


 607              		@ frame_needed = 0, uses_anonymous_args = 0
 608 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 609              	.LCFI15:
 610              		.cfi_def_cfa_offset 24
 611              		.cfi_offset 4, -24
 612              		.cfi_offset 5, -20
 613              		.cfi_offset 6, -16
 614              		.cfi_offset 7, -12
 615              		.cfi_offset 8, -8
 616              		.cfi_offset 14, -4
 617 0004 82B0     		sub	sp, sp, #8
 618              	.LCFI16:
 619              		.cfi_def_cfa_offset 32
 114:Src/main.c    **** 
 620              		.loc 1 114 0
 621 0006 FFF7FEFF 		bl	HAL_Init
 622              	.LVL28:
 121:Src/main.c    **** 
 623              		.loc 1 121 0
 624 000a FFF7FEFF 		bl	SystemClock_Config
 625              	.LVL29:
 127:Src/main.c    ****   MX_DMA_Init();
 626              		.loc 1 127 0
 627 000e FFF7FEFF 		bl	MX_GPIO_Init
 628              	.LVL30:
 128:Src/main.c    ****   MX_ADC1_Init();
 629              		.loc 1 128 0
 630 0012 FFF7FEFF 		bl	MX_DMA_Init
 631              	.LVL31:
 129:Src/main.c    ****   MX_I2C1_Init();
 632              		.loc 1 129 0
 633 0016 FFF7FEFF 		bl	MX_ADC1_Init
 634              	.LVL32:
 130:Src/main.c    ****   MX_TIM2_Init();
 635              		.loc 1 130 0
 636 001a FFF7FEFF 		bl	MX_I2C1_Init
 637              	.LVL33:
 131:Src/main.c    ****   /* USER CODE BEGIN 2 */
 638              		.loc 1 131 0
 639 001e FFF7FEFF 		bl	MX_TIM2_Init
 640              	.LVL34:
 133:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim2);
 641              		.loc 1 133 0
 642 0022 FFF7FEFF 		bl	ssd1306_Init
 643              	.LVL35:
 134:Src/main.c    ****   HAL_ADC_Start_DMA(&hadc1, value_adc, 1024);
 644              		.loc 1 134 0
 645 0026 5848     		ldr	r0, .L44+32
 646 0028 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 647              	.LVL36:
 135:Src/main.c    **** 
 648              		.loc 1 135 0
 649 002c 5748     		ldr	r0, .L44+36
 650 002e 5849     		ldr	r1, .L44+40
 651 0030 4FF48062 		mov	r2, #1024
 652 0034 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 653              	.LVL37:
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s 			page 21


 137:Src/main.c    ****   ssd1306_SetCursor(0, 0);
 654              		.loc 1 137 0
 655 0038 0020     		movs	r0, #0
 656 003a FFF7FEFF 		bl	ssd1306_Fill
 657              	.LVL38:
 138:Src/main.c    ****   ssd1306_WriteString("horray", Font_11x18, White);
 658              		.loc 1 138 0
 659 003e 0020     		movs	r0, #0
 660 0040 0146     		mov	r1, r0
 661 0042 FFF7FEFF 		bl	ssd1306_SetCursor
 662              	.LVL39:
 139:Src/main.c    ****   ssd1306_UpdateScreen();
 663              		.loc 1 139 0
 664 0046 534B     		ldr	r3, .L44+44
 665 0048 5348     		ldr	r0, .L44+48
 666 004a 93E80600 		ldmia	r3, {r1, r2}
 667 004e 0123     		movs	r3, #1
 668 0050 FFF7FEFF 		bl	ssd1306_WriteString
 669              	.LVL40:
 140:Src/main.c    ****   HAL_Delay(3000);
 670              		.loc 1 140 0
 671 0054 FFF7FEFF 		bl	ssd1306_UpdateScreen
 672              	.LVL41:
 141:Src/main.c    **** 
 673              		.loc 1 141 0
 674 0058 40F6B830 		movw	r0, #3000
 675 005c FFF7FEFF 		bl	HAL_Delay
 676              	.LVL42:
 143:Src/main.c    ****   f_step_normalized = 1.0 / WINDOW_SIZE;
 677              		.loc 1 143 0
 678 0060 41A1     		adr	r1, .L44
 679 0062 D1E90001 		ldrd	r0, [r1]
 680 0066 4D4B     		ldr	r3, .L44+52
 681 0068 C3E90001 		strd	r0, [r3]
 144:Src/main.c    ****   k = 1000 / f_step;
 682              		.loc 1 144 0
 683 006c 0020     		movs	r0, #0
 684 006e 4C49     		ldr	r1, .L44+56
 685 0070 4C4B     		ldr	r3, .L44+60
 686 0072 C3E90001 		strd	r0, [r3]
 145:Src/main.c    ****   normalizedfreq = k * f_step_normalized;
 687              		.loc 1 145 0
 688 0076 3EA1     		adr	r1, .L44+8
 689 0078 D1E90001 		ldrd	r0, [r1]
 690 007c 4A4B     		ldr	r3, .L44+64
 691 007e C3E90001 		strd	r0, [r3]
 146:Src/main.c    ****   w_real = 2.0 * cos(2.0 * PI * normalizedfreq);
 692              		.loc 1 146 0
 693 0082 3DA1     		adr	r1, .L44+16
 694 0084 D1E90001 		ldrd	r0, [r1]
 695 0088 484B     		ldr	r3, .L44+68
 696 008a C3E90001 		strd	r0, [r3]
 147:Src/main.c    ****   /* USER CODE END 2 */
 697              		.loc 1 147 0
 698 008e 3CA1     		adr	r1, .L44+24
 699 0090 D1E90001 		ldrd	r0, [r1]
 700 0094 464B     		ldr	r3, .L44+72
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s 			page 22


 701 0096 C3E90001 		strd	r0, [r3]
 702              	.L41:
 154:Src/main.c    ****     {
 703              		.loc 1 154 0
 704 009a 464B     		ldr	r3, .L44+76
 705 009c 1B68     		ldr	r3, [r3]
 706 009e 002B     		cmp	r3, #0
 707 00a0 FBD0     		beq	.L41
 708              	.LBB7:
 156:Src/main.c    ****       char *adc = (char *)malloc(13 * sizeof(char));
 709              		.loc 1 156 0
 710 00a2 3B4F     		ldr	r7, .L44+40
 711 00a4 3846     		mov	r0, r7
 712 00a6 4AF25F41 		movw	r1, #42079
 713 00aa 4FF47A72 		mov	r2, #1000
 714 00ae 4FF48063 		mov	r3, #1024
 715 00b2 FFF7FEFF 		bl	goertzel
 716              	.LVL43:
 717 00b6 404E     		ldr	r6, .L44+80
 718 00b8 86ED000B 		fstd	d0, [r6]
 157:Src/main.c    ****       ssd1306_Fill(Black);
 719              		.loc 1 157 0
 720 00bc 0D20     		movs	r0, #13
 721 00be FFF7FEFF 		bl	malloc
 722              	.LVL44:
 723 00c2 0546     		mov	r5, r0
 724              	.LVL45:
 158:Src/main.c    ****       ssd1306_SetCursor(0, 0);
 725              		.loc 1 158 0
 726 00c4 0020     		movs	r0, #0
 727              	.LVL46:
 728 00c6 FFF7FEFF 		bl	ssd1306_Fill
 729              	.LVL47:
 159:Src/main.c    ****       sprintf(adc, "n: %d", (int)n);
 730              		.loc 1 159 0
 731 00ca 0020     		movs	r0, #0
 732 00cc 0146     		mov	r1, r0
 733 00ce FFF7FEFF 		bl	ssd1306_SetCursor
 734              	.LVL48:
 160:Src/main.c    ****       ssd1306_WriteString(adc, Font_11x18, White);
 735              		.loc 1 160 0
 736 00d2 2846     		mov	r0, r5
 737 00d4 3949     		ldr	r1, .L44+84
 738 00d6 3A4B     		ldr	r3, .L44+88
 739 00d8 1A68     		ldr	r2, [r3]
 740 00da FFF7FEFF 		bl	sprintf
 741              	.LVL49:
 161:Src/main.c    ****       ssd1306_SetCursor(0, 18);
 742              		.loc 1 161 0
 743 00de 2D4C     		ldr	r4, .L44+44
 744 00e0 2846     		mov	r0, r5
 745 00e2 94E80600 		ldmia	r4, {r1, r2}
 746 00e6 0123     		movs	r3, #1
 747 00e8 FFF7FEFF 		bl	ssd1306_WriteString
 748              	.LVL50:
 162:Src/main.c    ****       sprintf(adc, "%d", (int)value_adc[0]);
 749              		.loc 1 162 0
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s 			page 23


 750 00ec 0020     		movs	r0, #0
 751 00ee 1221     		movs	r1, #18
 752 00f0 FFF7FEFF 		bl	ssd1306_SetCursor
 753              	.LVL51:
 163:Src/main.c    ****       ssd1306_WriteString(adc, Font_11x18, White);
 754              		.loc 1 163 0
 755 00f4 2846     		mov	r0, r5
 756 00f6 3349     		ldr	r1, .L44+92
 757 00f8 3A68     		ldr	r2, [r7]
 758 00fa FFF7FEFF 		bl	sprintf
 759              	.LVL52:
 164:Src/main.c    **** 
 760              		.loc 1 164 0
 761 00fe 2846     		mov	r0, r5
 762 0100 94E80600 		ldmia	r4, {r1, r2}
 763 0104 0123     		movs	r3, #1
 764 0106 FFF7FEFF 		bl	ssd1306_WriteString
 765              	.LVL53:
 166:Src/main.c    ****       int post_decimal = (int)((value - (double)pre_decimal) * 100);
 766              		.loc 1 166 0
 767 010a D6E90067 		ldrd	r6, [r6]
 768 010e 3046     		mov	r0, r6
 769 0110 3946     		mov	r1, r7
 770 0112 FFF7FEFF 		bl	__aeabi_d2iz
 771              	.LVL54:
 772 0116 8046     		mov	r8, r0
 773              	.LVL55:
 167:Src/main.c    **** 
 774              		.loc 1 167 0
 775 0118 FFF7FEFF 		bl	__aeabi_i2d
 776              	.LVL56:
 777 011c 0246     		mov	r2, r0
 778 011e 0B46     		mov	r3, r1
 779 0120 3046     		mov	r0, r6
 780 0122 3946     		mov	r1, r7
 781 0124 FFF7FEFF 		bl	__aeabi_dsub
 782              	.LVL57:
 783 0128 0022     		movs	r2, #0
 784 012a 274B     		ldr	r3, .L44+96
 785 012c FFF7FEFF 		bl	__aeabi_dmul
 786              	.LVL58:
 787 0130 FFF7FEFF 		bl	__aeabi_d2iz
 788              	.LVL59:
 169:Src/main.c    ****       ssd1306_SetCursor(0, 36);
 789              		.loc 1 169 0
 790 0134 254B     		ldr	r3, .L44+100
 791 0136 1A88     		ldrh	r2, [r3]
 792 0138 0090     		str	r0, [sp]
 793 013a 2846     		mov	r0, r5
 794              	.LVL60:
 795 013c 2449     		ldr	r1, .L44+104
 796 013e 4346     		mov	r3, r8
 797 0140 FFF7FEFF 		bl	sprintf
 798              	.LVL61:
 170:Src/main.c    ****       ssd1306_WriteString(adc, Font_11x18, White);
 799              		.loc 1 170 0
 800 0144 0020     		movs	r0, #0
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s 			page 24


 801 0146 2421     		movs	r1, #36
 802 0148 FFF7FEFF 		bl	ssd1306_SetCursor
 803              	.LVL62:
 171:Src/main.c    ****       ssd1306_UpdateScreen();
 804              		.loc 1 171 0
 805 014c 2846     		mov	r0, r5
 806 014e 94E80600 		ldmia	r4, {r1, r2}
 807 0152 0123     		movs	r3, #1
 808 0154 FFF7FEFF 		bl	ssd1306_WriteString
 809              	.LVL63:
 172:Src/main.c    ****       HAL_Delay(1000);
 810              		.loc 1 172 0
 811 0158 FFF7FEFF 		bl	ssd1306_UpdateScreen
 812              	.LVL64:
 173:Src/main.c    ****     }
 813              		.loc 1 173 0
 814 015c 4FF47A70 		mov	r0, #1000
 815 0160 FFF7FEFF 		bl	HAL_Delay
 816              	.LVL65:
 817 0164 99E7     		b	.L41
 818              	.L45:
 819 0166 00BF     		.align	3
 820              	.L44:
 821 0168 00000000 		.word	0
 822 016c E08B4440 		.word	1078234080
 823 0170 251F9F4B 		.word	1268719397
 824 0174 CE553840 		.word	1077433806
 825 0178 251F9F4B 		.word	1268719397
 826 017c CE55983F 		.word	1066948046
 827 0180 8C571840 		.word	1075337100
 828 0184 D8A4FF3F 		.word	1073718488
 829 0188 00000000 		.word	htim2
 830 018c 00000000 		.word	hadc1
 831 0190 00000000 		.word	.LANCHOR1
 832 0194 00000000 		.word	Font_11x18
 833 0198 0C000000 		.word	.LC1
 834 019c 00000000 		.word	f_step
 835 01a0 0000503F 		.word	1062207488
 836 01a4 00000000 		.word	f_step_normalized
 837 01a8 00000000 		.word	k
 838 01ac 00000000 		.word	normalizedfreq
 839 01b0 00000000 		.word	w_real
 840 01b4 00000000 		.word	.LANCHOR0
 841 01b8 00000000 		.word	value
 842 01bc 14000000 		.word	.LC2
 843 01c0 00000000 		.word	.LANCHOR2
 844 01c4 1C000000 		.word	.LC3
 845 01c8 00005940 		.word	1079574528
 846 01cc 00000000 		.word	.LANCHOR3
 847 01d0 20000000 		.word	.LC4
 848              	.LBE7:
 849              		.cfi_endproc
 850              	.LFE123:
 852              		.comm	w_real,8,8
 853              		.comm	normalizedfreq,8,8
 854              		.comm	k,8,8
 855              		.comm	f_step_normalized,8,8
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s 			page 25


 856              		.comm	f_step,8,8
 857              		.global	total_power
 858              		.global	y
 859              		.global	d2
 860              		.global	d1
 861              		.global	yes_no
 862              		.global	n
 863              		.comm	prev_val,8,8
 864              		.comm	value,8,8
 865              		.global	calc
 866              		.global	value_adc
 867              		.global	dealt_with
 868              		.comm	htim2,60,4
 869              		.comm	hi2c1,84,4
 870              		.comm	hdma_adc1,96,4
 871              		.comm	hadc1,72,4
 872              		.section	.bss.n,"aw",%nobits
 873              		.align	2
 874              		.set	.LANCHOR2,. + 0
 877              	n:
 878 0000 00000000 		.space	4
 879              		.section	.bss.calc,"aw",%nobits
 880              		.align	2
 881              		.set	.LANCHOR0,. + 0
 884              	calc:
 885 0000 00000000 		.space	4
 886              		.section	.bss.yes_no,"aw",%nobits
 887              		.align	1
 888              		.set	.LANCHOR3,. + 0
 891              	yes_no:
 892 0000 0000     		.space	2
 893              		.section	.rodata.str1.4,"aMS",%progbits,1
 894              		.align	2
 895              	.LC0:
 896 0000 5372632F 		.ascii	"Src/main.c\000"
 896      6D61696E 
 896      2E6300
 897 000b 00       		.space	1
 898              	.LC1:
 899 000c 686F7272 		.ascii	"horray\000"
 899      617900
 900 0013 00       		.space	1
 901              	.LC2:
 902 0014 6E3A2025 		.ascii	"n: %d\000"
 902      6400
 903 001a 0000     		.space	2
 904              	.LC3:
 905 001c 256400   		.ascii	"%d\000"
 906 001f 00       		.space	1
 907              	.LC4:
 908 0020 3F3A2025 		.ascii	"?: %d %d.%d\000"
 908      64202564 
 908      2E256400 
 909              		.section	.bss.value_adc,"aw",%nobits
 910              		.align	2
 911              		.set	.LANCHOR1,. + 0
 914              	value_adc:
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s 			page 26


 915 0000 00000000 		.space	4096
 915      00000000 
 915      00000000 
 915      00000000 
 915      00000000 
 916              		.section	.data.total_power,"aw",%progbits
 917              		.align	3
 920              	total_power:
 921 0000 00000000 		.word	0
 922 0004 0000F03F 		.word	1072693248
 923              		.section	.bss.d1,"aw",%nobits
 924              		.align	3
 927              	d1:
 928 0000 00000000 		.space	8
 928      00000000 
 929              		.section	.bss.d2,"aw",%nobits
 930              		.align	3
 933              	d2:
 934 0000 00000000 		.space	8
 934      00000000 
 935              		.section	.bss.dealt_with,"aw",%nobits
 938              	dealt_with:
 939 0000 00       		.space	1
 940              		.section	.bss.y,"aw",%nobits
 941              		.align	3
 944              	y:
 945 0000 00000000 		.space	8
 945      00000000 
 946              		.text
 947              	.Letext0:
 948              		.file 2 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 949              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/machine/_default_types
 950              		.file 4 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/sys/_stdint.h"
 951              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 952              		.file 6 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h
 953              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 954              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 955              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 956              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 957              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 958              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 959              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 960              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 961              		.file 15 "Inc/fonts.h"
 962              		.file 16 "Inc/ssd1306.h"
 963              		.file 17 "Drivers/CMSIS/Include/core_cm4.h"
 964              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 965              		.file 19 "Inc/filter.h"
 966              		.file 20 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/stdlib.h"
 967              		.file 21 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/stdio.h"
 968              		.file 22 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s 			page 27


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s:21     .text.MX_GPIO_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s:69     .text.MX_GPIO_Init:0000000000000034 $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s:74     .text.MX_DMA_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s:78     .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s:122    .text.MX_DMA_Init:0000000000000030 $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s:127    .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s:132    .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s:148    .text.HAL_ADC_ConvCpltCallback:0000000000000008 $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s:153    .text._Error_Handler:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s:158    .text._Error_Handler:0000000000000000 _Error_Handler
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s:174    .text.MX_ADC1_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s:178    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s:264    .text.MX_ADC1_Init:0000000000000068 $d
                            *COM*:0000000000000048 hadc1
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s:271    .text.MX_I2C1_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s:275    .text.MX_I2C1_Init:0000000000000000 MX_I2C1_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s:323    .text.MX_I2C1_Init:0000000000000034 $d
                            *COM*:0000000000000054 hi2c1
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s:331    .text.MX_TIM2_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s:335    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s:448    .text.MX_TIM2_Init:000000000000009c $d
                            *COM*:000000000000003c htim2
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s:454    .text.SystemClock_Config:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s:459    .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s:585    .text.SystemClock_Config:00000000000000b0 $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s:597    .text.main:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s:602    .text.main:0000000000000000 main
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s:821    .text.main:0000000000000168 $d
                            *COM*:0000000000000008 f_step
                            *COM*:0000000000000008 f_step_normalized
                            *COM*:0000000000000008 k
                            *COM*:0000000000000008 normalizedfreq
                            *COM*:0000000000000008 w_real
                            *COM*:0000000000000008 value
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s:920    .data.total_power:0000000000000000 total_power
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s:944    .bss.y:0000000000000000 y
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s:933    .bss.d2:0000000000000000 d2
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s:927    .bss.d1:0000000000000000 d1
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s:891    .bss.yes_no:0000000000000000 yes_no
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s:877    .bss.n:0000000000000000 n
                            *COM*:0000000000000008 prev_val
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s:884    .bss.calc:0000000000000000 calc
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s:914    .bss.value_adc:0000000000000000 value_adc
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s:938    .bss.dealt_with:0000000000000000 dealt_with
                            *COM*:0000000000000060 hdma_adc1
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s:873    .bss.n:0000000000000000 $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s:880    .bss.calc:0000000000000000 $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s:887    .bss.yes_no:0000000000000000 $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s:894    .rodata.str1.4:0000000000000000 $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s:910    .bss.value_adc:0000000000000000 $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s:917    .data.total_power:0000000000000000 $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s:924    .bss.d1:0000000000000000 $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s:930    .bss.d2:0000000000000000 $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s:939    .bss.dealt_with:0000000000000000 $d
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s 			page 28


/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccOMQlIo.s:941    .bss.y:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_I2C_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
__aeabi_d2iz
__aeabi_i2d
__aeabi_dsub
__aeabi_dmul
HAL_Init
ssd1306_Init
HAL_TIM_Base_Start_IT
HAL_ADC_Start_DMA
ssd1306_Fill
ssd1306_SetCursor
ssd1306_WriteString
ssd1306_UpdateScreen
HAL_Delay
goertzel
malloc
sprintf
Font_11x18
