ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccH7VTmO.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"main.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.comm	hadc1,72,4
  21              		.comm	hi2c1,84,4
  22              		.global	__aeabi_ui2d
  23              		.global	__aeabi_d2iz
  24              		.section	.rodata
  25              		.align	2
  26              	.LC0:
  27 0000 503A2025 		.ascii	"P: %d\000"
  27      6400
  28              		.section	.text.main,"ax",%progbits
  29              		.align	2
  30              		.global	main
  31              		.thumb
  32              		.thumb_func
  34              	main:
  35              	.LFB123:
  36              		.file 1 "Src/main.c"
   1:Src/main.c    **** 
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccH7VTmO.s 			page 2


  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  40:Src/main.c    **** #include "main.h"
  41:Src/main.c    **** #include "stm32f4xx_hal.h"
  42:Src/main.c    **** 
  43:Src/main.c    **** /* USER CODE BEGIN Includes */
  44:Src/main.c    **** #include "filter.h"
  45:Src/main.c    **** #include "ssd1306.h"
  46:Src/main.c    **** #include "circular_buffer.h"
  47:Src/main.c    **** 
  48:Src/main.c    **** #define WINDOW_SIZE 512
  49:Src/main.c    **** #define SAMPLING_RATE 100000
  50:Src/main.c    **** /* USER CODE END Includes */
  51:Src/main.c    **** 
  52:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  53:Src/main.c    **** ADC_HandleTypeDef hadc1;
  54:Src/main.c    **** 
  55:Src/main.c    **** I2C_HandleTypeDef hi2c1;
  56:Src/main.c    **** 
  57:Src/main.c    **** /* USER CODE BEGIN PV */
  58:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  59:Src/main.c    **** 
  60:Src/main.c    **** /* USER CODE END PV */
  61:Src/main.c    **** 
  62:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  63:Src/main.c    **** void SystemClock_Config(void);
  64:Src/main.c    **** static void MX_GPIO_Init(void);
  65:Src/main.c    **** static void MX_ADC1_Init(void);
  66:Src/main.c    **** static void MX_I2C1_Init(void);
  67:Src/main.c    **** 
  68:Src/main.c    **** /* USER CODE BEGIN PFP */
  69:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  70:Src/main.c    **** 
  71:Src/main.c    **** /* USER CODE END PFP */
  72:Src/main.c    **** 
  73:Src/main.c    **** /* USER CODE BEGIN 0 */
  74:Src/main.c    **** 
  75:Src/main.c    **** /* USER CODE END 0 */
  76:Src/main.c    **** 
  77:Src/main.c    **** /**
  78:Src/main.c    ****   * @brief  The application entry point.
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccH7VTmO.s 			page 3


  79:Src/main.c    ****   *
  80:Src/main.c    ****   * @retval None
  81:Src/main.c    ****   */
  82:Src/main.c    **** int main(void)
  83:Src/main.c    **** {
  37              		.loc 1 83 0
  38              		.cfi_startproc
  39              		@ args = 0, pretend = 0, frame = 40
  40              		@ frame_needed = 1, uses_anonymous_args = 0
  41 0000 B0B5     		push	{r4, r5, r7, lr}
  42              	.LCFI0:
  43              		.cfi_def_cfa_offset 16
  44              		.cfi_offset 4, -16
  45              		.cfi_offset 5, -12
  46              		.cfi_offset 7, -8
  47              		.cfi_offset 14, -4
  48 0002 8AB0     		sub	sp, sp, #40
  49              	.LCFI1:
  50              		.cfi_def_cfa_offset 56
  51 0004 00AF     		add	r7, sp, #0
  52              	.LCFI2:
  53              		.cfi_def_cfa_register 7
  84:Src/main.c    ****   /* USER CODE BEGIN 1 */
  85:Src/main.c    **** 
  86:Src/main.c    ****   /* USER CODE END 1 */
  87:Src/main.c    **** 
  88:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
  89:Src/main.c    **** 
  90:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  91:Src/main.c    ****   HAL_Init();
  54              		.loc 1 91 0
  55 0006 FFF7FEFF 		bl	HAL_Init
  92:Src/main.c    **** 
  93:Src/main.c    ****   /* USER CODE BEGIN Init */
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* USER CODE END Init */
  96:Src/main.c    **** 
  97:Src/main.c    ****   /* Configure the system clock */
  98:Src/main.c    ****   SystemClock_Config();
  56              		.loc 1 98 0
  57 000a FFF7FEFF 		bl	SystemClock_Config
  99:Src/main.c    **** 
 100:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 101:Src/main.c    **** 
 102:Src/main.c    ****   /* USER CODE END SysInit */
 103:Src/main.c    **** 
 104:Src/main.c    ****   /* Initialize all configured peripherals */
 105:Src/main.c    ****   MX_GPIO_Init();
  58              		.loc 1 105 0
  59 000e FFF7FEFF 		bl	MX_GPIO_Init
 106:Src/main.c    ****   MX_ADC1_Init();
  60              		.loc 1 106 0
  61 0012 FFF7FEFF 		bl	MX_ADC1_Init
 107:Src/main.c    ****   MX_I2C1_Init();
  62              		.loc 1 107 0
  63 0016 FFF7FEFF 		bl	MX_I2C1_Init
 108:Src/main.c    ****   /* USER CODE BEGIN 2 */
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccH7VTmO.s 			page 4


 109:Src/main.c    ****   HAL_ADC_Start(&hadc1);
  64              		.loc 1 109 0
  65 001a 3848     		ldr	r0, .L5
  66 001c FFF7FEFF 		bl	HAL_ADC_Start
 110:Src/main.c    ****   ssd1306_Init();
  67              		.loc 1 110 0
  68 0020 FFF7FEFF 		bl	ssd1306_Init
 111:Src/main.c    ****   HAL_Delay(500);
  69              		.loc 1 111 0
  70 0024 4FF4FA70 		mov	r0, #500
  71 0028 FFF7FEFF 		bl	HAL_Delay
 112:Src/main.c    ****   ssd1306_Fill(Black);
  72              		.loc 1 112 0
  73 002c 0020     		movs	r0, #0
  74 002e FFF7FEFF 		bl	ssd1306_Fill
 113:Src/main.c    ****   ssd1306_UpdateScreen();
  75              		.loc 1 113 0
  76 0032 FFF7FEFF 		bl	ssd1306_UpdateScreen
 114:Src/main.c    ****   /* USER CODE END 2 */
 115:Src/main.c    **** 
 116:Src/main.c    ****   /* Infinite loop */
 117:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 118:Src/main.c    ****   uint32_t value;
 119:Src/main.c    ****   circ_bufsum_t cbuf;
 120:Src/main.c    ****   circ_bufsum_init(&cbuf, WINDOW_SIZE);
  77              		.loc 1 120 0
  78 0036 3B1D     		adds	r3, r7, #4
  79 0038 1846     		mov	r0, r3
  80 003a 4FF40071 		mov	r1, #512
  81 003e FFF7FEFF 		bl	circ_bufsum_init
 121:Src/main.c    ****   char *adc = (char *)malloc(13 * sizeof(char));
  82              		.loc 1 121 0
  83 0042 0D20     		movs	r0, #13
  84 0044 FFF7FEFF 		bl	malloc
  85 0048 0346     		mov	r3, r0
  86 004a 3B62     		str	r3, [r7, #32]
 122:Src/main.c    ****   uint16_t n = 0;
  87              		.loc 1 122 0
  88 004c 0023     		movs	r3, #0
  89 004e FB84     		strh	r3, [r7, #38]	@ movhi
  90              	.L4:
 123:Src/main.c    ****   while (1)
 124:Src/main.c    ****   {
 125:Src/main.c    ****     // first fill the buffer
 126:Src/main.c    ****     if (n < (WINDOW_SIZE - 1))
  91              		.loc 1 126 0
  92 0050 FB8C     		ldrh	r3, [r7, #38]
  93 0052 B3F5FF7F 		cmp	r3, #510
  94 0056 17D8     		bhi	.L2
 127:Src/main.c    ****     {
 128:Src/main.c    ****       HAL_ADC_PollForConversion(&hadc1, 1000);
  95              		.loc 1 128 0
  96 0058 2848     		ldr	r0, .L5
  97 005a 4FF47A71 		mov	r1, #1000
  98 005e FFF7FEFF 		bl	HAL_ADC_PollForConversion
 129:Src/main.c    ****       circ_bufsum_put(&cbuf, HAL_ADC_GetValue(&hadc1));
  99              		.loc 1 129 0
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccH7VTmO.s 			page 5


 100 0062 2648     		ldr	r0, .L5
 101 0064 FFF7FEFF 		bl	HAL_ADC_GetValue
 102 0068 0346     		mov	r3, r0
 103 006a 1846     		mov	r0, r3
 104 006c FFF7FEFF 		bl	__aeabi_ui2d
 105 0070 0446     		mov	r4, r0
 106 0072 0D46     		mov	r5, r1
 107 0074 3B1D     		adds	r3, r7, #4
 108 0076 1846     		mov	r0, r3
 109 0078 45EC104B 		fmdrr	d0, r4, r5
 110 007c FFF7FEFF 		bl	circ_bufsum_put
 130:Src/main.c    ****       n++;
 111              		.loc 1 130 0
 112 0080 FB8C     		ldrh	r3, [r7, #38]
 113 0082 0133     		adds	r3, r3, #1
 114 0084 FB84     		strh	r3, [r7, #38]	@ movhi
 115 0086 38E0     		b	.L3
 116              	.L2:
 131:Src/main.c    ****     }
 132:Src/main.c    ****     else
 133:Src/main.c    ****     {
 134:Src/main.c    ****       // Get new value, get power
 135:Src/main.c    ****       HAL_ADC_PollForConversion(&hadc1, 1000);
 117              		.loc 1 135 0
 118 0088 1C48     		ldr	r0, .L5
 119 008a 4FF47A71 		mov	r1, #1000
 120 008e FFF7FEFF 		bl	HAL_ADC_PollForConversion
 136:Src/main.c    ****       circ_bufsum_put(&cbuf, HAL_ADC_GetValue(&hadc1));
 121              		.loc 1 136 0
 122 0092 1A48     		ldr	r0, .L5
 123 0094 FFF7FEFF 		bl	HAL_ADC_GetValue
 124 0098 0346     		mov	r3, r0
 125 009a 1846     		mov	r0, r3
 126 009c FFF7FEFF 		bl	__aeabi_ui2d
 127 00a0 0446     		mov	r4, r0
 128 00a2 0D46     		mov	r5, r1
 129 00a4 3B1D     		adds	r3, r7, #4
 130 00a6 1846     		mov	r0, r3
 131 00a8 45EC104B 		fmdrr	d0, r4, r5
 132 00ac FFF7FEFF 		bl	circ_bufsum_put
 137:Src/main.c    ****       value = (int)goertzel(cbuf.buffer, SAMPLING_RATE, 1000, 512) ;
 133              		.loc 1 137 0
 134 00b0 7B68     		ldr	r3, [r7, #4]
 135 00b2 1846     		mov	r0, r3
 136 00b4 1249     		ldr	r1, .L5+4
 137 00b6 4FF47A72 		mov	r2, #1000
 138 00ba 4FF40073 		mov	r3, #512
 139 00be FFF7FEFF 		bl	goertzel
 140 00c2 53EC102B 		fmrrd	r2, r3, d0
 141 00c6 1046     		mov	r0, r2
 142 00c8 1946     		mov	r1, r3
 143 00ca FFF7FEFF 		bl	__aeabi_d2iz
 144 00ce 0346     		mov	r3, r0
 145 00d0 FB61     		str	r3, [r7, #28]
 138:Src/main.c    ****       ssd1306_SetCursor(0, 0);
 146              		.loc 1 138 0
 147 00d2 0020     		movs	r0, #0
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccH7VTmO.s 			page 6


 148 00d4 0021     		movs	r1, #0
 149 00d6 FFF7FEFF 		bl	ssd1306_SetCursor
 139:Src/main.c    ****       sprintf(adc, "P: %d", (int)value);
 150              		.loc 1 139 0
 151 00da FB69     		ldr	r3, [r7, #28]
 152 00dc 386A     		ldr	r0, [r7, #32]
 153 00de 0949     		ldr	r1, .L5+8
 154 00e0 1A46     		mov	r2, r3
 155 00e2 FFF7FEFF 		bl	sprintf
 140:Src/main.c    ****       ssd1306_WriteString(adc, Font_11x18, White);
 156              		.loc 1 140 0
 157 00e6 084B     		ldr	r3, .L5+12
 158 00e8 386A     		ldr	r0, [r7, #32]
 159 00ea 93E80600 		ldmia	r3, {r1, r2}
 160 00ee 0123     		movs	r3, #1
 161 00f0 FFF7FEFF 		bl	ssd1306_WriteString
 141:Src/main.c    ****       HAL_Delay(50);
 162              		.loc 1 141 0
 163 00f4 3220     		movs	r0, #50
 164 00f6 FFF7FEFF 		bl	HAL_Delay
 165              	.L3:
 142:Src/main.c    ****     }
 143:Src/main.c    ****   /* USER CODE END WHILE */
 144:Src/main.c    **** 
 145:Src/main.c    ****   /* USER CODE BEGIN 3 */
 146:Src/main.c    ****   }
 166              		.loc 1 146 0
 167 00fa A9E7     		b	.L4
 168              	.L6:
 169              		.align	2
 170              	.L5:
 171 00fc 00000000 		.word	hadc1
 172 0100 A0860100 		.word	100000
 173 0104 00000000 		.word	.LC0
 174 0108 00000000 		.word	Font_11x18
 175              		.cfi_endproc
 176              	.LFE123:
 178              		.section	.rodata
 179 0006 0000     		.align	2
 180              	.LC1:
 181 0008 5372632F 		.ascii	"Src/main.c\000"
 181      6D61696E 
 181      2E6300
 182              		.section	.text.SystemClock_Config,"ax",%progbits
 183              		.align	2
 184              		.global	SystemClock_Config
 185              		.thumb
 186              		.thumb_func
 188              	SystemClock_Config:
 189              	.LFB124:
 147:Src/main.c    ****   /* USER CODE END 3 */
 148:Src/main.c    **** 
 149:Src/main.c    **** }
 150:Src/main.c    **** 
 151:Src/main.c    **** /**
 152:Src/main.c    ****   * @brief System Clock Configuration
 153:Src/main.c    ****   * @retval None
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccH7VTmO.s 			page 7


 154:Src/main.c    ****   */
 155:Src/main.c    **** void SystemClock_Config(void)
 156:Src/main.c    **** {
 190              		.loc 1 156 0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 80
 193              		@ frame_needed = 1, uses_anonymous_args = 0
 194 0000 80B5     		push	{r7, lr}
 195              	.LCFI3:
 196              		.cfi_def_cfa_offset 8
 197              		.cfi_offset 7, -8
 198              		.cfi_offset 14, -4
 199 0002 94B0     		sub	sp, sp, #80
 200              	.LCFI4:
 201              		.cfi_def_cfa_offset 88
 202 0004 00AF     		add	r7, sp, #0
 203              	.LCFI5:
 204              		.cfi_def_cfa_register 7
 205              	.LBB2:
 157:Src/main.c    **** 
 158:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 159:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 160:Src/main.c    **** 
 161:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 162:Src/main.c    ****     */
 163:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 206              		.loc 1 163 0
 207 0006 0023     		movs	r3, #0
 208 0008 BB60     		str	r3, [r7, #8]
 209 000a 344A     		ldr	r2, .L10
 210 000c 334B     		ldr	r3, .L10
 211 000e 1B6C     		ldr	r3, [r3, #64]
 212 0010 43F08053 		orr	r3, r3, #268435456
 213 0014 1364     		str	r3, [r2, #64]
 214 0016 314B     		ldr	r3, .L10
 215 0018 1B6C     		ldr	r3, [r3, #64]
 216 001a 03F08053 		and	r3, r3, #268435456
 217 001e BB60     		str	r3, [r7, #8]
 218 0020 BB68     		ldr	r3, [r7, #8]
 219              	.LBE2:
 220              	.LBB3:
 164:Src/main.c    **** 
 165:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 221              		.loc 1 165 0
 222 0022 0023     		movs	r3, #0
 223 0024 7B60     		str	r3, [r7, #4]
 224 0026 2E4A     		ldr	r2, .L10+4
 225 0028 2D4B     		ldr	r3, .L10+4
 226 002a 1B68     		ldr	r3, [r3]
 227 002c 23F44043 		bic	r3, r3, #49152
 228 0030 43F40043 		orr	r3, r3, #32768
 229 0034 1360     		str	r3, [r2]
 230 0036 2A4B     		ldr	r3, .L10+4
 231 0038 1B68     		ldr	r3, [r3]
 232 003a 03F44043 		and	r3, r3, #49152
 233 003e 7B60     		str	r3, [r7, #4]
 234 0040 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccH7VTmO.s 			page 8


 235              	.LBE3:
 166:Src/main.c    **** 
 167:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 168:Src/main.c    ****     */
 169:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 236              		.loc 1 169 0
 237 0042 0223     		movs	r3, #2
 238 0044 3B62     		str	r3, [r7, #32]
 170:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 239              		.loc 1 170 0
 240 0046 0123     		movs	r3, #1
 241 0048 FB62     		str	r3, [r7, #44]
 171:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 242              		.loc 1 171 0
 243 004a 1023     		movs	r3, #16
 244 004c 3B63     		str	r3, [r7, #48]
 172:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 245              		.loc 1 172 0
 246 004e 0223     		movs	r3, #2
 247 0050 BB63     		str	r3, [r7, #56]
 173:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 248              		.loc 1 173 0
 249 0052 0023     		movs	r3, #0
 250 0054 FB63     		str	r3, [r7, #60]
 174:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 251              		.loc 1 174 0
 252 0056 0823     		movs	r3, #8
 253 0058 3B64     		str	r3, [r7, #64]
 175:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 84;
 254              		.loc 1 175 0
 255 005a 5423     		movs	r3, #84
 256 005c 7B64     		str	r3, [r7, #68]
 176:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 257              		.loc 1 176 0
 258 005e 0223     		movs	r3, #2
 259 0060 BB64     		str	r3, [r7, #72]
 177:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 260              		.loc 1 177 0
 261 0062 0423     		movs	r3, #4
 262 0064 FB64     		str	r3, [r7, #76]
 178:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 263              		.loc 1 178 0
 264 0066 07F12003 		add	r3, r7, #32
 265 006a 1846     		mov	r0, r3
 266 006c FFF7FEFF 		bl	HAL_RCC_OscConfig
 267 0070 0346     		mov	r3, r0
 268 0072 002B     		cmp	r3, #0
 269 0074 03D0     		beq	.L8
 179:Src/main.c    ****   {
 180:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 270              		.loc 1 180 0
 271 0076 1B48     		ldr	r0, .L10+8
 272 0078 B421     		movs	r1, #180
 273 007a FFF7FEFF 		bl	_Error_Handler
 274              	.L8:
 181:Src/main.c    ****   }
 182:Src/main.c    **** 
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccH7VTmO.s 			page 9


 183:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 184:Src/main.c    ****     */
 185:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 275              		.loc 1 185 0
 276 007e 0F23     		movs	r3, #15
 277 0080 FB60     		str	r3, [r7, #12]
 186:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 187:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 278              		.loc 1 187 0
 279 0082 0223     		movs	r3, #2
 280 0084 3B61     		str	r3, [r7, #16]
 188:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 281              		.loc 1 188 0
 282 0086 0023     		movs	r3, #0
 283 0088 7B61     		str	r3, [r7, #20]
 189:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 284              		.loc 1 189 0
 285 008a 4FF48053 		mov	r3, #4096
 286 008e BB61     		str	r3, [r7, #24]
 190:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 287              		.loc 1 190 0
 288 0090 0023     		movs	r3, #0
 289 0092 FB61     		str	r3, [r7, #28]
 191:Src/main.c    **** 
 192:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 290              		.loc 1 192 0
 291 0094 07F10C03 		add	r3, r7, #12
 292 0098 1846     		mov	r0, r3
 293 009a 0221     		movs	r1, #2
 294 009c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 295 00a0 0346     		mov	r3, r0
 296 00a2 002B     		cmp	r3, #0
 297 00a4 03D0     		beq	.L9
 193:Src/main.c    ****   {
 194:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 298              		.loc 1 194 0
 299 00a6 0F48     		ldr	r0, .L10+8
 300 00a8 C221     		movs	r1, #194
 301 00aa FFF7FEFF 		bl	_Error_Handler
 302              	.L9:
 195:Src/main.c    ****   }
 196:Src/main.c    **** 
 197:Src/main.c    ****     /**Configure the Systick interrupt time 
 198:Src/main.c    ****     */
 199:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 303              		.loc 1 199 0
 304 00ae FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 305 00b2 0246     		mov	r2, r0
 306 00b4 0C4B     		ldr	r3, .L10+12
 307 00b6 A3FB0223 		umull	r2, r3, r3, r2
 308 00ba 9B09     		lsrs	r3, r3, #6
 309 00bc 1846     		mov	r0, r3
 310 00be FFF7FEFF 		bl	HAL_SYSTICK_Config
 200:Src/main.c    **** 
 201:Src/main.c    ****     /**Configure the Systick 
 202:Src/main.c    ****     */
 203:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccH7VTmO.s 			page 10


 311              		.loc 1 203 0
 312 00c2 0420     		movs	r0, #4
 313 00c4 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 204:Src/main.c    **** 
 205:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 206:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 314              		.loc 1 206 0
 315 00c8 4FF0FF30 		mov	r0, #-1
 316 00cc 0021     		movs	r1, #0
 317 00ce 0022     		movs	r2, #0
 318 00d0 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 207:Src/main.c    **** }
 319              		.loc 1 207 0
 320 00d4 5037     		adds	r7, r7, #80
 321              	.LCFI6:
 322              		.cfi_def_cfa_offset 8
 323 00d6 BD46     		mov	sp, r7
 324              	.LCFI7:
 325              		.cfi_def_cfa_register 13
 326              		@ sp needed
 327 00d8 80BD     		pop	{r7, pc}
 328              	.L11:
 329 00da 00BF     		.align	2
 330              	.L10:
 331 00dc 00380240 		.word	1073887232
 332 00e0 00700040 		.word	1073770496
 333 00e4 08000000 		.word	.LC1
 334 00e8 D34D6210 		.word	274877907
 335              		.cfi_endproc
 336              	.LFE124:
 338              		.section	.text.MX_ADC1_Init,"ax",%progbits
 339              		.align	2
 340              		.thumb
 341              		.thumb_func
 343              	MX_ADC1_Init:
 344              	.LFB125:
 208:Src/main.c    **** 
 209:Src/main.c    **** /* ADC1 init function */
 210:Src/main.c    **** static void MX_ADC1_Init(void)
 211:Src/main.c    **** {
 345              		.loc 1 211 0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 16
 348              		@ frame_needed = 1, uses_anonymous_args = 0
 349 0000 80B5     		push	{r7, lr}
 350              	.LCFI8:
 351              		.cfi_def_cfa_offset 8
 352              		.cfi_offset 7, -8
 353              		.cfi_offset 14, -4
 354 0002 84B0     		sub	sp, sp, #16
 355              	.LCFI9:
 356              		.cfi_def_cfa_offset 24
 357 0004 00AF     		add	r7, sp, #0
 358              	.LCFI10:
 359              		.cfi_def_cfa_register 7
 212:Src/main.c    **** 
 213:Src/main.c    ****   ADC_ChannelConfTypeDef sConfig;
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccH7VTmO.s 			page 11


 214:Src/main.c    **** 
 215:Src/main.c    ****     /**Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of co
 216:Src/main.c    ****     */
 217:Src/main.c    ****   hadc1.Instance = ADC1;
 360              		.loc 1 217 0
 361 0006 224B     		ldr	r3, .L15
 362 0008 224A     		ldr	r2, .L15+4
 363 000a 1A60     		str	r2, [r3]
 218:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 364              		.loc 1 218 0
 365 000c 204B     		ldr	r3, .L15
 366 000e 4FF48032 		mov	r2, #65536
 367 0012 5A60     		str	r2, [r3, #4]
 219:Src/main.c    ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 368              		.loc 1 219 0
 369 0014 1E4B     		ldr	r3, .L15
 370 0016 0022     		movs	r2, #0
 371 0018 9A60     		str	r2, [r3, #8]
 220:Src/main.c    ****   hadc1.Init.ScanConvMode = DISABLE;
 372              		.loc 1 220 0
 373 001a 1D4B     		ldr	r3, .L15
 374 001c 0022     		movs	r2, #0
 375 001e 1A61     		str	r2, [r3, #16]
 221:Src/main.c    ****   hadc1.Init.ContinuousConvMode = ENABLE;
 376              		.loc 1 221 0
 377 0020 1B4B     		ldr	r3, .L15
 378 0022 0122     		movs	r2, #1
 379 0024 9A61     		str	r2, [r3, #24]
 222:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 380              		.loc 1 222 0
 381 0026 1A4B     		ldr	r3, .L15
 382 0028 0022     		movs	r2, #0
 383 002a 1A62     		str	r2, [r3, #32]
 223:Src/main.c    ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 384              		.loc 1 223 0
 385 002c 184B     		ldr	r3, .L15
 386 002e 0022     		movs	r2, #0
 387 0030 DA62     		str	r2, [r3, #44]
 224:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 388              		.loc 1 224 0
 389 0032 174B     		ldr	r3, .L15
 390 0034 184A     		ldr	r2, .L15+8
 391 0036 9A62     		str	r2, [r3, #40]
 225:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 392              		.loc 1 225 0
 393 0038 154B     		ldr	r3, .L15
 394 003a 0022     		movs	r2, #0
 395 003c DA60     		str	r2, [r3, #12]
 226:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 396              		.loc 1 226 0
 397 003e 144B     		ldr	r3, .L15
 398 0040 0122     		movs	r2, #1
 399 0042 DA61     		str	r2, [r3, #28]
 227:Src/main.c    ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 400              		.loc 1 227 0
 401 0044 124B     		ldr	r3, .L15
 402 0046 0022     		movs	r2, #0
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccH7VTmO.s 			page 12


 403 0048 1A63     		str	r2, [r3, #48]
 228:Src/main.c    ****   hadc1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 404              		.loc 1 228 0
 405 004a 114B     		ldr	r3, .L15
 406 004c 0022     		movs	r2, #0
 407 004e 5A61     		str	r2, [r3, #20]
 229:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 408              		.loc 1 229 0
 409 0050 0F48     		ldr	r0, .L15
 410 0052 FFF7FEFF 		bl	HAL_ADC_Init
 411 0056 0346     		mov	r3, r0
 412 0058 002B     		cmp	r3, #0
 413 005a 03D0     		beq	.L13
 230:Src/main.c    ****   {
 231:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 414              		.loc 1 231 0
 415 005c 0F48     		ldr	r0, .L15+12
 416 005e E721     		movs	r1, #231
 417 0060 FFF7FEFF 		bl	_Error_Handler
 418              	.L13:
 232:Src/main.c    ****   }
 233:Src/main.c    **** 
 234:Src/main.c    ****     /**Configure for the selected ADC regular channel its corresponding rank in the sequencer and i
 235:Src/main.c    ****     */
 236:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_0;
 419              		.loc 1 236 0
 420 0064 0023     		movs	r3, #0
 421 0066 3B60     		str	r3, [r7]
 237:Src/main.c    ****   sConfig.Rank = 1;
 422              		.loc 1 237 0
 423 0068 0123     		movs	r3, #1
 424 006a 7B60     		str	r3, [r7, #4]
 238:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 425              		.loc 1 238 0
 426 006c 0023     		movs	r3, #0
 427 006e BB60     		str	r3, [r7, #8]
 239:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 428              		.loc 1 239 0
 429 0070 3B46     		mov	r3, r7
 430 0072 0748     		ldr	r0, .L15
 431 0074 1946     		mov	r1, r3
 432 0076 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 433 007a 0346     		mov	r3, r0
 434 007c 002B     		cmp	r3, #0
 435 007e 03D0     		beq	.L12
 240:Src/main.c    ****   {
 241:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 436              		.loc 1 241 0
 437 0080 0648     		ldr	r0, .L15+12
 438 0082 F121     		movs	r1, #241
 439 0084 FFF7FEFF 		bl	_Error_Handler
 440              	.L12:
 242:Src/main.c    ****   }
 243:Src/main.c    **** 
 244:Src/main.c    **** }
 441              		.loc 1 244 0
 442 0088 1037     		adds	r7, r7, #16
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccH7VTmO.s 			page 13


 443              	.LCFI11:
 444              		.cfi_def_cfa_offset 8
 445 008a BD46     		mov	sp, r7
 446              	.LCFI12:
 447              		.cfi_def_cfa_register 13
 448              		@ sp needed
 449 008c 80BD     		pop	{r7, pc}
 450              	.L16:
 451 008e 00BF     		.align	2
 452              	.L15:
 453 0090 00000000 		.word	hadc1
 454 0094 00200140 		.word	1073815552
 455 0098 0100000F 		.word	251658241
 456 009c 08000000 		.word	.LC1
 457              		.cfi_endproc
 458              	.LFE125:
 460              		.section	.text.MX_I2C1_Init,"ax",%progbits
 461              		.align	2
 462              		.thumb
 463              		.thumb_func
 465              	MX_I2C1_Init:
 466              	.LFB126:
 245:Src/main.c    **** 
 246:Src/main.c    **** /* I2C1 init function */
 247:Src/main.c    **** static void MX_I2C1_Init(void)
 248:Src/main.c    **** {
 467              		.loc 1 248 0
 468              		.cfi_startproc
 469              		@ args = 0, pretend = 0, frame = 0
 470              		@ frame_needed = 1, uses_anonymous_args = 0
 471 0000 80B5     		push	{r7, lr}
 472              	.LCFI13:
 473              		.cfi_def_cfa_offset 8
 474              		.cfi_offset 7, -8
 475              		.cfi_offset 14, -4
 476 0002 00AF     		add	r7, sp, #0
 477              	.LCFI14:
 478              		.cfi_def_cfa_register 7
 249:Src/main.c    **** 
 250:Src/main.c    ****   hi2c1.Instance = I2C1;
 479              		.loc 1 250 0
 480 0004 134B     		ldr	r3, .L19
 481 0006 144A     		ldr	r2, .L19+4
 482 0008 1A60     		str	r2, [r3]
 251:Src/main.c    ****   hi2c1.Init.ClockSpeed = 100000;
 483              		.loc 1 251 0
 484 000a 124B     		ldr	r3, .L19
 485 000c 134A     		ldr	r2, .L19+8
 486 000e 5A60     		str	r2, [r3, #4]
 252:Src/main.c    ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 487              		.loc 1 252 0
 488 0010 104B     		ldr	r3, .L19
 489 0012 0022     		movs	r2, #0
 490 0014 9A60     		str	r2, [r3, #8]
 253:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
 491              		.loc 1 253 0
 492 0016 0F4B     		ldr	r3, .L19
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccH7VTmO.s 			page 14


 493 0018 0022     		movs	r2, #0
 494 001a DA60     		str	r2, [r3, #12]
 254:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 495              		.loc 1 254 0
 496 001c 0D4B     		ldr	r3, .L19
 497 001e 4FF48042 		mov	r2, #16384
 498 0022 1A61     		str	r2, [r3, #16]
 255:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 499              		.loc 1 255 0
 500 0024 0B4B     		ldr	r3, .L19
 501 0026 0022     		movs	r2, #0
 502 0028 5A61     		str	r2, [r3, #20]
 256:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
 503              		.loc 1 256 0
 504 002a 0A4B     		ldr	r3, .L19
 505 002c 0022     		movs	r2, #0
 506 002e 9A61     		str	r2, [r3, #24]
 257:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 507              		.loc 1 257 0
 508 0030 084B     		ldr	r3, .L19
 509 0032 0022     		movs	r2, #0
 510 0034 DA61     		str	r2, [r3, #28]
 258:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 511              		.loc 1 258 0
 512 0036 074B     		ldr	r3, .L19
 513 0038 0022     		movs	r2, #0
 514 003a 1A62     		str	r2, [r3, #32]
 259:Src/main.c    ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 515              		.loc 1 259 0
 516 003c 0548     		ldr	r0, .L19
 517 003e FFF7FEFF 		bl	HAL_I2C_Init
 518 0042 0346     		mov	r3, r0
 519 0044 002B     		cmp	r3, #0
 520 0046 04D0     		beq	.L17
 260:Src/main.c    ****   {
 261:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 521              		.loc 1 261 0
 522 0048 0548     		ldr	r0, .L19+12
 523 004a 40F20511 		movw	r1, #261
 524 004e FFF7FEFF 		bl	_Error_Handler
 525              	.L17:
 262:Src/main.c    ****   }
 263:Src/main.c    **** 
 264:Src/main.c    **** }
 526              		.loc 1 264 0
 527 0052 80BD     		pop	{r7, pc}
 528              	.L20:
 529              		.align	2
 530              	.L19:
 531 0054 00000000 		.word	hi2c1
 532 0058 00540040 		.word	1073763328
 533 005c A0860100 		.word	100000
 534 0060 08000000 		.word	.LC1
 535              		.cfi_endproc
 536              	.LFE126:
 538              		.section	.text.MX_GPIO_Init,"ax",%progbits
 539              		.align	2
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccH7VTmO.s 			page 15


 540              		.thumb
 541              		.thumb_func
 543              	MX_GPIO_Init:
 544              	.LFB127:
 265:Src/main.c    **** 
 266:Src/main.c    **** /** Pinout Configuration
 267:Src/main.c    **** */
 268:Src/main.c    **** static void MX_GPIO_Init(void)
 269:Src/main.c    **** {
 545              		.loc 1 269 0
 546              		.cfi_startproc
 547              		@ args = 0, pretend = 0, frame = 8
 548              		@ frame_needed = 1, uses_anonymous_args = 0
 549              		@ link register save eliminated.
 550 0000 80B4     		push	{r7}
 551              	.LCFI15:
 552              		.cfi_def_cfa_offset 4
 553              		.cfi_offset 7, -4
 554 0002 83B0     		sub	sp, sp, #12
 555              	.LCFI16:
 556              		.cfi_def_cfa_offset 16
 557 0004 00AF     		add	r7, sp, #0
 558              	.LCFI17:
 559              		.cfi_def_cfa_register 7
 560              	.LBB4:
 270:Src/main.c    **** 
 271:Src/main.c    ****   /* GPIO Ports Clock Enable */
 272:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 561              		.loc 1 272 0
 562 0006 0023     		movs	r3, #0
 563 0008 7B60     		str	r3, [r7, #4]
 564 000a 0F4A     		ldr	r2, .L22
 565 000c 0E4B     		ldr	r3, .L22
 566 000e 1B6B     		ldr	r3, [r3, #48]
 567 0010 43F00103 		orr	r3, r3, #1
 568 0014 1363     		str	r3, [r2, #48]
 569 0016 0C4B     		ldr	r3, .L22
 570 0018 1B6B     		ldr	r3, [r3, #48]
 571 001a 03F00103 		and	r3, r3, #1
 572 001e 7B60     		str	r3, [r7, #4]
 573 0020 7B68     		ldr	r3, [r7, #4]
 574              	.LBE4:
 575              	.LBB5:
 273:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 576              		.loc 1 273 0
 577 0022 0023     		movs	r3, #0
 578 0024 3B60     		str	r3, [r7]
 579 0026 084A     		ldr	r2, .L22
 580 0028 074B     		ldr	r3, .L22
 581 002a 1B6B     		ldr	r3, [r3, #48]
 582 002c 43F00203 		orr	r3, r3, #2
 583 0030 1363     		str	r3, [r2, #48]
 584 0032 054B     		ldr	r3, .L22
 585 0034 1B6B     		ldr	r3, [r3, #48]
 586 0036 03F00203 		and	r3, r3, #2
 587 003a 3B60     		str	r3, [r7]
 588 003c 3B68     		ldr	r3, [r7]
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccH7VTmO.s 			page 16


 589              	.LBE5:
 274:Src/main.c    **** 
 275:Src/main.c    **** }
 590              		.loc 1 275 0
 591 003e 0C37     		adds	r7, r7, #12
 592              	.LCFI18:
 593              		.cfi_def_cfa_offset 4
 594 0040 BD46     		mov	sp, r7
 595              	.LCFI19:
 596              		.cfi_def_cfa_register 13
 597              		@ sp needed
 598 0042 5DF8047B 		ldr	r7, [sp], #4
 599              	.LCFI20:
 600              		.cfi_restore 7
 601              		.cfi_def_cfa_offset 0
 602 0046 7047     		bx	lr
 603              	.L23:
 604              		.align	2
 605              	.L22:
 606 0048 00380240 		.word	1073887232
 607              		.cfi_endproc
 608              	.LFE127:
 610              		.section	.text._Error_Handler,"ax",%progbits
 611              		.align	2
 612              		.global	_Error_Handler
 613              		.thumb
 614              		.thumb_func
 616              	_Error_Handler:
 617              	.LFB128:
 276:Src/main.c    **** 
 277:Src/main.c    **** /* USER CODE BEGIN 4 */
 278:Src/main.c    **** 
 279:Src/main.c    **** /* USER CODE END 4 */
 280:Src/main.c    **** 
 281:Src/main.c    **** /**
 282:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 283:Src/main.c    ****   * @param  file: The file name as string.
 284:Src/main.c    ****   * @param  line: The line in file as a number.
 285:Src/main.c    ****   * @retval None
 286:Src/main.c    ****   */
 287:Src/main.c    **** void _Error_Handler(char *file, int line)
 288:Src/main.c    **** {
 618              		.loc 1 288 0
 619              		.cfi_startproc
 620              		@ args = 0, pretend = 0, frame = 8
 621              		@ frame_needed = 1, uses_anonymous_args = 0
 622              		@ link register save eliminated.
 623 0000 80B4     		push	{r7}
 624              	.LCFI21:
 625              		.cfi_def_cfa_offset 4
 626              		.cfi_offset 7, -4
 627 0002 83B0     		sub	sp, sp, #12
 628              	.LCFI22:
 629              		.cfi_def_cfa_offset 16
 630 0004 00AF     		add	r7, sp, #0
 631              	.LCFI23:
 632              		.cfi_def_cfa_register 7
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccH7VTmO.s 			page 17


 633 0006 7860     		str	r0, [r7, #4]
 634 0008 3960     		str	r1, [r7]
 635              	.L25:
 289:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 290:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 291:Src/main.c    ****   while (1)
 292:Src/main.c    ****   {
 293:Src/main.c    ****   }
 636              		.loc 1 293 0 discriminator 1
 637 000a FEE7     		b	.L25
 638              		.cfi_endproc
 639              	.LFE128:
 641              		.text
 642              	.Letext0:
 643              		.file 2 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/machine/_default_types
 644              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/sys/_stdint.h"
 645              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 646              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 647              		.file 6 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h
 648              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 649              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 650              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 651              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 652              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 653              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 654              		.file 13 "Inc/fonts.h"
 655              		.file 14 "Inc/ssd1306.h"
 656              		.file 15 "Inc/circular_buffer.h"
 657              		.file 16 "Drivers/CMSIS/Include/core_cm4.h"
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccH7VTmO.s 			page 18


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
                            *COM*:0000000000000048 hadc1
                            *COM*:0000000000000054 hi2c1
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccH7VTmO.s:25     .rodata:0000000000000000 $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccH7VTmO.s:29     .text.main:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccH7VTmO.s:34     .text.main:0000000000000000 main
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccH7VTmO.s:188    .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccH7VTmO.s:543    .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccH7VTmO.s:343    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccH7VTmO.s:465    .text.MX_I2C1_Init:0000000000000000 MX_I2C1_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccH7VTmO.s:171    .text.main:00000000000000fc $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccH7VTmO.s:183    .text.SystemClock_Config:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccH7VTmO.s:616    .text._Error_Handler:0000000000000000 _Error_Handler
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccH7VTmO.s:331    .text.SystemClock_Config:00000000000000dc $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccH7VTmO.s:339    .text.MX_ADC1_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccH7VTmO.s:453    .text.MX_ADC1_Init:0000000000000090 $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccH7VTmO.s:461    .text.MX_I2C1_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccH7VTmO.s:531    .text.MX_I2C1_Init:0000000000000054 $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccH7VTmO.s:539    .text.MX_GPIO_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccH7VTmO.s:606    .text.MX_GPIO_Init:0000000000000048 $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccH7VTmO.s:611    .text._Error_Handler:0000000000000000 $t
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
__aeabi_ui2d
__aeabi_d2iz
HAL_Init
HAL_ADC_Start
ssd1306_Init
HAL_Delay
ssd1306_Fill
ssd1306_UpdateScreen
circ_bufsum_init
malloc
HAL_ADC_PollForConversion
HAL_ADC_GetValue
circ_bufsum_put
goertzel
ssd1306_SetCursor
sprintf
ssd1306_WriteString
Font_11x18
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_I2C_Init
