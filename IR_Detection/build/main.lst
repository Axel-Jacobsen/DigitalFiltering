<<<<<<< HEAD
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s 			page 1
=======
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc8BMQRz.s 			page 1
>>>>>>> 8014290a4e73a4bcc694909df24c79fa8737d68c


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"main.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  25              	MX_GPIO_Init:
<<<<<<< HEAD
  26              	.LFB129:
=======
  26              	.LFB127:
>>>>>>> 8014290a4e73a4bcc694909df24c79fa8737d68c
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** 
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
<<<<<<< HEAD
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s 			page 2
=======
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc8BMQRz.s 			page 2
>>>>>>> 8014290a4e73a4bcc694909df24c79fa8737d68c


  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  40:Src/main.c    **** #include "main.h"
  41:Src/main.c    **** #include "stm32f4xx_hal.h"
  42:Src/main.c    **** 
  43:Src/main.c    **** /* USER CODE BEGIN Includes */
  44:Src/main.c    **** #include "filter.h"
  45:Src/main.c    **** #include "ssd1306.h"
<<<<<<< HEAD
  46:Src/main.c    **** #include "stdlib.h"
  47:Src/main.c    **** #include "math.h"
  48:Src/main.c    **** 
  49:Src/main.c    **** #define WINDOW_SIZE 1024
  50:Src/main.c    **** #define SAMPLING_RATE 42079
  51:Src/main.c    **** #define HIST_LENGTH 500
  52:Src/main.c    **** /* USER CODE END Includes */
  53:Src/main.c    **** 
  54:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  55:Src/main.c    **** ADC_HandleTypeDef hadc1;
  56:Src/main.c    **** DMA_HandleTypeDef hdma_adc1;
  57:Src/main.c    **** 
  58:Src/main.c    **** I2C_HandleTypeDef hi2c1;
  59:Src/main.c    **** 
  60:Src/main.c    **** TIM_HandleTypeDef htim2;
  61:Src/main.c    **** 
  62:Src/main.c    **** /* USER CODE BEGIN PV */
  63:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE END PV */
  66:Src/main.c    **** 
  67:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  68:Src/main.c    **** void SystemClock_Config(void);
  69:Src/main.c    **** static void MX_GPIO_Init(void);
  70:Src/main.c    **** static void MX_DMA_Init(void);
  71:Src/main.c    **** static void MX_ADC1_Init(void);
  72:Src/main.c    **** static void MX_I2C1_Init(void);
  73:Src/main.c    **** static void MX_TIM2_Init(void);
  74:Src/main.c    **** 
  75:Src/main.c    **** /* USER CODE BEGIN PFP */
  76:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  77:Src/main.c    **** 
  78:Src/main.c    **** /* USER CODE END PFP */
  79:Src/main.c    **** 
  80:Src/main.c    **** /* USER CODE BEGIN 0 */
  81:Src/main.c    **** volatile uint8_t dealt_with = 0;
  82:Src/main.c    **** uint32_t value_adc[1] = {0};
  83:Src/main.c    **** 
  84:Src/main.c    **** // char *adc = (char *)malloc(13 * sizeof(char));
  85:Src/main.c    **** int calc = 0;
  86:Src/main.c    **** double value;
  87:Src/main.c    **** double prev_val;
  88:Src/main.c    **** uint32_t n = 0;
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s 			page 3


  89:Src/main.c    **** uint16_t yes_no = 0;
  90:Src/main.c    **** double d1 = 0;
  91:Src/main.c    **** double d2 = 0;
  92:Src/main.c    **** double y = 0;
  93:Src/main.c    **** double total_power = 1;
  94:Src/main.c    **** double f_step, f_step_normalized, k, normalizedfreq, w_real;
  95:Src/main.c    **** // static circ_bufsum_t cbuf;
  96:Src/main.c    **** // circ_bufsum_t cbuf;
  97:Src/main.c    **** 
  98:Src/main.c    **** /* USER CODE END 0 */
  99:Src/main.c    **** 
 100:Src/main.c    **** /**
 101:Src/main.c    ****   * @brief  The application entry point.
 102:Src/main.c    ****   *
 103:Src/main.c    ****   * @retval None
 104:Src/main.c    ****   */
 105:Src/main.c    **** int main(void)
 106:Src/main.c    **** {
 107:Src/main.c    ****   /* USER CODE BEGIN 1 */
 108:Src/main.c    **** 
 109:Src/main.c    ****   /* USER CODE END 1 */
 110:Src/main.c    **** 
 111:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
 112:Src/main.c    **** 
 113:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 114:Src/main.c    ****   HAL_Init();
 115:Src/main.c    **** 
 116:Src/main.c    ****   /* USER CODE BEGIN Init */
 117:Src/main.c    **** 
 118:Src/main.c    ****   /* USER CODE END Init */
 119:Src/main.c    **** 
 120:Src/main.c    ****   /* Configure the system clock */
 121:Src/main.c    ****   SystemClock_Config();
 122:Src/main.c    **** 
 123:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 124:Src/main.c    ****   /* USER CODE END SysInit */
 125:Src/main.c    **** 
 126:Src/main.c    ****   /* Initialize all configured peripherals */
 127:Src/main.c    ****   MX_GPIO_Init();
 128:Src/main.c    ****   MX_DMA_Init();
 129:Src/main.c    ****   MX_ADC1_Init();
 130:Src/main.c    ****   MX_I2C1_Init();
 131:Src/main.c    ****   MX_TIM2_Init();
 132:Src/main.c    ****   /* USER CODE BEGIN 2 */
 133:Src/main.c    ****   ssd1306_Init();
 134:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim2);
 135:Src/main.c    ****   HAL_ADC_Start_DMA(&hadc1, value_adc, 1);
 136:Src/main.c    **** 
 137:Src/main.c    ****   ssd1306_Fill(Black);
 138:Src/main.c    ****   ssd1306_SetCursor(0, 0);
 139:Src/main.c    ****   ssd1306_WriteString("horray", Font_11x18, White);
 140:Src/main.c    ****   ssd1306_UpdateScreen();
 141:Src/main.c    ****   HAL_Delay(3000);
 142:Src/main.c    **** 
 143:Src/main.c    ****   f_step = SAMPLING_RATE / (double)WINDOW_SIZE;
 144:Src/main.c    ****   f_step_normalized = 1.0 / WINDOW_SIZE;
 145:Src/main.c    ****   k = 1000 / f_step;
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s 			page 4


 146:Src/main.c    ****   normalizedfreq = k * f_step_normalized;
 147:Src/main.c    ****   w_real = 2.0 * cos(2.0 * PI * normalizedfreq);
 148:Src/main.c    ****   /* USER CODE END 2 */
 149:Src/main.c    **** 
 150:Src/main.c    ****   /* Infinite loop */
 151:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 152:Src/main.c    ****   while (1)
 153:Src/main.c    ****   {
 154:Src/main.c    ****     // value = goertzel(value_adc, SAMPLING_RATE, 1000, WINDOW_SIZE);
 155:Src/main.c    ****     if (1)
 156:Src/main.c    ****     {
 157:Src/main.c    ****       char *adc = (char *)malloc(13 * sizeof(char));
 158:Src/main.c    ****       ssd1306_Fill(Black);
 159:Src/main.c    ****       ssd1306_SetCursor(0, 0);
 160:Src/main.c    ****       sprintf(adc, "n: %d", (int)n);
 161:Src/main.c    ****       ssd1306_WriteString(adc, Font_11x18, White);
 162:Src/main.c    ****       ssd1306_SetCursor(0, 18);
 163:Src/main.c    ****       sprintf(adc, "%d", (int)value_adc[0]);
 164:Src/main.c    ****       ssd1306_WriteString(adc, Font_11x18, White);
 165:Src/main.c    **** 
 166:Src/main.c    ****       int pre_decimal = (int)(value / 1);
 167:Src/main.c    ****       int post_decimal = (int)((value - (double)pre_decimal) * 100);
 168:Src/main.c    **** 
 169:Src/main.c    ****       sprintf(adc, "?: %d %d.%d", yes_no, pre_decimal, post_decimal);
 170:Src/main.c    ****       ssd1306_SetCursor(0, 36);
 171:Src/main.c    ****       ssd1306_WriteString(adc, Font_11x18, White);
 172:Src/main.c    ****       ssd1306_UpdateScreen();
 173:Src/main.c    ****       HAL_Delay(1000);
 174:Src/main.c    ****     }
 175:Src/main.c    **** 
 176:Src/main.c    ****   /* USER CODE END WHILE */
 177:Src/main.c    **** 
 178:Src/main.c    ****   /* USER CODE BEGIN 3 */
 179:Src/main.c    ****   }
 180:Src/main.c    ****   /* USER CODE END 3 */
 181:Src/main.c    **** 
 182:Src/main.c    **** }
 183:Src/main.c    **** 
 184:Src/main.c    **** /**
 185:Src/main.c    ****   * @brief System Clock Configuration
 186:Src/main.c    ****   * @retval None
 187:Src/main.c    ****   */
 188:Src/main.c    **** void SystemClock_Config(void)
 189:Src/main.c    **** {
 190:Src/main.c    **** 
 191:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 192:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 193:Src/main.c    **** 
 194:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 195:Src/main.c    ****     */
 196:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 197:Src/main.c    **** 
 198:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 199:Src/main.c    **** 
 200:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 201:Src/main.c    ****     */
 202:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s 			page 5


 203:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 204:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 205:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 206:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 207:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 208:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 84;
 209:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 210:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 211:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 212:Src/main.c    ****   {
 213:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 214:Src/main.c    ****   }
 215:Src/main.c    **** 
 216:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 217:Src/main.c    ****     */
 218:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 219:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 220:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 221:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 222:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 223:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 224:Src/main.c    **** 
 225:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 226:Src/main.c    ****   {
 227:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 228:Src/main.c    ****   }
 229:Src/main.c    **** 
 230:Src/main.c    ****     /**Configure the Systick interrupt time 
 231:Src/main.c    ****     */
 232:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 233:Src/main.c    **** 
 234:Src/main.c    ****     /**Configure the Systick 
 235:Src/main.c    ****     */
 236:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 237:Src/main.c    **** 
 238:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 239:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 240:Src/main.c    **** }
 241:Src/main.c    **** 
 242:Src/main.c    **** /* ADC1 init function */
 243:Src/main.c    **** static void MX_ADC1_Init(void)
 244:Src/main.c    **** {
 245:Src/main.c    **** 
 246:Src/main.c    ****   ADC_ChannelConfTypeDef sConfig;
 247:Src/main.c    **** 
 248:Src/main.c    ****     /**Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of co
 249:Src/main.c    ****     */
 250:Src/main.c    ****   hadc1.Instance = ADC1;
 251:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 252:Src/main.c    ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 253:Src/main.c    ****   hadc1.Init.ScanConvMode = DISABLE;
 254:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 255:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = ENABLE;
 256:Src/main.c    ****   hadc1.Init.NbrOfDiscConversion = 1;
 257:Src/main.c    ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
 258:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T2_TRGO;
 259:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s 			page 6


 260:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 261:Src/main.c    ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 262:Src/main.c    ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 263:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 264:Src/main.c    ****   {
 265:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 266:Src/main.c    ****   }
 267:Src/main.c    **** 
 268:Src/main.c    ****     /**Configure for the selected ADC regular channel its corresponding rank in the sequencer and i
 269:Src/main.c    ****     */
 270:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_0;
 271:Src/main.c    ****   sConfig.Rank = 1;
 272:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 273:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 274:Src/main.c    ****   {
 275:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 276:Src/main.c    ****   }
 277:Src/main.c    **** 
 278:Src/main.c    **** }
 279:Src/main.c    **** 
 280:Src/main.c    **** /* I2C1 init function */
 281:Src/main.c    **** static void MX_I2C1_Init(void)
 282:Src/main.c    **** {
 283:Src/main.c    **** 
 284:Src/main.c    ****   hi2c1.Instance = I2C1;
 285:Src/main.c    ****   hi2c1.Init.ClockSpeed = 100000;
 286:Src/main.c    ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 287:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
 288:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 289:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 290:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
 291:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 292:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 293:Src/main.c    ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 294:Src/main.c    ****   {
 295:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 296:Src/main.c    ****   }
 297:Src/main.c    **** 
 298:Src/main.c    **** }
 299:Src/main.c    **** 
 300:Src/main.c    **** /* TIM2 init function */
 301:Src/main.c    **** static void MX_TIM2_Init(void)
 302:Src/main.c    **** {
 303:Src/main.c    **** 
 304:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig;
 305:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
 306:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
 307:Src/main.c    **** 
 308:Src/main.c    ****   htim2.Instance = TIM2;
 309:Src/main.c    ****   htim2.Init.Prescaler = 2;
 310:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 311:Src/main.c    ****   htim2.Init.Period = 20;
 312:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 313:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 314:Src/main.c    ****   {
 315:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 316:Src/main.c    ****   }
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s 			page 7


 317:Src/main.c    **** 
 318:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 319:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 320:Src/main.c    ****   {
 321:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 322:Src/main.c    ****   }
 323:Src/main.c    **** 
 324:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 325:Src/main.c    ****   {
 326:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 327:Src/main.c    ****   }
 328:Src/main.c    **** 
 329:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_OC1;
 330:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_ENABLE;
 331:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 332:Src/main.c    ****   {
 333:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 334:Src/main.c    ****   }
 335:Src/main.c    **** 
 336:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 337:Src/main.c    ****   sConfigOC.Pulse = 0;
 338:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 339:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 340:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 341:Src/main.c    ****   {
 342:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 343:Src/main.c    ****   }
 344:Src/main.c    **** 
 345:Src/main.c    **** }
 346:Src/main.c    **** 
 347:Src/main.c    **** /** 
 348:Src/main.c    ****   * Enable DMA controller clock
 349:Src/main.c    ****   */
 350:Src/main.c    **** static void MX_DMA_Init(void) 
 351:Src/main.c    **** {
 352:Src/main.c    ****   /* DMA controller clock enable */
 353:Src/main.c    ****   __HAL_RCC_DMA2_CLK_ENABLE();
 354:Src/main.c    **** 
 355:Src/main.c    ****   /* DMA interrupt init */
 356:Src/main.c    ****   /* DMA2_Stream0_IRQn interrupt configuration */
 357:Src/main.c    ****   HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 0, 0);
 358:Src/main.c    ****   HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 359:Src/main.c    **** 
 360:Src/main.c    **** }
 361:Src/main.c    **** 
 362:Src/main.c    **** /** Pinout Configuration
 363:Src/main.c    **** */
 364:Src/main.c    **** static void MX_GPIO_Init(void)
 365:Src/main.c    **** {
  28              		.loc 1 365 0
=======
  46:Src/main.c    **** #include "circular_buffer.h"
  47:Src/main.c    **** 
  48:Src/main.c    **** #define WINDOW_SIZE 1024
  49:Src/main.c    **** #define SAMPLING_RATE 1400000
  50:Src/main.c    **** /* USER CODE END Includes */
  51:Src/main.c    **** 
  52:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  53:Src/main.c    **** ADC_HandleTypeDef hadc1;
  54:Src/main.c    **** 
  55:Src/main.c    **** I2C_HandleTypeDef hi2c1;
  56:Src/main.c    **** 
  57:Src/main.c    **** /* USER CODE BEGIN PV */
  58:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  59:Src/main.c    **** 
  60:Src/main.c    **** /* USER CODE END PV */
  61:Src/main.c    **** 
  62:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  63:Src/main.c    **** void SystemClock_Config(void);
  64:Src/main.c    **** static void MX_GPIO_Init(void);
  65:Src/main.c    **** static void MX_ADC1_Init(void);
  66:Src/main.c    **** static void MX_I2C1_Init(void);
  67:Src/main.c    **** 
  68:Src/main.c    **** /* USER CODE BEGIN PFP */
  69:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  70:Src/main.c    **** 
  71:Src/main.c    **** /* USER CODE END PFP */
  72:Src/main.c    **** 
  73:Src/main.c    **** /* USER CODE BEGIN 0 */
  74:Src/main.c    **** 
  75:Src/main.c    **** /* USER CODE END 0 */
  76:Src/main.c    **** 
  77:Src/main.c    **** /**
  78:Src/main.c    ****   * @brief  The application entry point.
  79:Src/main.c    ****   *
  80:Src/main.c    ****   * @retval None
  81:Src/main.c    ****   */
  82:Src/main.c    **** int main(void)
  83:Src/main.c    **** {
  84:Src/main.c    ****   /* USER CODE BEGIN 1 */
  85:Src/main.c    **** 
  86:Src/main.c    ****   /* USER CODE END 1 */
  87:Src/main.c    **** 
  88:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc8BMQRz.s 			page 3


  89:Src/main.c    **** 
  90:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  91:Src/main.c    ****   HAL_Init();
  92:Src/main.c    **** 
  93:Src/main.c    ****   /* USER CODE BEGIN Init */
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* USER CODE END Init */
  96:Src/main.c    **** 
  97:Src/main.c    ****   /* Configure the system clock */
  98:Src/main.c    ****   SystemClock_Config();
  99:Src/main.c    **** 
 100:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 101:Src/main.c    **** 
 102:Src/main.c    ****   /* USER CODE END SysInit */
 103:Src/main.c    **** 
 104:Src/main.c    ****   /* Initialize all configured peripherals */
 105:Src/main.c    ****   MX_GPIO_Init();
 106:Src/main.c    ****   MX_ADC1_Init();
 107:Src/main.c    ****   MX_I2C1_Init();
 108:Src/main.c    ****   /* USER CODE BEGIN 2 */
 109:Src/main.c    ****   HAL_ADC_Start(&hadc1);
 110:Src/main.c    ****   ssd1306_Init();
 111:Src/main.c    ****   ssd1306_Fill(Black);
 112:Src/main.c    ****   ssd1306_WriteString("Good Morning", Font_11x18, White);
 113:Src/main.c    ****   ssd1306_UpdateScreen();
 114:Src/main.c    ****   HAL_Delay(3000);
 115:Src/main.c    ****   /* USER CODE END 2 */
 116:Src/main.c    **** 
 117:Src/main.c    ****   /* Infinite loop */
 118:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 119:Src/main.c    ****   double value;
 120:Src/main.c    ****   circ_bufsum_t cbuf;
 121:Src/main.c    ****   circ_bufsum_init(&cbuf, WINDOW_SIZE);
 122:Src/main.c    ****   char *adc = (char *)malloc(13 * sizeof(char));
 123:Src/main.c    ****   char *adc1 = (char *)malloc(13 * sizeof(char));
 124:Src/main.c    ****   uint16_t n = 0;
 125:Src/main.c    ****   FILE *f00 = fopen("realDat.txt", "w");
 126:Src/main.c    ****   while (1)
 127:Src/main.c    ****   {
 128:Src/main.c    ****     // first fill the buffer
 129:Src/main.c    ****     if (n < (WINDOW_SIZE - 1))
 130:Src/main.c    ****     {
 131:Src/main.c    ****       HAL_ADC_PollForConversion(&hadc1, 1000);
 132:Src/main.c    ****       int real_val = HAL_ADC_GetValue(&hadc1);
 133:Src/main.c    ****       circ_bufsum_put(&cbuf, real_val);
 134:Src/main.c    ****       fprintf(f00, "%d\n", real_val);
 135:Src/main.c    ****       sprintf(adc1, "%d", n);
 136:Src/main.c    ****       ssd1306_SetCursor(0, 0);
 137:Src/main.c    ****       ssd1306_Fill(Black);
 138:Src/main.c    ****       ssd1306_WriteString(adc1, Font_11x18, White);
 139:Src/main.c    ****       ssd1306_UpdateScreen();
 140:Src/main.c    ****       n++;
 141:Src/main.c    ****     }
 142:Src/main.c    ****     else
 143:Src/main.c    ****     {
 144:Src/main.c    ****       // Get new value, get power
 145:Src/main.c    ****       n++;
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc8BMQRz.s 			page 4


 146:Src/main.c    ****       HAL_ADC_PollForConversion(&hadc1, 1000);
 147:Src/main.c    ****       int val = HAL_ADC_GetValue(&hadc1);
 148:Src/main.c    ****       fprintf(f00, "%d\n", val);
 149:Src/main.c    **** 
 150:Src/main.c    ****       circ_bufsum_put(&cbuf, val);
 151:Src/main.c    ****       value = goertzel(cbuf.buffer, SAMPLING_RATE, 1000, WINDOW_SIZE);
 152:Src/main.c    ****       int pre_decimal = (int)value / 1;
 153:Src/main.c    ****       int post_decimal = value - pre_decimal;
 154:Src/main.c    ****       ssd1306_Fill(Black);
 155:Src/main.c    ****       sprintf(adc, "P: %d.%d", pre_decimal, post_decimal);
 156:Src/main.c    ****       ssd1306_SetCursor(0, 0);
 157:Src/main.c    ****       ssd1306_WriteString(adc, Font_11x18, White);
 158:Src/main.c    ****       sprintf(adc, "N: %d", n);
 159:Src/main.c    ****       ssd1306_SetCursor(0, 18);
 160:Src/main.c    ****       ssd1306_WriteString(adc, Font_11x18, White);
 161:Src/main.c    ****       sprintf(adc, "V: %d", val);
 162:Src/main.c    ****       ssd1306_SetCursor(0, 36);
 163:Src/main.c    ****       ssd1306_WriteString(adc, Font_11x18, White);
 164:Src/main.c    ****       ssd1306_UpdateScreen();
 165:Src/main.c    ****     }
 166:Src/main.c    ****     /* USER CODE END WHILE */
 167:Src/main.c    **** 
 168:Src/main.c    ****     /* USER CODE BEGIN 3 */
 169:Src/main.c    ****   }
 170:Src/main.c    ****   /* USER CODE END 3 */
 171:Src/main.c    **** }
 172:Src/main.c    **** 
 173:Src/main.c    **** /**
 174:Src/main.c    ****   * @brief System Clock Configuration
 175:Src/main.c    ****   * @retval None
 176:Src/main.c    ****   */
 177:Src/main.c    **** void SystemClock_Config(void)
 178:Src/main.c    **** {
 179:Src/main.c    **** 
 180:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 181:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 182:Src/main.c    **** 
 183:Src/main.c    ****   /**Configure the main internal regulator output voltage 
 184:Src/main.c    ****     */
 185:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 186:Src/main.c    **** 
 187:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 188:Src/main.c    **** 
 189:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 190:Src/main.c    ****     */
 191:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 192:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 193:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 194:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 195:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 196:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 197:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 84;
 198:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 199:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 200:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 201:Src/main.c    ****   {
 202:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc8BMQRz.s 			page 5


 203:Src/main.c    ****   }
 204:Src/main.c    **** 
 205:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 206:Src/main.c    ****     */
 207:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | R
 208:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 209:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 210:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 211:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 212:Src/main.c    **** 
 213:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 214:Src/main.c    ****   {
 215:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 216:Src/main.c    ****   }
 217:Src/main.c    **** 
 218:Src/main.c    ****   /**Configure the Systick interrupt time 
 219:Src/main.c    ****     */
 220:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq() / 1000);
 221:Src/main.c    **** 
 222:Src/main.c    ****   /**Configure the Systick 
 223:Src/main.c    ****     */
 224:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 225:Src/main.c    **** 
 226:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 227:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 228:Src/main.c    **** }
 229:Src/main.c    **** 
 230:Src/main.c    **** /* ADC1 init function */
 231:Src/main.c    **** static void MX_ADC1_Init(void)
 232:Src/main.c    **** {
 233:Src/main.c    **** 
 234:Src/main.c    ****   ADC_ChannelConfTypeDef sConfig;
 235:Src/main.c    **** 
 236:Src/main.c    ****   /**Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conv
 237:Src/main.c    ****     */
 238:Src/main.c    ****   hadc1.Instance = ADC1;
 239:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 240:Src/main.c    ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 241:Src/main.c    ****   hadc1.Init.ScanConvMode = DISABLE;
 242:Src/main.c    ****   hadc1.Init.ContinuousConvMode = ENABLE;
 243:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 244:Src/main.c    ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 245:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 246:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 247:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 248:Src/main.c    ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 249:Src/main.c    ****   hadc1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 250:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 251:Src/main.c    ****   {
 252:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 253:Src/main.c    ****   }
 254:Src/main.c    **** 
 255:Src/main.c    ****   /**Configure for the selected ADC regular channel its corresponding rank in the sequencer and its
 256:Src/main.c    ****     */
 257:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_0;
 258:Src/main.c    ****   sConfig.Rank = 1;
 259:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc8BMQRz.s 			page 6


 260:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 261:Src/main.c    ****   {
 262:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 263:Src/main.c    ****   }
 264:Src/main.c    **** }
 265:Src/main.c    **** 
 266:Src/main.c    **** /* I2C1 init function */
 267:Src/main.c    **** static void MX_I2C1_Init(void)
 268:Src/main.c    **** {
 269:Src/main.c    **** 
 270:Src/main.c    ****   hi2c1.Instance = I2C1;
 271:Src/main.c    ****   hi2c1.Init.ClockSpeed = 100000;
 272:Src/main.c    ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 273:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
 274:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 275:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 276:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
 277:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 278:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 279:Src/main.c    ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 280:Src/main.c    ****   {
 281:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 282:Src/main.c    ****   }
 283:Src/main.c    **** }
 284:Src/main.c    **** 
 285:Src/main.c    **** /** Pinout Configuration
 286:Src/main.c    **** */
 287:Src/main.c    **** static void MX_GPIO_Init(void)
 288:Src/main.c    **** {
  28              		.loc 1 288 0
>>>>>>> 8014290a4e73a4bcc694909df24c79fa8737d68c
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 82B0     		sub	sp, sp, #8
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
<<<<<<< HEAD
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s 			page 8


  36              	.LBB2:
 366:Src/main.c    **** 
 367:Src/main.c    ****   /* GPIO Ports Clock Enable */
 368:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  37              		.loc 1 368 0
=======
  36              	.LBB2:
 289:Src/main.c    **** 
 290:Src/main.c    ****   /* GPIO Ports Clock Enable */
 291:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  37              		.loc 1 291 0
>>>>>>> 8014290a4e73a4bcc694909df24c79fa8737d68c
  38 0002 0021     		movs	r1, #0
  39 0004 0091     		str	r1, [sp]
  40 0006 0B4B     		ldr	r3, .L3
  41 0008 1A6B     		ldr	r2, [r3, #48]
  42 000a 42F00102 		orr	r2, r2, #1
  43 000e 1A63     		str	r2, [r3, #48]
  44 0010 1A6B     		ldr	r2, [r3, #48]
  45 0012 02F00102 		and	r2, r2, #1
  46 0016 0092     		str	r2, [sp]
  47 0018 009A     		ldr	r2, [sp]
  48              	.LBE2:
  49              	.LBB3:
<<<<<<< HEAD
 369:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  50              		.loc 1 369 0
  51 001a 0191     		str	r1, [sp, #4]
=======
 292:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  50              		.loc 1 292 0
  51 001a 0191     		str	r1, [sp, #4]
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc8BMQRz.s 			page 7


>>>>>>> 8014290a4e73a4bcc694909df24c79fa8737d68c
  52 001c 1A6B     		ldr	r2, [r3, #48]
  53 001e 42F00202 		orr	r2, r2, #2
  54 0022 1A63     		str	r2, [r3, #48]
  55 0024 1B6B     		ldr	r3, [r3, #48]
  56 0026 03F00203 		and	r3, r3, #2
  57 002a 0193     		str	r3, [sp, #4]
  58 002c 019B     		ldr	r3, [sp, #4]
  59              	.LBE3:
<<<<<<< HEAD
 370:Src/main.c    **** 
 371:Src/main.c    **** }
  60              		.loc 1 371 0
=======
 293:Src/main.c    **** }
  60              		.loc 1 293 0
>>>>>>> 8014290a4e73a4bcc694909df24c79fa8737d68c
  61 002e 02B0     		add	sp, sp, #8
  62              	.LCFI1:
  63              		.cfi_def_cfa_offset 0
  64              		@ sp needed
  65 0030 7047     		bx	lr
  66              	.L4:
  67 0032 00BF     		.align	2
  68              	.L3:
  69 0034 00380240 		.word	1073887232
  70              		.cfi_endproc
<<<<<<< HEAD
  71              	.LFE129:
  73              		.section	.text.MX_DMA_Init,"ax",%progbits
  74              		.align	2
  75              		.thumb
  76              		.thumb_func
  78              	MX_DMA_Init:
  79              	.LFB128:
 351:Src/main.c    ****   /* DMA controller clock enable */
  80              		.loc 1 351 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 8
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84 0000 00B5     		push	{lr}
  85              	.LCFI2:
  86              		.cfi_def_cfa_offset 4
  87              		.cfi_offset 14, -4
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s 			page 9


  88 0002 83B0     		sub	sp, sp, #12
  89              	.LCFI3:
  90              		.cfi_def_cfa_offset 16
  91              	.LBB4:
 353:Src/main.c    **** 
  92              		.loc 1 353 0
  93 0004 0022     		movs	r2, #0
  94 0006 0192     		str	r2, [sp, #4]
  95 0008 094B     		ldr	r3, .L7
  96 000a 196B     		ldr	r1, [r3, #48]
  97 000c 41F48001 		orr	r1, r1, #4194304
  98 0010 1963     		str	r1, [r3, #48]
  99 0012 1B6B     		ldr	r3, [r3, #48]
 100 0014 03F48003 		and	r3, r3, #4194304
 101 0018 0193     		str	r3, [sp, #4]
 102 001a 019B     		ldr	r3, [sp, #4]
 103              	.LBE4:
 357:Src/main.c    ****   HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 104              		.loc 1 357 0
 105 001c 3820     		movs	r0, #56
 106 001e 1146     		mov	r1, r2
 107 0020 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 108              	.LVL0:
 358:Src/main.c    **** 
 109              		.loc 1 358 0
 110 0024 3820     		movs	r0, #56
 111 0026 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 112              	.LVL1:
 360:Src/main.c    **** 
 113              		.loc 1 360 0
 114 002a 03B0     		add	sp, sp, #12
 115              	.LCFI4:
 116              		.cfi_def_cfa_offset 4
 117              		@ sp needed
 118 002c 5DF804FB 		ldr	pc, [sp], #4
 119              	.L8:
 120              		.align	2
 121              	.L7:
 122 0030 00380240 		.word	1073887232
 123              		.cfi_endproc
 124              	.LFE128:
 126              		.global	__aeabi_ui2d
 127              		.global	__aeabi_dsub
 128              		.global	__aeabi_dmul
 129              		.global	__aeabi_dadd
 130              		.global	__aeabi_ddiv
 131              		.global	__aeabi_dcmpgt
 132              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 133              		.align	2
 134              		.global	HAL_ADC_ConvCpltCallback
 135              		.thumb
 136              		.thumb_func
 138              	HAL_ADC_ConvCpltCallback:
 139              	.LFB130:
 372:Src/main.c    **** 
 373:Src/main.c    **** /* USER CODE BEGIN 4 */
 374:Src/main.c    **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc)
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s 			page 10


 375:Src/main.c    **** {
 140              		.loc 1 375 0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144              	.LVL2:
 145 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 146              	.LCFI5:
 147              		.cfi_def_cfa_offset 40
 148              		.cfi_offset 3, -40
 149              		.cfi_offset 4, -36
 150              		.cfi_offset 5, -32
 151              		.cfi_offset 6, -28
 152              		.cfi_offset 7, -24
 153              		.cfi_offset 8, -20
 154              		.cfi_offset 9, -16
 155              		.cfi_offset 10, -12
 156              		.cfi_offset 11, -8
 157              		.cfi_offset 14, -4
 158 0004 2DED048B 		fstmfdd	sp!, {d8, d9}
 159              	.LCFI6:
 160              		.cfi_def_cfa_offset 56
 161              		.cfi_offset 80, -56
 162              		.cfi_offset 81, -52
 163              		.cfi_offset 82, -48
 164              		.cfi_offset 83, -44
 376:Src/main.c    ****   ++n;
 165              		.loc 1 376 0
 166 0008 494B     		ldr	r3, .L13
 167 000a 1C68     		ldr	r4, [r3]
 168 000c 0134     		adds	r4, r4, #1
 169 000e 1C60     		str	r4, [r3]
 377:Src/main.c    ****   // value = circular_goertzel_stream((double)value_adc[0] - 2048, 1000, SAMPLING_RATE, WINDOW_SIZE
 378:Src/main.c    ****   total_power += ((double)value_adc[0] - 2048) * ((double)value_adc[0] - 2048);
 170              		.loc 1 378 0
 171 0010 484B     		ldr	r3, .L13+4
 172 0012 1868     		ldr	r0, [r3]
 173              	.LVL3:
 174 0014 FFF7FEFF 		bl	__aeabi_ui2d
 175              	.LVL4:
 176 0018 0022     		movs	r2, #0
 177 001a 474B     		ldr	r3, .L13+8
 178 001c FFF7FEFF 		bl	__aeabi_dsub
 179              	.LVL5:
 180 0020 8046     		mov	r8, r0
 181 0022 8946     		mov	r9, r1
 182 0024 0246     		mov	r2, r0
 183 0026 0B46     		mov	r3, r1
 184 0028 FFF7FEFF 		bl	__aeabi_dmul
 185              	.LVL6:
 186 002c 434D     		ldr	r5, .L13+12
 187 002e D5E90023 		ldrd	r2, [r5]
 188 0032 FFF7FEFF 		bl	__aeabi_dadd
 189              	.LVL7:
 190 0036 8246     		mov	r10, r0
 191 0038 8B46     		mov	fp, r1
 192 003a C5E900AB 		strd	r10, [r5]
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s 			page 11


 379:Src/main.c    ****   y = ((double)value_adc[0] - 2048) + w_real * d1 - d2 - 100;
 193              		.loc 1 379 0
 194 003e 404B     		ldr	r3, .L13+16
 195 0040 93ED008B 		fldd	d8, [r3]
 196 0044 3F4D     		ldr	r5, .L13+20
 197 0046 D5E90067 		ldrd	r6, [r5]
 198 004a 51EC180B 		fmrrd	r0, r1, d8
 199 004e 3246     		mov	r2, r6
 200 0050 3B46     		mov	r3, r7
 201 0052 FFF7FEFF 		bl	__aeabi_dmul
 202              	.LVL8:
 203 0056 0246     		mov	r2, r0
 204 0058 0B46     		mov	r3, r1
 205 005a 4046     		mov	r0, r8
 206 005c 4946     		mov	r1, r9
 207 005e FFF7FEFF 		bl	__aeabi_dadd
 208              	.LVL9:
 209 0062 DFF80081 		ldr	r8, .L13+52
 210 0066 D8E90023 		ldrd	r2, [r8]
 211 006a FFF7FEFF 		bl	__aeabi_dsub
 212              	.LVL10:
 213 006e 0022     		movs	r2, #0
 214 0070 354B     		ldr	r3, .L13+24
 215 0072 FFF7FEFF 		bl	__aeabi_dsub
 216              	.LVL11:
 217 0076 41EC190B 		fmdrr	d9, r0, r1
 218 007a 344B     		ldr	r3, .L13+28
 219 007c C3E90001 		strd	r0, [r3]
 380:Src/main.c    ****   d2 = d1;
 220              		.loc 1 380 0
 221 0080 C8E90067 		strd	r6, [r8]
 381:Src/main.c    ****   d1 = y;
 222              		.loc 1 381 0
 223 0084 C5E90001 		strd	r0, [r5]
 382:Src/main.c    ****   value = (d2 * d2 + d1 * d1 - w_real * d1 * d2) / total_power;
 224              		.loc 1 382 0
 225 0088 3046     		mov	r0, r6
 226 008a 3946     		mov	r1, r7
 227 008c 3246     		mov	r2, r6
 228 008e 3B46     		mov	r3, r7
 229 0090 FFF7FEFF 		bl	__aeabi_dmul
 230              	.LVL12:
 231 0094 8046     		mov	r8, r0
 232 0096 8946     		mov	r9, r1
 233 0098 51EC190B 		fmrrd	r0, r1, d9
 234 009c 53EC192B 		fmrrd	r2, r3, d9
 235 00a0 FFF7FEFF 		bl	__aeabi_dmul
 236              	.LVL13:
 237 00a4 0246     		mov	r2, r0
 238 00a6 0B46     		mov	r3, r1
 239 00a8 4046     		mov	r0, r8
 240 00aa 4946     		mov	r1, r9
 241 00ac FFF7FEFF 		bl	__aeabi_dadd
 242              	.LVL14:
 243 00b0 8046     		mov	r8, r0
 244 00b2 8946     		mov	r9, r1
 245 00b4 51EC180B 		fmrrd	r0, r1, d8
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s 			page 12


 246 00b8 53EC192B 		fmrrd	r2, r3, d9
 247 00bc FFF7FEFF 		bl	__aeabi_dmul
 248              	.LVL15:
 249 00c0 0246     		mov	r2, r0
 250 00c2 0B46     		mov	r3, r1
 251 00c4 3046     		mov	r0, r6
 252 00c6 3946     		mov	r1, r7
 253 00c8 FFF7FEFF 		bl	__aeabi_dmul
 254              	.LVL16:
 255 00cc 0246     		mov	r2, r0
 256 00ce 0B46     		mov	r3, r1
 257 00d0 4046     		mov	r0, r8
 258 00d2 4946     		mov	r1, r9
 259 00d4 FFF7FEFF 		bl	__aeabi_dsub
 260              	.LVL17:
 261 00d8 5246     		mov	r2, r10
 262 00da 5B46     		mov	r3, fp
 263 00dc FFF7FEFF 		bl	__aeabi_ddiv
 264              	.LVL18:
 265 00e0 0646     		mov	r6, r0
 266 00e2 0F46     		mov	r7, r1
 267 00e4 1A4B     		ldr	r3, .L13+32
 268 00e6 C3E90067 		strd	r6, [r3]
 383:Src/main.c    **** 
 384:Src/main.c    ****   if (n % HIST_LENGTH == 0)
 269              		.loc 1 384 0
 270 00ea 1A4B     		ldr	r3, .L13+36
 271 00ec A3FB0423 		umull	r2, r3, r3, r4
 272 00f0 5B09     		lsrs	r3, r3, #5
 273 00f2 4FF4FA72 		mov	r2, #500
 274 00f6 02FB1343 		mls	r3, r2, r3, r4
 275 00fa 93B9     		cbnz	r3, .L10
 385:Src/main.c    ****   {
 386:Src/main.c    ****     yes_no = (value - prev_val) > 0 ? 1 : 0;
 276              		.loc 1 386 0
 277 00fc 164B     		ldr	r3, .L13+40
 278 00fe D3E90023 		ldrd	r2, [r3]
 279 0102 FFF7FEFF 		bl	__aeabi_dsub
 280              	.LVL19:
 281 0106 4FF00104 		mov	r4, #1	@ movhi
 282 010a 0022     		movs	r2, #0
 283 010c 0023     		movs	r3, #0
 284 010e FFF7FEFF 		bl	__aeabi_dcmpgt
 285              	.LVL20:
 286 0112 08B9     		cbnz	r0, .L11
 287 0114 4FF00004 		mov	r4, #0	@ movhi
 288              	.L11:
 289 0118 104B     		ldr	r3, .L13+44
 290 011a 1C80     		strh	r4, [r3]	@ movhi
 387:Src/main.c    ****     prev_val = value;
 291              		.loc 1 387 0
 292 011c 0E4B     		ldr	r3, .L13+40
 293 011e C3E90067 		strd	r6, [r3]
 294              	.L10:
 388:Src/main.c    ****   }
 389:Src/main.c    ****   calc = 1;
 295              		.loc 1 389 0
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s 			page 13


 296 0122 0122     		movs	r2, #1
 297 0124 0E4B     		ldr	r3, .L13+48
 298 0126 1A60     		str	r2, [r3]
 390:Src/main.c    **** }
 299              		.loc 1 390 0
 300 0128 BDEC048B 		fldmfdd	sp!, {d8-d9}
 301              	.LCFI7:
 302              		.cfi_restore 82
 303              		.cfi_restore 83
 304              		.cfi_restore 80
 305              		.cfi_restore 81
 306              		.cfi_def_cfa_offset 40
 307 012c BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 308              	.L14:
 309              		.align	2
 310              	.L13:
 311 0130 00000000 		.word	.LANCHOR0
 312 0134 00000000 		.word	.LANCHOR1
 313 0138 0000A040 		.word	1084227584
 314 013c 00000000 		.word	.LANCHOR2
 315 0140 00000000 		.word	w_real
 316 0144 00000000 		.word	.LANCHOR3
 317 0148 00005940 		.word	1079574528
 318 014c 00000000 		.word	.LANCHOR5
 319 0150 00000000 		.word	value
 320 0154 D34D6210 		.word	274877907
 321 0158 00000000 		.word	prev_val
 322 015c 00000000 		.word	.LANCHOR6
 323 0160 00000000 		.word	.LANCHOR7
 324 0164 00000000 		.word	.LANCHOR4
 325              		.cfi_endproc
 326              	.LFE130:
 328              		.section	.text._Error_Handler,"ax",%progbits
 329              		.align	2
 330              		.global	_Error_Handler
 331              		.thumb
 332              		.thumb_func
 334              	_Error_Handler:
 335              	.LFB131:
 391:Src/main.c    **** /* USER CODE END 4 */
 392:Src/main.c    **** 
 393:Src/main.c    **** /**
 394:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 395:Src/main.c    ****   * @param  file: The file name as string.
 396:Src/main.c    ****   * @param  line: The line in file as a number.
 397:Src/main.c    ****   * @retval None
 398:Src/main.c    ****   */
 399:Src/main.c    **** void _Error_Handler(char *file, int line)
 400:Src/main.c    **** {
 336              		.loc 1 400 0
 337              		.cfi_startproc
 338              		@ Volatile: function does not return.
 339              		@ args = 0, pretend = 0, frame = 0
 340              		@ frame_needed = 0, uses_anonymous_args = 0
 341              		@ link register save eliminated.
 342              	.LVL21:
 343              	.L16:
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s 			page 14


 401:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 402:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 403:Src/main.c    ****   while (1)
 404:Src/main.c    ****   {
 405:Src/main.c    ****   }
 344              		.loc 1 405 0 discriminator 1
 345 0000 FEE7     		b	.L16
 346              		.cfi_endproc
 347              	.LFE131:
 349 0002 00BF     		.section	.text.MX_ADC1_Init,"ax",%progbits
 350              		.align	2
 351              		.thumb
 352              		.thumb_func
 354              	MX_ADC1_Init:
 355              	.LFB125:
 244:Src/main.c    **** 
 356              		.loc 1 244 0
 357              		.cfi_startproc
 358              		@ args = 0, pretend = 0, frame = 16
 359              		@ frame_needed = 0, uses_anonymous_args = 0
 360 0000 00B5     		push	{lr}
 361              	.LCFI8:
 362              		.cfi_def_cfa_offset 4
 363              		.cfi_offset 14, -4
 364 0002 85B0     		sub	sp, sp, #20
 365              	.LCFI9:
 366              		.cfi_def_cfa_offset 24
 250:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 367              		.loc 1 250 0
 368 0004 1848     		ldr	r0, .L21
 369 0006 194B     		ldr	r3, .L21+4
 370 0008 0360     		str	r3, [r0]
 251:Src/main.c    ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 371              		.loc 1 251 0
 372 000a 4FF48033 		mov	r3, #65536
 373 000e 4360     		str	r3, [r0, #4]
 252:Src/main.c    ****   hadc1.Init.ScanConvMode = DISABLE;
 374              		.loc 1 252 0
 375 0010 0022     		movs	r2, #0
 376 0012 8260     		str	r2, [r0, #8]
 253:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 377              		.loc 1 253 0
 378 0014 0261     		str	r2, [r0, #16]
 254:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = ENABLE;
 379              		.loc 1 254 0
 380 0016 8261     		str	r2, [r0, #24]
 255:Src/main.c    ****   hadc1.Init.NbrOfDiscConversion = 1;
 381              		.loc 1 255 0
 382 0018 0123     		movs	r3, #1
 383 001a 0362     		str	r3, [r0, #32]
 256:Src/main.c    ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
 384              		.loc 1 256 0
 385 001c 4362     		str	r3, [r0, #36]
 257:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T2_TRGO;
 386              		.loc 1 257 0
 387 001e 4FF08051 		mov	r1, #268435456
 388 0022 C162     		str	r1, [r0, #44]
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s 			page 15


 258:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 389              		.loc 1 258 0
 390 0024 4FF0C061 		mov	r1, #100663296
 391 0028 8162     		str	r1, [r0, #40]
 259:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 392              		.loc 1 259 0
 393 002a C260     		str	r2, [r0, #12]
 260:Src/main.c    ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 394              		.loc 1 260 0
 395 002c C361     		str	r3, [r0, #28]
 261:Src/main.c    ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 396              		.loc 1 261 0
 397 002e 0363     		str	r3, [r0, #48]
 262:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 398              		.loc 1 262 0
 399 0030 4361     		str	r3, [r0, #20]
 263:Src/main.c    ****   {
 400              		.loc 1 263 0
 401 0032 FFF7FEFF 		bl	HAL_ADC_Init
 402              	.LVL22:
 403 0036 20B1     		cbz	r0, .L18
 265:Src/main.c    ****   }
 404              		.loc 1 265 0
 405 0038 0D48     		ldr	r0, .L21+8
 406 003a 40F20911 		movw	r1, #265
 407 003e FFF7FEFF 		bl	_Error_Handler
 408              	.LVL23:
 409              	.L18:
 270:Src/main.c    ****   sConfig.Rank = 1;
 410              		.loc 1 270 0
 411 0042 0023     		movs	r3, #0
 412 0044 0093     		str	r3, [sp]
 271:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 413              		.loc 1 271 0
 414 0046 0123     		movs	r3, #1
 415 0048 0193     		str	r3, [sp, #4]
 272:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 416              		.loc 1 272 0
 417 004a 0723     		movs	r3, #7
 418 004c 0293     		str	r3, [sp, #8]
 273:Src/main.c    ****   {
 419              		.loc 1 273 0
 420 004e 0648     		ldr	r0, .L21
 421 0050 6946     		mov	r1, sp
 422 0052 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 423              	.LVL24:
 424 0056 20B1     		cbz	r0, .L17
 275:Src/main.c    ****   }
 425              		.loc 1 275 0
 426 0058 0548     		ldr	r0, .L21+8
 427 005a 40F21311 		movw	r1, #275
 428 005e FFF7FEFF 		bl	_Error_Handler
 429              	.LVL25:
 430              	.L17:
 278:Src/main.c    **** 
 431              		.loc 1 278 0
 432 0062 05B0     		add	sp, sp, #20
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s 			page 16


 433              	.LCFI10:
 434              		.cfi_def_cfa_offset 4
 435              		@ sp needed
 436 0064 5DF804FB 		ldr	pc, [sp], #4
 437              	.L22:
 438              		.align	2
 439              	.L21:
 440 0068 00000000 		.word	hadc1
 441 006c 00200140 		.word	1073815552
 442 0070 00000000 		.word	.LC0
 443              		.cfi_endproc
 444              	.LFE125:
 446              		.section	.text.MX_I2C1_Init,"ax",%progbits
 447              		.align	2
 448              		.thumb
 449              		.thumb_func
 451              	MX_I2C1_Init:
 452              	.LFB126:
 282:Src/main.c    **** 
 453              		.loc 1 282 0
 454              		.cfi_startproc
 455              		@ args = 0, pretend = 0, frame = 0
 456              		@ frame_needed = 0, uses_anonymous_args = 0
 457 0000 08B5     		push	{r3, lr}
 458              	.LCFI11:
 459              		.cfi_def_cfa_offset 8
 460              		.cfi_offset 3, -8
 461              		.cfi_offset 14, -4
 284:Src/main.c    ****   hi2c1.Init.ClockSpeed = 100000;
 462              		.loc 1 284 0
 463 0002 0C48     		ldr	r0, .L26
 464 0004 0C4B     		ldr	r3, .L26+4
 465 0006 0360     		str	r3, [r0]
 285:Src/main.c    ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 466              		.loc 1 285 0
 467 0008 0C4B     		ldr	r3, .L26+8
 468 000a 4360     		str	r3, [r0, #4]
 286:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
 469              		.loc 1 286 0
 470 000c 0023     		movs	r3, #0
 471 000e 8360     		str	r3, [r0, #8]
 287:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 472              		.loc 1 287 0
 473 0010 C360     		str	r3, [r0, #12]
 288:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 474              		.loc 1 288 0
 475 0012 4FF48042 		mov	r2, #16384
 476 0016 0261     		str	r2, [r0, #16]
 289:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
 477              		.loc 1 289 0
 478 0018 4361     		str	r3, [r0, #20]
 290:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 479              		.loc 1 290 0
 480 001a 8361     		str	r3, [r0, #24]
 291:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 481              		.loc 1 291 0
 482 001c C361     		str	r3, [r0, #28]
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s 			page 17


 292:Src/main.c    ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 483              		.loc 1 292 0
 484 001e 0362     		str	r3, [r0, #32]
 293:Src/main.c    ****   {
 485              		.loc 1 293 0
 486 0020 FFF7FEFF 		bl	HAL_I2C_Init
 487              	.LVL26:
 488 0024 20B1     		cbz	r0, .L23
 295:Src/main.c    ****   }
 489              		.loc 1 295 0
 490 0026 0648     		ldr	r0, .L26+12
 491 0028 40F22711 		movw	r1, #295
 492 002c FFF7FEFF 		bl	_Error_Handler
 493              	.LVL27:
 494              	.L23:
 495 0030 08BD     		pop	{r3, pc}
 496              	.L27:
 497 0032 00BF     		.align	2
 498              	.L26:
 499 0034 00000000 		.word	hi2c1
 500 0038 00540040 		.word	1073763328
 501 003c A0860100 		.word	100000
 502 0040 00000000 		.word	.LC0
 503              		.cfi_endproc
 504              	.LFE126:
 506              		.section	.text.MX_TIM2_Init,"ax",%progbits
 507              		.align	2
 508              		.thumb
 509              		.thumb_func
 511              	MX_TIM2_Init:
 512              	.LFB127:
 302:Src/main.c    **** 
 513              		.loc 1 302 0
 514              		.cfi_startproc
 515              		@ args = 0, pretend = 0, frame = 56
 516              		@ frame_needed = 0, uses_anonymous_args = 0
 517 0000 00B5     		push	{lr}
 518              	.LCFI12:
 519              		.cfi_def_cfa_offset 4
 520              		.cfi_offset 14, -4
 521 0002 8FB0     		sub	sp, sp, #60
 522              	.LCFI13:
 523              		.cfi_def_cfa_offset 64
 308:Src/main.c    ****   htim2.Init.Prescaler = 2;
 524              		.loc 1 308 0
 525 0004 2548     		ldr	r0, .L35
 526 0006 4FF08043 		mov	r3, #1073741824
 527 000a 0360     		str	r3, [r0]
 309:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 528              		.loc 1 309 0
 529 000c 0223     		movs	r3, #2
 530 000e 4360     		str	r3, [r0, #4]
 310:Src/main.c    ****   htim2.Init.Period = 20;
 531              		.loc 1 310 0
 532 0010 0023     		movs	r3, #0
 533 0012 8360     		str	r3, [r0, #8]
 311:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s 			page 18


 534              		.loc 1 311 0
 535 0014 1422     		movs	r2, #20
 536 0016 C260     		str	r2, [r0, #12]
 312:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 537              		.loc 1 312 0
 538 0018 0361     		str	r3, [r0, #16]
 313:Src/main.c    ****   {
 539              		.loc 1 313 0
 540 001a FFF7FEFF 		bl	HAL_TIM_Base_Init
 541              	.LVL28:
 542 001e 20B1     		cbz	r0, .L29
 315:Src/main.c    ****   }
 543              		.loc 1 315 0
 544 0020 1F48     		ldr	r0, .L35+4
 545 0022 40F23B11 		movw	r1, #315
 546 0026 FFF7FEFF 		bl	_Error_Handler
 547              	.LVL29:
 548              	.L29:
 318:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 549              		.loc 1 318 0
 550 002a 0EA9     		add	r1, sp, #56
 551 002c 4FF48053 		mov	r3, #4096
 552 0030 41F8103D 		str	r3, [r1, #-16]!
 319:Src/main.c    ****   {
 553              		.loc 1 319 0
 554 0034 1948     		ldr	r0, .L35
 555 0036 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 556              	.LVL30:
 557 003a 20B1     		cbz	r0, .L30
 321:Src/main.c    ****   }
 558              		.loc 1 321 0
 559 003c 1848     		ldr	r0, .L35+4
 560 003e 40F24111 		movw	r1, #321
 561 0042 FFF7FEFF 		bl	_Error_Handler
 562              	.LVL31:
 563              	.L30:
 324:Src/main.c    ****   {
 564              		.loc 1 324 0
 565 0046 1548     		ldr	r0, .L35
 566 0048 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 567              	.LVL32:
 568 004c 20B1     		cbz	r0, .L31
 326:Src/main.c    ****   }
 569              		.loc 1 326 0
 570 004e 1448     		ldr	r0, .L35+4
 571 0050 4FF4A371 		mov	r1, #326
 572 0054 FFF7FEFF 		bl	_Error_Handler
 573              	.LVL33:
 574              	.L31:
 329:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_ENABLE;
 575              		.loc 1 329 0
 576 0058 3023     		movs	r3, #48
 577 005a 0893     		str	r3, [sp, #32]
 330:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 578              		.loc 1 330 0
 579 005c 8023     		movs	r3, #128
 580 005e 0993     		str	r3, [sp, #36]
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s 			page 19


 331:Src/main.c    ****   {
 581              		.loc 1 331 0
 582 0060 0E48     		ldr	r0, .L35
 583 0062 08A9     		add	r1, sp, #32
 584 0064 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 585              	.LVL34:
 586 0068 20B1     		cbz	r0, .L32
 333:Src/main.c    ****   }
 587              		.loc 1 333 0
 588 006a 0D48     		ldr	r0, .L35+4
 589 006c 40F24D11 		movw	r1, #333
 590 0070 FFF7FEFF 		bl	_Error_Handler
 591              	.LVL35:
 592              	.L32:
 336:Src/main.c    ****   sConfigOC.Pulse = 0;
 593              		.loc 1 336 0
 594 0074 6023     		movs	r3, #96
 595 0076 0193     		str	r3, [sp, #4]
 337:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 596              		.loc 1 337 0
 597 0078 0022     		movs	r2, #0
 598 007a 0292     		str	r2, [sp, #8]
 338:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 599              		.loc 1 338 0
 600 007c 0392     		str	r2, [sp, #12]
 339:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 601              		.loc 1 339 0
 602 007e 0592     		str	r2, [sp, #20]
 340:Src/main.c    ****   {
 603              		.loc 1 340 0
 604 0080 0648     		ldr	r0, .L35
 605 0082 01A9     		add	r1, sp, #4
 606 0084 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 607              	.LVL36:
 608 0088 20B1     		cbz	r0, .L28
 342:Src/main.c    ****   }
 609              		.loc 1 342 0
 610 008a 0548     		ldr	r0, .L35+4
 611 008c 4FF4AB71 		mov	r1, #342
 612 0090 FFF7FEFF 		bl	_Error_Handler
 613              	.LVL37:
 614              	.L28:
 345:Src/main.c    **** 
 615              		.loc 1 345 0
 616 0094 0FB0     		add	sp, sp, #60
 617              	.LCFI14:
 618              		.cfi_def_cfa_offset 4
 619              		@ sp needed
 620 0096 5DF804FB 		ldr	pc, [sp], #4
 621              	.L36:
 622 009a 00BF     		.align	2
 623              	.L35:
 624 009c 00000000 		.word	htim2
 625 00a0 00000000 		.word	.LC0
 626              		.cfi_endproc
 627              	.LFE127:
 629              		.section	.text.SystemClock_Config,"ax",%progbits
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s 			page 20


 630              		.align	2
 631              		.global	SystemClock_Config
 632              		.thumb
 633              		.thumb_func
 635              	SystemClock_Config:
 636              	.LFB124:
 189:Src/main.c    **** 
 637              		.loc 1 189 0
 638              		.cfi_startproc
 639              		@ args = 0, pretend = 0, frame = 80
 640              		@ frame_needed = 0, uses_anonymous_args = 0
 641 0000 00B5     		push	{lr}
 642              	.LCFI15:
 643              		.cfi_def_cfa_offset 4
 644              		.cfi_offset 14, -4
 645 0002 95B0     		sub	sp, sp, #84
 646              	.LCFI16:
 647              		.cfi_def_cfa_offset 88
 648              	.LBB5:
 196:Src/main.c    **** 
 649              		.loc 1 196 0
 650 0004 0022     		movs	r2, #0
 651 0006 0192     		str	r2, [sp, #4]
 652 0008 294B     		ldr	r3, .L41
 653 000a 196C     		ldr	r1, [r3, #64]
 654 000c 41F08051 		orr	r1, r1, #268435456
 655 0010 1964     		str	r1, [r3, #64]
 656 0012 1B6C     		ldr	r3, [r3, #64]
 657 0014 03F08053 		and	r3, r3, #268435456
 658 0018 0193     		str	r3, [sp, #4]
 659 001a 019B     		ldr	r3, [sp, #4]
 660              	.LBE5:
 661              	.LBB6:
 198:Src/main.c    **** 
 662              		.loc 1 198 0
 663 001c 0292     		str	r2, [sp, #8]
 664 001e 2549     		ldr	r1, .L41+4
 665 0020 0B68     		ldr	r3, [r1]
 666 0022 23F44043 		bic	r3, r3, #49152
 667 0026 43F40043 		orr	r3, r3, #32768
 668 002a 0B60     		str	r3, [r1]
 669 002c 0B68     		ldr	r3, [r1]
 670 002e 03F44043 		and	r3, r3, #49152
 671 0032 0293     		str	r3, [sp, #8]
 672 0034 029B     		ldr	r3, [sp, #8]
 673              	.LBE6:
 202:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 674              		.loc 1 202 0
 675 0036 0223     		movs	r3, #2
 676 0038 0893     		str	r3, [sp, #32]
 203:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 677              		.loc 1 203 0
 678 003a 0121     		movs	r1, #1
 679 003c 0B91     		str	r1, [sp, #44]
 204:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 680              		.loc 1 204 0
 681 003e 1021     		movs	r1, #16
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s 			page 21


 682 0040 0C91     		str	r1, [sp, #48]
 205:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 683              		.loc 1 205 0
 684 0042 0E93     		str	r3, [sp, #56]
 206:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 685              		.loc 1 206 0
 686 0044 0F92     		str	r2, [sp, #60]
 207:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 84;
 687              		.loc 1 207 0
 688 0046 0822     		movs	r2, #8
 689 0048 1092     		str	r2, [sp, #64]
 208:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 690              		.loc 1 208 0
 691 004a 5422     		movs	r2, #84
 692 004c 1192     		str	r2, [sp, #68]
 209:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 693              		.loc 1 209 0
 694 004e 1293     		str	r3, [sp, #72]
 210:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 695              		.loc 1 210 0
 696 0050 0423     		movs	r3, #4
 697 0052 1393     		str	r3, [sp, #76]
 211:Src/main.c    ****   {
 698              		.loc 1 211 0
 699 0054 08A8     		add	r0, sp, #32
 700 0056 FFF7FEFF 		bl	HAL_RCC_OscConfig
 701              	.LVL38:
 702 005a 18B1     		cbz	r0, .L38
 213:Src/main.c    ****   }
 703              		.loc 1 213 0
 704 005c 1648     		ldr	r0, .L41+8
 705 005e D521     		movs	r1, #213
 706 0060 FFF7FEFF 		bl	_Error_Handler
 707              	.LVL39:
 708              	.L38:
 218:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 709              		.loc 1 218 0
 710 0064 0F23     		movs	r3, #15
 711 0066 0393     		str	r3, [sp, #12]
 220:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 712              		.loc 1 220 0
 713 0068 0221     		movs	r1, #2
 714 006a 0491     		str	r1, [sp, #16]
 221:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 715              		.loc 1 221 0
 716 006c 0023     		movs	r3, #0
 717 006e 0593     		str	r3, [sp, #20]
 222:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 718              		.loc 1 222 0
 719 0070 4FF48052 		mov	r2, #4096
 720 0074 0692     		str	r2, [sp, #24]
 223:Src/main.c    **** 
 721              		.loc 1 223 0
 722 0076 0793     		str	r3, [sp, #28]
 225:Src/main.c    ****   {
 723              		.loc 1 225 0
 724 0078 03A8     		add	r0, sp, #12
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s 			page 22


 725 007a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 726              	.LVL40:
 727 007e 18B1     		cbz	r0, .L39
 227:Src/main.c    ****   }
 728              		.loc 1 227 0
 729 0080 0D48     		ldr	r0, .L41+8
 730 0082 E321     		movs	r1, #227
 731 0084 FFF7FEFF 		bl	_Error_Handler
 732              	.LVL41:
 733              	.L39:
 232:Src/main.c    **** 
 734              		.loc 1 232 0
 735 0088 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 736              	.LVL42:
 737 008c 0B4B     		ldr	r3, .L41+12
 738 008e A3FB0030 		umull	r3, r0, r3, r0
 739 0092 8009     		lsrs	r0, r0, #6
 740 0094 FFF7FEFF 		bl	HAL_SYSTICK_Config
 741              	.LVL43:
 236:Src/main.c    **** 
 742              		.loc 1 236 0
 743 0098 0420     		movs	r0, #4
 744 009a FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 745              	.LVL44:
 239:Src/main.c    **** }
 746              		.loc 1 239 0
 747 009e 4FF0FF30 		mov	r0, #-1
 748 00a2 0021     		movs	r1, #0
 749 00a4 0A46     		mov	r2, r1
 750 00a6 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 751              	.LVL45:
 240:Src/main.c    **** 
 752              		.loc 1 240 0
 753 00aa 15B0     		add	sp, sp, #84
 754              	.LCFI17:
 755              		.cfi_def_cfa_offset 4
 756              		@ sp needed
 757 00ac 5DF804FB 		ldr	pc, [sp], #4
 758              	.L42:
 759              		.align	2
 760              	.L41:
 761 00b0 00380240 		.word	1073887232
 762 00b4 00700040 		.word	1073770496
 763 00b8 00000000 		.word	.LC0
 764 00bc D34D6210 		.word	274877907
 765              		.cfi_endproc
 766              	.LFE124:
 768              		.global	__aeabi_d2iz
 769              		.global	__aeabi_i2d
 770              		.section	.text.main,"ax",%progbits
 771              		.align	2
 772              		.global	main
 773              		.thumb
 774              		.thumb_func
 776              	main:
 777              	.LFB123:
 106:Src/main.c    ****   /* USER CODE BEGIN 1 */
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s 			page 23


 778              		.loc 1 106 0
 779              		.cfi_startproc
 780              		@ args = 0, pretend = 0, frame = 0
 781              		@ frame_needed = 0, uses_anonymous_args = 0
 782 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 783              	.LCFI18:
 784              		.cfi_def_cfa_offset 24
 785              		.cfi_offset 4, -24
 786              		.cfi_offset 5, -20
 787              		.cfi_offset 6, -16
 788              		.cfi_offset 7, -12
 789              		.cfi_offset 8, -8
 790              		.cfi_offset 14, -4
 791 0004 82B0     		sub	sp, sp, #8
 792              	.LCFI19:
 793              		.cfi_def_cfa_offset 32
 114:Src/main.c    **** 
 794              		.loc 1 114 0
 795 0006 FFF7FEFF 		bl	HAL_Init
 796              	.LVL46:
 121:Src/main.c    **** 
 797              		.loc 1 121 0
 798 000a FFF7FEFF 		bl	SystemClock_Config
 799              	.LVL47:
 127:Src/main.c    ****   MX_DMA_Init();
 800              		.loc 1 127 0
 801 000e FFF7FEFF 		bl	MX_GPIO_Init
 802              	.LVL48:
 128:Src/main.c    ****   MX_ADC1_Init();
 803              		.loc 1 128 0
 804 0012 FFF7FEFF 		bl	MX_DMA_Init
 805              	.LVL49:
 129:Src/main.c    ****   MX_I2C1_Init();
 806              		.loc 1 129 0
 807 0016 FFF7FEFF 		bl	MX_ADC1_Init
 808              	.LVL50:
 130:Src/main.c    ****   MX_TIM2_Init();
 809              		.loc 1 130 0
 810 001a FFF7FEFF 		bl	MX_I2C1_Init
 811              	.LVL51:
 131:Src/main.c    ****   /* USER CODE BEGIN 2 */
 812              		.loc 1 131 0
 813 001e FFF7FEFF 		bl	MX_TIM2_Init
 814              	.LVL52:
 133:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim2);
 815              		.loc 1 133 0
 816 0022 FFF7FEFF 		bl	ssd1306_Init
 817              	.LVL53:
 134:Src/main.c    ****   HAL_ADC_Start_DMA(&hadc1, value_adc, 1);
 818              		.loc 1 134 0
 819 0026 5048     		ldr	r0, .L46+32
 820 0028 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 821              	.LVL54:
 135:Src/main.c    **** 
 822              		.loc 1 135 0
 823 002c 4F48     		ldr	r0, .L46+36
 824 002e 5049     		ldr	r1, .L46+40
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s 			page 24


 825 0030 0122     		movs	r2, #1
 826 0032 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 827              	.LVL55:
 137:Src/main.c    ****   ssd1306_SetCursor(0, 0);
 828              		.loc 1 137 0
 829 0036 0020     		movs	r0, #0
 830 0038 FFF7FEFF 		bl	ssd1306_Fill
 831              	.LVL56:
 138:Src/main.c    ****   ssd1306_WriteString("horray", Font_11x18, White);
 832              		.loc 1 138 0
 833 003c 0020     		movs	r0, #0
 834 003e 0146     		mov	r1, r0
 835 0040 FFF7FEFF 		bl	ssd1306_SetCursor
 836              	.LVL57:
 139:Src/main.c    ****   ssd1306_UpdateScreen();
 837              		.loc 1 139 0
 838 0044 4B4B     		ldr	r3, .L46+44
 839 0046 4C48     		ldr	r0, .L46+48
 840 0048 93E80600 		ldmia	r3, {r1, r2}
 841 004c 0123     		movs	r3, #1
 842 004e FFF7FEFF 		bl	ssd1306_WriteString
 843              	.LVL58:
 140:Src/main.c    ****   HAL_Delay(3000);
 844              		.loc 1 140 0
 845 0052 FFF7FEFF 		bl	ssd1306_UpdateScreen
 846              	.LVL59:
 141:Src/main.c    **** 
 847              		.loc 1 141 0
 848 0056 40F6B830 		movw	r0, #3000
 849 005a FFF7FEFF 		bl	HAL_Delay
 850              	.LVL60:
 143:Src/main.c    ****   f_step_normalized = 1.0 / WINDOW_SIZE;
 851              		.loc 1 143 0
 852 005e 3AA1     		adr	r1, .L46
 853 0060 D1E90001 		ldrd	r0, [r1]
 854 0064 454B     		ldr	r3, .L46+52
 855 0066 C3E90001 		strd	r0, [r3]
 144:Src/main.c    ****   k = 1000 / f_step;
 856              		.loc 1 144 0
 857 006a 0020     		movs	r0, #0
 858 006c 4449     		ldr	r1, .L46+56
 859 006e 454B     		ldr	r3, .L46+60
 860 0070 C3E90001 		strd	r0, [r3]
 145:Src/main.c    ****   normalizedfreq = k * f_step_normalized;
 861              		.loc 1 145 0
 862 0074 36A1     		adr	r1, .L46+8
 863 0076 D1E90001 		ldrd	r0, [r1]
 864 007a 434B     		ldr	r3, .L46+64
 865 007c C3E90001 		strd	r0, [r3]
 146:Src/main.c    ****   w_real = 2.0 * cos(2.0 * PI * normalizedfreq);
 866              		.loc 1 146 0
 867 0080 35A1     		adr	r1, .L46+16
 868 0082 D1E90001 		ldrd	r0, [r1]
 869 0086 414B     		ldr	r3, .L46+68
 870 0088 C3E90001 		strd	r0, [r3]
 147:Src/main.c    ****   /* USER CODE END 2 */
 871              		.loc 1 147 0
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s 			page 25


 872 008c 34A1     		adr	r1, .L46+24
 873 008e D1E90001 		ldrd	r0, [r1]
 874 0092 3F4B     		ldr	r3, .L46+72
 875 0094 C3E90001 		strd	r0, [r3]
 876              	.L44:
 877              	.LBB7:
 157:Src/main.c    ****       ssd1306_Fill(Black);
 878              		.loc 1 157 0
 879 0098 0D20     		movs	r0, #13
 880 009a FFF7FEFF 		bl	malloc
 881              	.LVL61:
 882 009e 0546     		mov	r5, r0
 883              	.LVL62:
 158:Src/main.c    ****       ssd1306_SetCursor(0, 0);
 884              		.loc 1 158 0
 885 00a0 0020     		movs	r0, #0
 886              	.LVL63:
 887 00a2 FFF7FEFF 		bl	ssd1306_Fill
 888              	.LVL64:
 159:Src/main.c    ****       sprintf(adc, "n: %d", (int)n);
 889              		.loc 1 159 0
 890 00a6 0020     		movs	r0, #0
 891 00a8 0146     		mov	r1, r0
 892 00aa FFF7FEFF 		bl	ssd1306_SetCursor
 893              	.LVL65:
 160:Src/main.c    ****       ssd1306_WriteString(adc, Font_11x18, White);
 894              		.loc 1 160 0
 895 00ae 2846     		mov	r0, r5
 896 00b0 3849     		ldr	r1, .L46+76
 897 00b2 394B     		ldr	r3, .L46+80
 898 00b4 1A68     		ldr	r2, [r3]
 899 00b6 FFF7FEFF 		bl	sprintf
 900              	.LVL66:
 161:Src/main.c    ****       ssd1306_SetCursor(0, 18);
 901              		.loc 1 161 0
 902 00ba 2E4C     		ldr	r4, .L46+44
 903 00bc 2846     		mov	r0, r5
 904 00be 94E80600 		ldmia	r4, {r1, r2}
 905 00c2 0123     		movs	r3, #1
 906 00c4 FFF7FEFF 		bl	ssd1306_WriteString
 907              	.LVL67:
 162:Src/main.c    ****       sprintf(adc, "%d", (int)value_adc[0]);
 908              		.loc 1 162 0
 909 00c8 0020     		movs	r0, #0
 910 00ca 1221     		movs	r1, #18
 911 00cc FFF7FEFF 		bl	ssd1306_SetCursor
 912              	.LVL68:
 163:Src/main.c    ****       ssd1306_WriteString(adc, Font_11x18, White);
 913              		.loc 1 163 0
 914 00d0 2846     		mov	r0, r5
 915 00d2 3249     		ldr	r1, .L46+84
 916 00d4 264B     		ldr	r3, .L46+40
 917 00d6 1A68     		ldr	r2, [r3]
 918 00d8 FFF7FEFF 		bl	sprintf
 919              	.LVL69:
 164:Src/main.c    **** 
 920              		.loc 1 164 0
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s 			page 26


 921 00dc 2846     		mov	r0, r5
 922 00de 94E80600 		ldmia	r4, {r1, r2}
 923 00e2 0123     		movs	r3, #1
 924 00e4 FFF7FEFF 		bl	ssd1306_WriteString
 925              	.LVL70:
 166:Src/main.c    ****       int post_decimal = (int)((value - (double)pre_decimal) * 100);
 926              		.loc 1 166 0
 927 00e8 2D4B     		ldr	r3, .L46+88
 928 00ea D3E90067 		ldrd	r6, [r3]
 929 00ee 3046     		mov	r0, r6
 930 00f0 3946     		mov	r1, r7
 931 00f2 FFF7FEFF 		bl	__aeabi_d2iz
 932              	.LVL71:
 933 00f6 8046     		mov	r8, r0
 934              	.LVL72:
 167:Src/main.c    **** 
 935              		.loc 1 167 0
 936 00f8 FFF7FEFF 		bl	__aeabi_i2d
 937              	.LVL73:
 938 00fc 0246     		mov	r2, r0
 939 00fe 0B46     		mov	r3, r1
 940 0100 3046     		mov	r0, r6
 941 0102 3946     		mov	r1, r7
 942 0104 FFF7FEFF 		bl	__aeabi_dsub
 943              	.LVL74:
 944 0108 0022     		movs	r2, #0
 945 010a 264B     		ldr	r3, .L46+92
 946 010c FFF7FEFF 		bl	__aeabi_dmul
 947              	.LVL75:
 948 0110 FFF7FEFF 		bl	__aeabi_d2iz
 949              	.LVL76:
 169:Src/main.c    ****       ssd1306_SetCursor(0, 36);
 950              		.loc 1 169 0
 951 0114 244B     		ldr	r3, .L46+96
 952 0116 1A88     		ldrh	r2, [r3]
 953 0118 0090     		str	r0, [sp]
 954 011a 2846     		mov	r0, r5
 955              	.LVL77:
 956 011c 2349     		ldr	r1, .L46+100
 957 011e 4346     		mov	r3, r8
 958 0120 FFF7FEFF 		bl	sprintf
 959              	.LVL78:
 170:Src/main.c    ****       ssd1306_WriteString(adc, Font_11x18, White);
 960              		.loc 1 170 0
 961 0124 0020     		movs	r0, #0
 962 0126 2421     		movs	r1, #36
 963 0128 FFF7FEFF 		bl	ssd1306_SetCursor
 964              	.LVL79:
 171:Src/main.c    ****       ssd1306_UpdateScreen();
 965              		.loc 1 171 0
 966 012c 2846     		mov	r0, r5
 967 012e 94E80600 		ldmia	r4, {r1, r2}
 968 0132 0123     		movs	r3, #1
 969 0134 FFF7FEFF 		bl	ssd1306_WriteString
 970              	.LVL80:
 172:Src/main.c    ****       HAL_Delay(1000);
 971              		.loc 1 172 0
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s 			page 27


 972 0138 FFF7FEFF 		bl	ssd1306_UpdateScreen
 973              	.LVL81:
 173:Src/main.c    ****     }
 974              		.loc 1 173 0
 975 013c 4FF47A70 		mov	r0, #1000
 976 0140 FFF7FEFF 		bl	HAL_Delay
 977              	.LVL82:
 978              	.LBE7:
 179:Src/main.c    ****   /* USER CODE END 3 */
 979              		.loc 1 179 0
 980 0144 A8E7     		b	.L44
 981              	.L47:
 982 0146 00BF     		.align	3
 983              	.L46:
 984 0148 00000000 		.word	0
 985 014c E08B4440 		.word	1078234080
 986 0150 251F9F4B 		.word	1268719397
 987 0154 CE553840 		.word	1077433806
 988 0158 251F9F4B 		.word	1268719397
 989 015c CE55983F 		.word	1066948046
 990 0160 8C571840 		.word	1075337100
 991 0164 D8A4FF3F 		.word	1073718488
 992 0168 00000000 		.word	htim2
 993 016c 00000000 		.word	hadc1
 994 0170 00000000 		.word	.LANCHOR1
 995 0174 00000000 		.word	Font_11x18
 996 0178 0C000000 		.word	.LC1
 997 017c 00000000 		.word	f_step
 998 0180 0000503F 		.word	1062207488
 999 0184 00000000 		.word	f_step_normalized
 1000 0188 00000000 		.word	k
 1001 018c 00000000 		.word	normalizedfreq
 1002 0190 00000000 		.word	w_real
 1003 0194 14000000 		.word	.LC2
 1004 0198 00000000 		.word	.LANCHOR0
 1005 019c 1C000000 		.word	.LC3
 1006 01a0 00000000 		.word	value
 1007 01a4 00005940 		.word	1079574528
 1008 01a8 00000000 		.word	.LANCHOR6
 1009 01ac 20000000 		.word	.LC4
 1010              		.cfi_endproc
 1011              	.LFE123:
 1013              		.comm	w_real,8,8
 1014              		.comm	normalizedfreq,8,8
 1015              		.comm	k,8,8
 1016              		.comm	f_step_normalized,8,8
 1017              		.comm	f_step,8,8
 1018              		.global	total_power
 1019              		.global	y
 1020              		.global	d2
 1021              		.global	d1
 1022              		.global	yes_no
 1023              		.global	n
 1024              		.comm	prev_val,8,8
 1025              		.comm	value,8,8
 1026              		.global	calc
 1027              		.global	value_adc
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s 			page 28


 1028              		.global	dealt_with
 1029              		.comm	htim2,60,4
 1030              		.comm	hi2c1,84,4
 1031              		.comm	hdma_adc1,96,4
 1032              		.comm	hadc1,72,4
 1033              		.section	.bss.n,"aw",%nobits
 1034              		.align	2
 1035              		.set	.LANCHOR0,. + 0
 1038              	n:
 1039 0000 00000000 		.space	4
 1040              		.section	.bss.calc,"aw",%nobits
 1041              		.align	2
 1042              		.set	.LANCHOR7,. + 0
 1045              	calc:
 1046 0000 00000000 		.space	4
 1047              		.section	.bss.value_adc,"aw",%nobits
 1048              		.align	2
 1049              		.set	.LANCHOR1,. + 0
 1052              	value_adc:
 1053 0000 00000000 		.space	4
 1054              		.section	.bss.y,"aw",%nobits
 1055              		.align	3
 1056              		.set	.LANCHOR5,. + 0
 1059              	y:
 1060 0000 00000000 		.space	8
 1060      00000000 
 1061              		.section	.bss.yes_no,"aw",%nobits
 1062              		.align	1
 1063              		.set	.LANCHOR6,. + 0
 1066              	yes_no:
 1067 0000 0000     		.space	2
 1068              		.section	.data.total_power,"aw",%progbits
 1069              		.align	3
 1070              		.set	.LANCHOR2,. + 0
 1073              	total_power:
 1074 0000 00000000 		.word	0
 1075 0004 0000F03F 		.word	1072693248
 1076              		.section	.bss.d1,"aw",%nobits
 1077              		.align	3
 1078              		.set	.LANCHOR3,. + 0
 1081              	d1:
 1082 0000 00000000 		.space	8
 1082      00000000 
 1083              		.section	.bss.d2,"aw",%nobits
 1084              		.align	3
 1085              		.set	.LANCHOR4,. + 0
 1088              	d2:
 1089 0000 00000000 		.space	8
 1089      00000000 
 1090              		.section	.bss.dealt_with,"aw",%nobits
 1093              	dealt_with:
 1094 0000 00       		.space	1
 1095              		.section	.rodata.str1.4,"aMS",%progbits,1
 1096              		.align	2
 1097              	.LC0:
 1098 0000 5372632F 		.ascii	"Src/main.c\000"
 1098      6D61696E 
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s 			page 29


 1098      2E6300
 1099 000b 00       		.space	1
 1100              	.LC1:
 1101 000c 686F7272 		.ascii	"horray\000"
 1101      617900
 1102 0013 00       		.space	1
 1103              	.LC2:
 1104 0014 6E3A2025 		.ascii	"n: %d\000"
 1104      6400
 1105 001a 0000     		.space	2
 1106              	.LC3:
 1107 001c 256400   		.ascii	"%d\000"
 1108 001f 00       		.space	1
 1109              	.LC4:
 1110 0020 3F3A2025 		.ascii	"?: %d %d.%d\000"
 1110      64202564 
 1110      2E256400 
 1111              		.text
 1112              	.Letext0:
 1113              		.file 2 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 1114              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/machine/_default_types
 1115              		.file 4 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/sys/_stdint.h"
 1116              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1117              		.file 6 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h
 1118              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1119              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1120              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1121              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1122              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 1123              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 1124              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1125              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 1126              		.file 15 "Inc/fonts.h"
 1127              		.file 16 "Inc/ssd1306.h"
 1128              		.file 17 "Drivers/CMSIS/Include/core_cm4.h"
 1129              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1130              		.file 19 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/stdlib.h"
 1131              		.file 20 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/stdio.h"
 1132              		.file 21 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s 			page 30
=======
  71              	.LFE127:
  73              		.section	.text._Error_Handler,"ax",%progbits
  74              		.align	2
  75              		.global	_Error_Handler
  76              		.thumb
  77              		.thumb_func
  79              	_Error_Handler:
  80              	.LFB128:
 294:Src/main.c    **** 
 295:Src/main.c    **** /* USER CODE BEGIN 4 */
 296:Src/main.c    **** 
 297:Src/main.c    **** /* USER CODE END 4 */
 298:Src/main.c    **** 
 299:Src/main.c    **** /**
 300:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 301:Src/main.c    ****   * @param  file: The file name as string.
 302:Src/main.c    ****   * @param  line: The line in file as a number.
 303:Src/main.c    ****   * @retval None
 304:Src/main.c    ****   */
 305:Src/main.c    **** void _Error_Handler(char *file, int line)
 306:Src/main.c    **** {
  81              		.loc 1 306 0
  82              		.cfi_startproc
  83              		@ Volatile: function does not return.
  84              		@ args = 0, pretend = 0, frame = 0
  85              		@ frame_needed = 0, uses_anonymous_args = 0
  86              		@ link register save eliminated.
  87              	.LVL0:
  88              	.L6:
 307:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 308:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 309:Src/main.c    ****   while (1)
 310:Src/main.c    ****   {
 311:Src/main.c    ****   }
  89              		.loc 1 311 0 discriminator 1
  90 0000 FEE7     		b	.L6
  91              		.cfi_endproc
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc8BMQRz.s 			page 8


  92              	.LFE128:
  94 0002 00BF     		.section	.text.MX_ADC1_Init,"ax",%progbits
  95              		.align	2
  96              		.thumb
  97              		.thumb_func
  99              	MX_ADC1_Init:
 100              	.LFB125:
 232:Src/main.c    **** 
 101              		.loc 1 232 0
 102              		.cfi_startproc
 103              		@ args = 0, pretend = 0, frame = 16
 104              		@ frame_needed = 0, uses_anonymous_args = 0
 105 0000 00B5     		push	{lr}
 106              	.LCFI2:
 107              		.cfi_def_cfa_offset 4
 108              		.cfi_offset 14, -4
 109 0002 85B0     		sub	sp, sp, #20
 110              	.LCFI3:
 111              		.cfi_def_cfa_offset 24
 238:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 112              		.loc 1 238 0
 113 0004 1548     		ldr	r0, .L11
 114 0006 164B     		ldr	r3, .L11+4
 115 0008 0360     		str	r3, [r0]
 239:Src/main.c    ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 116              		.loc 1 239 0
 117 000a 4FF48033 		mov	r3, #65536
 118 000e 4360     		str	r3, [r0, #4]
 240:Src/main.c    ****   hadc1.Init.ScanConvMode = DISABLE;
 119              		.loc 1 240 0
 120 0010 0023     		movs	r3, #0
 121 0012 8360     		str	r3, [r0, #8]
 241:Src/main.c    ****   hadc1.Init.ContinuousConvMode = ENABLE;
 122              		.loc 1 241 0
 123 0014 0361     		str	r3, [r0, #16]
 242:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 124              		.loc 1 242 0
 125 0016 0122     		movs	r2, #1
 126 0018 8261     		str	r2, [r0, #24]
 243:Src/main.c    ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 127              		.loc 1 243 0
 128 001a 0362     		str	r3, [r0, #32]
 244:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 129              		.loc 1 244 0
 130 001c C362     		str	r3, [r0, #44]
 245:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 131              		.loc 1 245 0
 132 001e 1149     		ldr	r1, .L11+8
 133 0020 8162     		str	r1, [r0, #40]
 246:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 134              		.loc 1 246 0
 135 0022 C360     		str	r3, [r0, #12]
 247:Src/main.c    ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 136              		.loc 1 247 0
 137 0024 C261     		str	r2, [r0, #28]
 248:Src/main.c    ****   hadc1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 138              		.loc 1 248 0
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc8BMQRz.s 			page 9


 139 0026 0363     		str	r3, [r0, #48]
 249:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 140              		.loc 1 249 0
 141 0028 4361     		str	r3, [r0, #20]
 250:Src/main.c    ****   {
 142              		.loc 1 250 0
 143 002a FFF7FEFF 		bl	HAL_ADC_Init
 144              	.LVL1:
 145 002e 18B1     		cbz	r0, .L8
 252:Src/main.c    ****   }
 146              		.loc 1 252 0
 147 0030 0D48     		ldr	r0, .L11+12
 148 0032 FC21     		movs	r1, #252
 149 0034 FFF7FEFF 		bl	_Error_Handler
 150              	.LVL2:
 151              	.L8:
 257:Src/main.c    ****   sConfig.Rank = 1;
 152              		.loc 1 257 0
 153 0038 0023     		movs	r3, #0
 154 003a 0093     		str	r3, [sp]
 258:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 155              		.loc 1 258 0
 156 003c 0122     		movs	r2, #1
 157 003e 0192     		str	r2, [sp, #4]
 259:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 158              		.loc 1 259 0
 159 0040 0293     		str	r3, [sp, #8]
 260:Src/main.c    ****   {
 160              		.loc 1 260 0
 161 0042 0648     		ldr	r0, .L11
 162 0044 6946     		mov	r1, sp
 163 0046 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 164              	.LVL3:
 165 004a 20B1     		cbz	r0, .L7
 262:Src/main.c    ****   }
 166              		.loc 1 262 0
 167 004c 0648     		ldr	r0, .L11+12
 168 004e 4FF48371 		mov	r1, #262
 169 0052 FFF7FEFF 		bl	_Error_Handler
 170              	.LVL4:
 171              	.L7:
 264:Src/main.c    **** 
 172              		.loc 1 264 0
 173 0056 05B0     		add	sp, sp, #20
 174              	.LCFI4:
 175              		.cfi_def_cfa_offset 4
 176              		@ sp needed
 177 0058 5DF804FB 		ldr	pc, [sp], #4
 178              	.L12:
 179              		.align	2
 180              	.L11:
 181 005c 00000000 		.word	hadc1
 182 0060 00200140 		.word	1073815552
 183 0064 0100000F 		.word	251658241
 184 0068 00000000 		.word	.LC0
 185              		.cfi_endproc
 186              	.LFE125:
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc8BMQRz.s 			page 10


 188              		.section	.text.MX_I2C1_Init,"ax",%progbits
 189              		.align	2
 190              		.thumb
 191              		.thumb_func
 193              	MX_I2C1_Init:
 194              	.LFB126:
 268:Src/main.c    **** 
 195              		.loc 1 268 0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 0
 198              		@ frame_needed = 0, uses_anonymous_args = 0
 199 0000 08B5     		push	{r3, lr}
 200              	.LCFI5:
 201              		.cfi_def_cfa_offset 8
 202              		.cfi_offset 3, -8
 203              		.cfi_offset 14, -4
 270:Src/main.c    ****   hi2c1.Init.ClockSpeed = 100000;
 204              		.loc 1 270 0
 205 0002 0C48     		ldr	r0, .L16
 206 0004 0C4B     		ldr	r3, .L16+4
 207 0006 0360     		str	r3, [r0]
 271:Src/main.c    ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 208              		.loc 1 271 0
 209 0008 0C4B     		ldr	r3, .L16+8
 210 000a 4360     		str	r3, [r0, #4]
 272:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
 211              		.loc 1 272 0
 212 000c 0023     		movs	r3, #0
 213 000e 8360     		str	r3, [r0, #8]
 273:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 214              		.loc 1 273 0
 215 0010 C360     		str	r3, [r0, #12]
 274:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 216              		.loc 1 274 0
 217 0012 4FF48042 		mov	r2, #16384
 218 0016 0261     		str	r2, [r0, #16]
 275:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
 219              		.loc 1 275 0
 220 0018 4361     		str	r3, [r0, #20]
 276:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 221              		.loc 1 276 0
 222 001a 8361     		str	r3, [r0, #24]
 277:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 223              		.loc 1 277 0
 224 001c C361     		str	r3, [r0, #28]
 278:Src/main.c    ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 225              		.loc 1 278 0
 226 001e 0362     		str	r3, [r0, #32]
 279:Src/main.c    ****   {
 227              		.loc 1 279 0
 228 0020 FFF7FEFF 		bl	HAL_I2C_Init
 229              	.LVL5:
 230 0024 20B1     		cbz	r0, .L13
 281:Src/main.c    ****   }
 231              		.loc 1 281 0
 232 0026 0648     		ldr	r0, .L16+12
 233 0028 40F21911 		movw	r1, #281
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc8BMQRz.s 			page 11


 234 002c FFF7FEFF 		bl	_Error_Handler
 235              	.LVL6:
 236              	.L13:
 237 0030 08BD     		pop	{r3, pc}
 238              	.L17:
 239 0032 00BF     		.align	2
 240              	.L16:
 241 0034 00000000 		.word	hi2c1
 242 0038 00540040 		.word	1073763328
 243 003c A0860100 		.word	100000
 244 0040 00000000 		.word	.LC0
 245              		.cfi_endproc
 246              	.LFE126:
 248              		.section	.text.SystemClock_Config,"ax",%progbits
 249              		.align	2
 250              		.global	SystemClock_Config
 251              		.thumb
 252              		.thumb_func
 254              	SystemClock_Config:
 255              	.LFB124:
 178:Src/main.c    **** 
 256              		.loc 1 178 0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 80
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260 0000 00B5     		push	{lr}
 261              	.LCFI6:
 262              		.cfi_def_cfa_offset 4
 263              		.cfi_offset 14, -4
 264 0002 95B0     		sub	sp, sp, #84
 265              	.LCFI7:
 266              		.cfi_def_cfa_offset 88
 267              	.LBB4:
 185:Src/main.c    **** 
 268              		.loc 1 185 0
 269 0004 0022     		movs	r2, #0
 270 0006 0192     		str	r2, [sp, #4]
 271 0008 294B     		ldr	r3, .L22
 272 000a 196C     		ldr	r1, [r3, #64]
 273 000c 41F08051 		orr	r1, r1, #268435456
 274 0010 1964     		str	r1, [r3, #64]
 275 0012 1B6C     		ldr	r3, [r3, #64]
 276 0014 03F08053 		and	r3, r3, #268435456
 277 0018 0193     		str	r3, [sp, #4]
 278 001a 019B     		ldr	r3, [sp, #4]
 279              	.LBE4:
 280              	.LBB5:
 187:Src/main.c    **** 
 281              		.loc 1 187 0
 282 001c 0292     		str	r2, [sp, #8]
 283 001e 2549     		ldr	r1, .L22+4
 284 0020 0B68     		ldr	r3, [r1]
 285 0022 23F44043 		bic	r3, r3, #49152
 286 0026 43F40043 		orr	r3, r3, #32768
 287 002a 0B60     		str	r3, [r1]
 288 002c 0B68     		ldr	r3, [r1]
 289 002e 03F44043 		and	r3, r3, #49152
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc8BMQRz.s 			page 12


 290 0032 0293     		str	r3, [sp, #8]
 291 0034 029B     		ldr	r3, [sp, #8]
 292              	.LBE5:
 191:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 293              		.loc 1 191 0
 294 0036 0223     		movs	r3, #2
 295 0038 0893     		str	r3, [sp, #32]
 192:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 296              		.loc 1 192 0
 297 003a 0121     		movs	r1, #1
 298 003c 0B91     		str	r1, [sp, #44]
 193:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 299              		.loc 1 193 0
 300 003e 1021     		movs	r1, #16
 301 0040 0C91     		str	r1, [sp, #48]
 194:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 302              		.loc 1 194 0
 303 0042 0E93     		str	r3, [sp, #56]
 195:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 304              		.loc 1 195 0
 305 0044 0F92     		str	r2, [sp, #60]
 196:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 84;
 306              		.loc 1 196 0
 307 0046 0822     		movs	r2, #8
 308 0048 1092     		str	r2, [sp, #64]
 197:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 309              		.loc 1 197 0
 310 004a 5422     		movs	r2, #84
 311 004c 1192     		str	r2, [sp, #68]
 198:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 312              		.loc 1 198 0
 313 004e 1293     		str	r3, [sp, #72]
 199:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 314              		.loc 1 199 0
 315 0050 0423     		movs	r3, #4
 316 0052 1393     		str	r3, [sp, #76]
 200:Src/main.c    ****   {
 317              		.loc 1 200 0
 318 0054 08A8     		add	r0, sp, #32
 319 0056 FFF7FEFF 		bl	HAL_RCC_OscConfig
 320              	.LVL7:
 321 005a 18B1     		cbz	r0, .L19
 202:Src/main.c    ****   }
 322              		.loc 1 202 0
 323 005c 1648     		ldr	r0, .L22+8
 324 005e CA21     		movs	r1, #202
 325 0060 FFF7FEFF 		bl	_Error_Handler
 326              	.LVL8:
 327              	.L19:
 207:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 328              		.loc 1 207 0
 329 0064 0F23     		movs	r3, #15
 330 0066 0393     		str	r3, [sp, #12]
 208:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 331              		.loc 1 208 0
 332 0068 0221     		movs	r1, #2
 333 006a 0491     		str	r1, [sp, #16]
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc8BMQRz.s 			page 13


 209:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 334              		.loc 1 209 0
 335 006c 0023     		movs	r3, #0
 336 006e 0593     		str	r3, [sp, #20]
 210:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 337              		.loc 1 210 0
 338 0070 4FF48052 		mov	r2, #4096
 339 0074 0692     		str	r2, [sp, #24]
 211:Src/main.c    **** 
 340              		.loc 1 211 0
 341 0076 0793     		str	r3, [sp, #28]
 213:Src/main.c    ****   {
 342              		.loc 1 213 0
 343 0078 03A8     		add	r0, sp, #12
 344 007a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 345              	.LVL9:
 346 007e 18B1     		cbz	r0, .L20
 215:Src/main.c    ****   }
 347              		.loc 1 215 0
 348 0080 0D48     		ldr	r0, .L22+8
 349 0082 D721     		movs	r1, #215
 350 0084 FFF7FEFF 		bl	_Error_Handler
 351              	.LVL10:
 352              	.L20:
 220:Src/main.c    **** 
 353              		.loc 1 220 0
 354 0088 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 355              	.LVL11:
 356 008c 0B4B     		ldr	r3, .L22+12
 357 008e A3FB0030 		umull	r3, r0, r3, r0
 358 0092 8009     		lsrs	r0, r0, #6
 359 0094 FFF7FEFF 		bl	HAL_SYSTICK_Config
 360              	.LVL12:
 224:Src/main.c    **** 
 361              		.loc 1 224 0
 362 0098 0420     		movs	r0, #4
 363 009a FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 364              	.LVL13:
 227:Src/main.c    **** }
 365              		.loc 1 227 0
 366 009e 4FF0FF30 		mov	r0, #-1
 367 00a2 0021     		movs	r1, #0
 368 00a4 0A46     		mov	r2, r1
 369 00a6 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 370              	.LVL14:
 228:Src/main.c    **** 
 371              		.loc 1 228 0
 372 00aa 15B0     		add	sp, sp, #84
 373              	.LCFI8:
 374              		.cfi_def_cfa_offset 4
 375              		@ sp needed
 376 00ac 5DF804FB 		ldr	pc, [sp], #4
 377              	.L23:
 378              		.align	2
 379              	.L22:
 380 00b0 00380240 		.word	1073887232
 381 00b4 00700040 		.word	1073770496
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc8BMQRz.s 			page 14


 382 00b8 00000000 		.word	.LC0
 383 00bc D34D6210 		.word	274877907
 384              		.cfi_endproc
 385              	.LFE124:
 387              		.global	__aeabi_d2iz
 388              		.global	__aeabi_i2d
 389              		.global	__aeabi_dsub
 390              		.section	.text.main,"ax",%progbits
 391              		.align	2
 392              		.global	main
 393              		.thumb
 394              		.thumb_func
 396              	main:
 397              	.LFB123:
  83:Src/main.c    ****   /* USER CODE BEGIN 1 */
 398              		.loc 1 83 0
 399              		.cfi_startproc
 400              		@ args = 0, pretend = 0, frame = 24
 401              		@ frame_needed = 0, uses_anonymous_args = 0
 402 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 403              	.LCFI9:
 404              		.cfi_def_cfa_offset 36
 405              		.cfi_offset 4, -36
 406              		.cfi_offset 5, -32
 407              		.cfi_offset 6, -28
 408              		.cfi_offset 7, -24
 409              		.cfi_offset 8, -20
 410              		.cfi_offset 9, -16
 411              		.cfi_offset 10, -12
 412              		.cfi_offset 11, -8
 413              		.cfi_offset 14, -4
 414 0004 87B0     		sub	sp, sp, #28
 415              	.LCFI10:
 416              		.cfi_def_cfa_offset 64
  91:Src/main.c    **** 
 417              		.loc 1 91 0
 418 0006 FFF7FEFF 		bl	HAL_Init
 419              	.LVL15:
  98:Src/main.c    **** 
 420              		.loc 1 98 0
 421 000a FFF7FEFF 		bl	SystemClock_Config
 422              	.LVL16:
 105:Src/main.c    ****   MX_ADC1_Init();
 423              		.loc 1 105 0
 424 000e FFF7FEFF 		bl	MX_GPIO_Init
 425              	.LVL17:
 106:Src/main.c    ****   MX_I2C1_Init();
 426              		.loc 1 106 0
 427 0012 FFF7FEFF 		bl	MX_ADC1_Init
 428              	.LVL18:
 107:Src/main.c    ****   /* USER CODE BEGIN 2 */
 429              		.loc 1 107 0
 430 0016 FFF7FEFF 		bl	MX_I2C1_Init
 431              	.LVL19:
 109:Src/main.c    ****   ssd1306_Init();
 432              		.loc 1 109 0
 433 001a 5E48     		ldr	r0, .L29
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc8BMQRz.s 			page 15


 434 001c FFF7FEFF 		bl	HAL_ADC_Start
 435              	.LVL20:
 110:Src/main.c    ****   ssd1306_Fill(Black);
 436              		.loc 1 110 0
 437 0020 FFF7FEFF 		bl	ssd1306_Init
 438              	.LVL21:
 111:Src/main.c    ****   ssd1306_WriteString("Good Morning", Font_11x18, White);
 439              		.loc 1 111 0
 440 0024 0020     		movs	r0, #0
 441 0026 FFF7FEFF 		bl	ssd1306_Fill
 442              	.LVL22:
 112:Src/main.c    ****   ssd1306_UpdateScreen();
 443              		.loc 1 112 0
 444 002a 5B4B     		ldr	r3, .L29+4
 445 002c 5B48     		ldr	r0, .L29+8
 446 002e 93E80600 		ldmia	r3, {r1, r2}
 447 0032 0123     		movs	r3, #1
 448 0034 FFF7FEFF 		bl	ssd1306_WriteString
 449              	.LVL23:
 113:Src/main.c    ****   HAL_Delay(3000);
 450              		.loc 1 113 0
 451 0038 FFF7FEFF 		bl	ssd1306_UpdateScreen
 452              	.LVL24:
 114:Src/main.c    ****   /* USER CODE END 2 */
 453              		.loc 1 114 0
 454 003c 40F6B830 		movw	r0, #3000
 455 0040 FFF7FEFF 		bl	HAL_Delay
 456              	.LVL25:
 121:Src/main.c    ****   char *adc = (char *)malloc(13 * sizeof(char));
 457              		.loc 1 121 0
 458 0044 6846     		mov	r0, sp
 459 0046 4FF48061 		mov	r1, #1024
 460 004a FFF7FEFF 		bl	circ_bufsum_init
 461              	.LVL26:
 122:Src/main.c    ****   char *adc1 = (char *)malloc(13 * sizeof(char));
 462              		.loc 1 122 0
 463 004e 0D20     		movs	r0, #13
 464 0050 FFF7FEFF 		bl	malloc
 465              	.LVL27:
 466 0054 8246     		mov	r10, r0
 467              	.LVL28:
 123:Src/main.c    ****   uint16_t n = 0;
 468              		.loc 1 123 0
 469 0056 0D20     		movs	r0, #13
 470              	.LVL29:
 471 0058 FFF7FEFF 		bl	malloc
 472              	.LVL30:
 473 005c 8046     		mov	r8, r0
 474              	.LVL31:
 125:Src/main.c    ****   while (1)
 475              		.loc 1 125 0
 476 005e 5048     		ldr	r0, .L29+12
 477              	.LVL32:
 478 0060 5049     		ldr	r1, .L29+16
 479 0062 FFF7FEFF 		bl	fopen
 480              	.LVL33:
 481 0066 8146     		mov	r9, r0
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc8BMQRz.s 			page 16


 482              	.LVL34:
 124:Src/main.c    ****   FILE *f00 = fopen("realDat.txt", "w");
 483              		.loc 1 124 0
 484 0068 0024     		movs	r4, #0
 485              	.LVL35:
 486              	.L25:
 129:Src/main.c    ****     {
 487              		.loc 1 129 0
 488 006a 40F2FE33 		movw	r3, #1022
 489 006e 9C42     		cmp	r4, r3
 490 0070 2AD8     		bhi	.L26
 491              	.LBB6:
 131:Src/main.c    ****       int real_val = HAL_ADC_GetValue(&hadc1);
 492              		.loc 1 131 0
 493 0072 484D     		ldr	r5, .L29
 494 0074 2846     		mov	r0, r5
 495 0076 4FF47A71 		mov	r1, #1000
 496 007a FFF7FEFF 		bl	HAL_ADC_PollForConversion
 497              	.LVL36:
 132:Src/main.c    ****       circ_bufsum_put(&cbuf, real_val);
 498              		.loc 1 132 0
 499 007e 2846     		mov	r0, r5
 500 0080 FFF7FEFF 		bl	HAL_ADC_GetValue
 501              	.LVL37:
 502 0084 0546     		mov	r5, r0
 503              	.LVL38:
 133:Src/main.c    ****       fprintf(f00, "%d\n", real_val);
 504              		.loc 1 133 0
 505 0086 6846     		mov	r0, sp
 506              	.LVL39:
 507 0088 2946     		mov	r1, r5
 508 008a FFF7FEFF 		bl	circ_bufsum_put
 509              	.LVL40:
 134:Src/main.c    ****       sprintf(adc1, "%d", n);
 510              		.loc 1 134 0
 511 008e 4846     		mov	r0, r9
 512 0090 4549     		ldr	r1, .L29+20
 513 0092 2A46     		mov	r2, r5
 514 0094 FFF7FEFF 		bl	fprintf
 515              	.LVL41:
 135:Src/main.c    ****       ssd1306_SetCursor(0, 0);
 516              		.loc 1 135 0
 517 0098 4046     		mov	r0, r8
 518 009a 4449     		ldr	r1, .L29+24
 519 009c 2246     		mov	r2, r4
 520 009e FFF7FEFF 		bl	sprintf
 521              	.LVL42:
 136:Src/main.c    ****       ssd1306_Fill(Black);
 522              		.loc 1 136 0
 523 00a2 0020     		movs	r0, #0
 524 00a4 0146     		mov	r1, r0
 525 00a6 FFF7FEFF 		bl	ssd1306_SetCursor
 526              	.LVL43:
 137:Src/main.c    ****       ssd1306_WriteString(adc1, Font_11x18, White);
 527              		.loc 1 137 0
 528 00aa 0020     		movs	r0, #0
 529 00ac FFF7FEFF 		bl	ssd1306_Fill
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc8BMQRz.s 			page 17


 530              	.LVL44:
 138:Src/main.c    ****       ssd1306_UpdateScreen();
 531              		.loc 1 138 0
 532 00b0 394B     		ldr	r3, .L29+4
 533 00b2 4046     		mov	r0, r8
 534 00b4 93E80600 		ldmia	r3, {r1, r2}
 535 00b8 0123     		movs	r3, #1
 536 00ba FFF7FEFF 		bl	ssd1306_WriteString
 537              	.LVL45:
 139:Src/main.c    ****       n++;
 538              		.loc 1 139 0
 539 00be FFF7FEFF 		bl	ssd1306_UpdateScreen
 540              	.LVL46:
 140:Src/main.c    ****     }
 541              		.loc 1 140 0
 542 00c2 0134     		adds	r4, r4, #1
 543              	.LVL47:
 544 00c4 A4B2     		uxth	r4, r4
 545              	.LVL48:
 546              	.LBE6:
 547 00c6 D0E7     		b	.L25
 548              	.LVL49:
 549              	.L26:
 550              	.LBB7:
 145:Src/main.c    ****       HAL_ADC_PollForConversion(&hadc1, 1000);
 551              		.loc 1 145 0
 552 00c8 0134     		adds	r4, r4, #1
 553              	.LVL50:
 554 00ca A4B2     		uxth	r4, r4
 555              	.LVL51:
 146:Src/main.c    ****       int val = HAL_ADC_GetValue(&hadc1);
 556              		.loc 1 146 0
 557 00cc 314D     		ldr	r5, .L29
 558 00ce 2846     		mov	r0, r5
 559 00d0 4FF47A71 		mov	r1, #1000
 560 00d4 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 561              	.LVL52:
 147:Src/main.c    ****       fprintf(f00, "%d\n", val);
 562              		.loc 1 147 0
 563 00d8 2846     		mov	r0, r5
 564 00da FFF7FEFF 		bl	HAL_ADC_GetValue
 565              	.LVL53:
 566 00de 8346     		mov	fp, r0
 567              	.LVL54:
 148:Src/main.c    **** 
 568              		.loc 1 148 0
 569 00e0 4846     		mov	r0, r9
 570              	.LVL55:
 571 00e2 3149     		ldr	r1, .L29+20
 572 00e4 5A46     		mov	r2, fp
 573 00e6 FFF7FEFF 		bl	fprintf
 574              	.LVL56:
 150:Src/main.c    ****       value = goertzel(cbuf.buffer, SAMPLING_RATE, 1000, WINDOW_SIZE);
 575              		.loc 1 150 0
 576 00ea 6846     		mov	r0, sp
 577 00ec 5946     		mov	r1, fp
 578 00ee FFF7FEFF 		bl	circ_bufsum_put
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc8BMQRz.s 			page 18


 579              	.LVL57:
 151:Src/main.c    ****       int pre_decimal = (int)value / 1;
 580              		.loc 1 151 0
 581 00f2 0098     		ldr	r0, [sp]
 582 00f4 2E49     		ldr	r1, .L29+28
 583 00f6 4FF47A72 		mov	r2, #1000
 584 00fa 4FF48063 		mov	r3, #1024
 585 00fe FFF7FEFF 		bl	goertzel
 586              	.LVL58:
 587 0102 57EC106B 		fmrrd	r6, r7, d0
 588              	.LVL59:
 152:Src/main.c    ****       int post_decimal = value - pre_decimal;
 589              		.loc 1 152 0
 590 0106 10EE100A 		fmrs	r0, s0	@ int
 591 010a 3946     		mov	r1, r7
 592 010c FFF7FEFF 		bl	__aeabi_d2iz
 593              	.LVL60:
 594 0110 0546     		mov	r5, r0
 595              	.LVL61:
 153:Src/main.c    ****       ssd1306_Fill(Black);
 596              		.loc 1 153 0
 597 0112 FFF7FEFF 		bl	__aeabi_i2d
 598              	.LVL62:
 599 0116 0246     		mov	r2, r0
 600 0118 0B46     		mov	r3, r1
 601 011a 3046     		mov	r0, r6
 602 011c 3946     		mov	r1, r7
 603 011e FFF7FEFF 		bl	__aeabi_dsub
 604              	.LVL63:
 605 0122 FFF7FEFF 		bl	__aeabi_d2iz
 606              	.LVL64:
 607 0126 0646     		mov	r6, r0
 608              	.LVL65:
 154:Src/main.c    ****       sprintf(adc, "P: %d.%d", pre_decimal, post_decimal);
 609              		.loc 1 154 0
 610 0128 0020     		movs	r0, #0
 611              	.LVL66:
 612 012a FFF7FEFF 		bl	ssd1306_Fill
 613              	.LVL67:
 155:Src/main.c    ****       ssd1306_SetCursor(0, 0);
 614              		.loc 1 155 0
 615 012e 5046     		mov	r0, r10
 616 0130 2049     		ldr	r1, .L29+32
 617 0132 2A46     		mov	r2, r5
 618 0134 3346     		mov	r3, r6
 619 0136 FFF7FEFF 		bl	sprintf
 620              	.LVL68:
 156:Src/main.c    ****       ssd1306_WriteString(adc, Font_11x18, White);
 621              		.loc 1 156 0
 622 013a 0020     		movs	r0, #0
 623 013c 0146     		mov	r1, r0
 624 013e FFF7FEFF 		bl	ssd1306_SetCursor
 625              	.LVL69:
 157:Src/main.c    ****       sprintf(adc, "N: %d", n);
 626              		.loc 1 157 0
 627 0142 154D     		ldr	r5, .L29+4
 628              	.LVL70:
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc8BMQRz.s 			page 19


 629 0144 5046     		mov	r0, r10
 630 0146 95E80600 		ldmia	r5, {r1, r2}
 631 014a 0123     		movs	r3, #1
 632 014c FFF7FEFF 		bl	ssd1306_WriteString
 633              	.LVL71:
 158:Src/main.c    ****       ssd1306_SetCursor(0, 18);
 634              		.loc 1 158 0
 635 0150 5046     		mov	r0, r10
 636 0152 1949     		ldr	r1, .L29+36
 637 0154 2246     		mov	r2, r4
 638 0156 FFF7FEFF 		bl	sprintf
 639              	.LVL72:
 159:Src/main.c    ****       ssd1306_WriteString(adc, Font_11x18, White);
 640              		.loc 1 159 0
 641 015a 0020     		movs	r0, #0
 642 015c 1221     		movs	r1, #18
 643 015e FFF7FEFF 		bl	ssd1306_SetCursor
 644              	.LVL73:
 160:Src/main.c    ****       sprintf(adc, "V: %d", val);
 645              		.loc 1 160 0
 646 0162 5046     		mov	r0, r10
 647 0164 95E80600 		ldmia	r5, {r1, r2}
 648 0168 0123     		movs	r3, #1
 649 016a FFF7FEFF 		bl	ssd1306_WriteString
 650              	.LVL74:
 161:Src/main.c    ****       ssd1306_SetCursor(0, 36);
 651              		.loc 1 161 0
 652 016e 5046     		mov	r0, r10
 653 0170 1249     		ldr	r1, .L29+40
 654 0172 5A46     		mov	r2, fp
 655 0174 FFF7FEFF 		bl	sprintf
 656              	.LVL75:
 162:Src/main.c    ****       ssd1306_WriteString(adc, Font_11x18, White);
 657              		.loc 1 162 0
 658 0178 0020     		movs	r0, #0
 659 017a 2421     		movs	r1, #36
 660 017c FFF7FEFF 		bl	ssd1306_SetCursor
 661              	.LVL76:
 163:Src/main.c    ****       ssd1306_UpdateScreen();
 662              		.loc 1 163 0
 663 0180 5046     		mov	r0, r10
 664 0182 95E80600 		ldmia	r5, {r1, r2}
 665 0186 0123     		movs	r3, #1
 666 0188 FFF7FEFF 		bl	ssd1306_WriteString
 667              	.LVL77:
 164:Src/main.c    ****     }
 668              		.loc 1 164 0
 669 018c FFF7FEFF 		bl	ssd1306_UpdateScreen
 670              	.LVL78:
 671 0190 6BE7     		b	.L25
 672              	.L30:
 673 0192 00BF     		.align	2
 674              	.L29:
 675 0194 00000000 		.word	hadc1
 676 0198 00000000 		.word	Font_11x18
 677 019c 0C000000 		.word	.LC1
 678 01a0 1C000000 		.word	.LC2
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc8BMQRz.s 			page 20


 679 01a4 28000000 		.word	.LC3
 680 01a8 2C000000 		.word	.LC4
 681 01ac 30000000 		.word	.LC5
 682 01b0 C05C1500 		.word	1400000
 683 01b4 34000000 		.word	.LC6
 684 01b8 40000000 		.word	.LC7
 685 01bc 48000000 		.word	.LC8
 686              	.LBE7:
 687              		.cfi_endproc
 688              	.LFE123:
 690              		.comm	hi2c1,84,4
 691              		.comm	hadc1,72,4
 692              		.section	.rodata.str1.4,"aMS",%progbits,1
 693              		.align	2
 694              	.LC0:
 695 0000 5372632F 		.ascii	"Src/main.c\000"
 695      6D61696E 
 695      2E6300
 696 000b 00       		.space	1
 697              	.LC1:
 698 000c 476F6F64 		.ascii	"Good Morning\000"
 698      204D6F72 
 698      6E696E67 
 698      00
 699 0019 000000   		.space	3
 700              	.LC2:
 701 001c 7265616C 		.ascii	"realDat.txt\000"
 701      4461742E 
 701      74787400 
 702              	.LC3:
 703 0028 7700     		.ascii	"w\000"
 704 002a 0000     		.space	2
 705              	.LC4:
 706 002c 25640A00 		.ascii	"%d\012\000"
 707              	.LC5:
 708 0030 256400   		.ascii	"%d\000"
 709 0033 00       		.space	1
 710              	.LC6:
 711 0034 503A2025 		.ascii	"P: %d.%d\000"
 711      642E2564 
 711      00
 712 003d 000000   		.space	3
 713              	.LC7:
 714 0040 4E3A2025 		.ascii	"N: %d\000"
 714      6400
 715 0046 0000     		.space	2
 716              	.LC8:
 717 0048 563A2025 		.ascii	"V: %d\000"
 717      6400
 718              		.text
 719              	.Letext0:
 720              		.file 2 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 721              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/machine/_default_types
 722              		.file 4 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/sys/_stdint.h"
 723              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 724              		.file 6 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h
 725              		.file 7 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/sys/lock.h"
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc8BMQRz.s 			page 21


 726              		.file 8 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/sys/_types.h"
 727              		.file 9 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/sys/reent.h"
 728              		.file 10 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/stdio.h"
 729              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 730              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 731              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 732              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 733              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 734              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 735              		.file 17 "Inc/fonts.h"
 736              		.file 18 "Inc/ssd1306.h"
 737              		.file 19 "Inc/circular_buffer.h"
 738              		.file 20 "Drivers/CMSIS/Include/core_cm4.h"
 739              		.file 21 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 740              		.file 22 "Inc/filter.h"
 741              		.file 23 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 742              		.file 24 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/stdlib.h"
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc8BMQRz.s 			page 22
>>>>>>> 8014290a4e73a4bcc694909df24c79fa8737d68c


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
<<<<<<< HEAD
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s:21     .text.MX_GPIO_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s:69     .text.MX_GPIO_Init:0000000000000034 $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s:74     .text.MX_DMA_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s:78     .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s:122    .text.MX_DMA_Init:0000000000000030 $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s:133    .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s:138    .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s:311    .text.HAL_ADC_ConvCpltCallback:0000000000000130 $d
                            *COM*:0000000000000008 w_real
                            *COM*:0000000000000008 value
                            *COM*:0000000000000008 prev_val
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s:329    .text._Error_Handler:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s:334    .text._Error_Handler:0000000000000000 _Error_Handler
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s:350    .text.MX_ADC1_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s:354    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s:440    .text.MX_ADC1_Init:0000000000000068 $d
                            *COM*:0000000000000048 hadc1
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s:447    .text.MX_I2C1_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s:451    .text.MX_I2C1_Init:0000000000000000 MX_I2C1_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s:499    .text.MX_I2C1_Init:0000000000000034 $d
                            *COM*:0000000000000054 hi2c1
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s:507    .text.MX_TIM2_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s:511    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s:624    .text.MX_TIM2_Init:000000000000009c $d
                            *COM*:000000000000003c htim2
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s:630    .text.SystemClock_Config:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s:635    .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s:761    .text.SystemClock_Config:00000000000000b0 $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s:771    .text.main:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s:776    .text.main:0000000000000000 main
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s:984    .text.main:0000000000000148 $d
                            *COM*:0000000000000008 f_step
                            *COM*:0000000000000008 f_step_normalized
                            *COM*:0000000000000008 k
                            *COM*:0000000000000008 normalizedfreq
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s:1073   .data.total_power:0000000000000000 total_power
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s:1059   .bss.y:0000000000000000 y
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s:1088   .bss.d2:0000000000000000 d2
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s:1081   .bss.d1:0000000000000000 d1
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s:1066   .bss.yes_no:0000000000000000 yes_no
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s:1038   .bss.n:0000000000000000 n
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s:1045   .bss.calc:0000000000000000 calc
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s:1052   .bss.value_adc:0000000000000000 value_adc
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s:1093   .bss.dealt_with:0000000000000000 dealt_with
                            *COM*:0000000000000060 hdma_adc1
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s:1034   .bss.n:0000000000000000 $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s:1041   .bss.calc:0000000000000000 $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s:1048   .bss.value_adc:0000000000000000 $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s:1055   .bss.y:0000000000000000 $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s:1062   .bss.yes_no:0000000000000000 $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s:1069   .data.total_power:0000000000000000 $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s:1077   .bss.d1:0000000000000000 $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s:1084   .bss.d2:0000000000000000 $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s:1094   .bss.dealt_with:0000000000000000 $d
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s 			page 31


/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccBANyHZ.s:1096   .rodata.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
__aeabi_ui2d
__aeabi_dsub
__aeabi_dmul
__aeabi_dadd
__aeabi_ddiv
__aeabi_dcmpgt
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_I2C_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
=======
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc8BMQRz.s:21     .text.MX_GPIO_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc8BMQRz.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc8BMQRz.s:69     .text.MX_GPIO_Init:0000000000000034 $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc8BMQRz.s:74     .text._Error_Handler:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc8BMQRz.s:79     .text._Error_Handler:0000000000000000 _Error_Handler
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc8BMQRz.s:95     .text.MX_ADC1_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc8BMQRz.s:99     .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc8BMQRz.s:181    .text.MX_ADC1_Init:000000000000005c $d
                            *COM*:0000000000000048 hadc1
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc8BMQRz.s:189    .text.MX_I2C1_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc8BMQRz.s:193    .text.MX_I2C1_Init:0000000000000000 MX_I2C1_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc8BMQRz.s:241    .text.MX_I2C1_Init:0000000000000034 $d
                            *COM*:0000000000000054 hi2c1
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc8BMQRz.s:249    .text.SystemClock_Config:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc8BMQRz.s:254    .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc8BMQRz.s:380    .text.SystemClock_Config:00000000000000b0 $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc8BMQRz.s:391    .text.main:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc8BMQRz.s:396    .text.main:0000000000000000 main
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc8BMQRz.s:675    .text.main:0000000000000194 $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc8BMQRz.s:693    .rodata.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_I2C_Init
>>>>>>> 8014290a4e73a4bcc694909df24c79fa8737d68c
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
<<<<<<< HEAD
__aeabi_d2iz
__aeabi_i2d
HAL_Init
ssd1306_Init
HAL_TIM_Base_Start_IT
HAL_ADC_Start_DMA
ssd1306_Fill
ssd1306_SetCursor
ssd1306_WriteString
ssd1306_UpdateScreen
HAL_Delay
malloc
sprintf
=======
HAL_NVIC_SetPriority
__aeabi_d2iz
__aeabi_i2d
__aeabi_dsub
HAL_Init
HAL_ADC_Start
ssd1306_Init
ssd1306_Fill
ssd1306_WriteString
ssd1306_UpdateScreen
HAL_Delay
circ_bufsum_init
malloc
fopen
HAL_ADC_PollForConversion
HAL_ADC_GetValue
circ_bufsum_put
fprintf
sprintf
ssd1306_SetCursor
goertzel
>>>>>>> 8014290a4e73a4bcc694909df24c79fa8737d68c
Font_11x18
